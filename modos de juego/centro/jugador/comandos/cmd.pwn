
CMD:freno(playerid)
{
	if(IsPlayerInAnyVehicle(playerid))
	{
		new coche = GetPlayerVehicleID(playerid);
		new nombre[MAX_PLAYER_NAME], string_freno[128], partes[7];
		GetPlayerName(playerid, nombre, sizeof(nombre));
		if(FrenodeMano[coche] == 1)
		{
			FrenodeMano[coche] = 0;
			if(idioma == 0) format(string_freno, sizeof(string_freno), "* %s quitó el freno de mano al vehículo.", nombre);
			if(idioma == 1) format(string_freno, sizeof(string_freno), "* %s took the hand brake the vehicle.", nombre);
			ProxDetector(30.0, playerid, string_freno, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return 1;
		}
		if(FrenodeMano[coche] == 0)
		{
			FrenodeMano[coche] = 1;
			GetVehiclePos(coche, VehFrenoPOS[coche][0], VehFrenoPOS[coche][1], VehFrenoPOS[coche][2]);
			GetVehicleZAngle(coche, VehFrenoPOS[coche][3]);
			SetVehicleVelocity(coche, 0, 0, 0);
			if(idioma == 0) format(string_freno, sizeof(string_freno), "* %s colocó el freno de mano al vehículo.", nombre);
			if(idioma == 1) format(string_freno, sizeof(string_freno), "* %s put the hand brake the vehicle.", nombre);
			ProxDetector(30.0, playerid, string_freno, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GetVehicleParamsEx(coche, partes[0], partes[1], partes[2], partes[3], partes[4], partes[5], partes[6]);
			SetVehicleParamsEx(coche,VEHICLE_PARAMS_OFF, partes[1], partes[2], partes[3], partes[4], partes[5], partes[6]);
			return 1;
		}
	}
	else
	{
		if(idioma == 0) return SendClientMessage(playerid, -1, "* Debés estar en un vehículo.");
		if(idioma == 1) return SendClientMessage(playerid, -1, "* You must be in a vehicle.");
	}
		return 1;
}
alias:freno("handbrake")

CMD:graffitis(playerid)
{
	new listitem,dialog[1000],string[150],TiempoEx[46];
	foreach(new i : Graffitis)
	{
		new Diff = (gettime() - Graffitis[i][Tiempo]), Dias, Horas, Minutos, Segundos;
		ConverTime(Diff, Dias, Horas, Minutos, Segundos);

		if(!Graffitis[i][Tiempo] && Graffitis[i][Creador] != PlayersDataOnline[playerid][NameOnline])
		{
			format(TiempoEx, sizeof(TiempoEx), "{00FF00}(disponible en %dd, %dh, %dm)", Dias, Horas, Minutos);
		}
		else
		{
			format(TiempoEx, sizeof(TiempoEx), "");
		}

		if(Graffitis[i][Creador] == PlayersDataOnline[playerid][NameOnline])
		{
			format(string,sizeof(string),"{00FF00}%d\t{00FF00}Tuya%s{00A2FF}(%d)\n",Graffitis[i][ObjetoID],TiempoEx,i);
		}
		else
		{
			format(string,sizeof(string),"{FF0000}%d\t{FF0000}Otra%s{00A2FF}(%d)\n",Graffitis[i][ObjetoID],TiempoEx,i);
		}

		strcat(dialog,string);
		PlayersData[playerid][ListItem][listitem] = i;
		listitem++;
	}
	ShowPlayerDialogEx(playerid,233,DIALOG_STYLE_TABLIST, "{00A2FF}Seleccione un graffiti a localizar", dialog, "Seleccionar", "Cerrar");
	return 1;
}

CMD:afk(playerid)
{
	new nombre[MAX_PLAYER_NAME], string1[256], string2[256];
	GetPlayerName(playerid, nombre, sizeof(nombre));
	format(string1, sizeof(string1), "*%s Ha ingresado en el modo AFK. (Ocupado/Fuera de Rol).", nombre);
	format(string2, sizeof(string1), "*%s Ha regresado del modo AFK. (Listo para rolear en PlayerLifeRP |PL:RP).", nombre);

	if (Afk[playerid] == 0)
	{

		GetSpawnInfo(playerid);
		PlayersDataOnline[playerid][Spawn]      = false;
		SetPlayerVirtualWorldEx(playerid, playerid);

		TogglePlayerControllableEx(playerid, 0);
		SetPlayerInteriorEx(playerid, 2);
		SetPlayerPos(playerid, -869.4185, 2308.8110, 161.4357);
		SetPlayerFacingAngle(playerid, 90);
		SetPlayerCameraPos(playerid, -867.1642, 2373.7236, 165.2521);
		SetPlayerCameraLookAt(playerid, -869.4185, 2308.8110, 161.4357);

		SendClientMessage(playerid, 0xFB0000FF, "Ahora estás en modo AFK. Para dejar de estarlo usa /afk nuevamente.");

		Afk[playerid] = 1;
		/*TogglePlayerControllable(playerid, false);
		SetCameraBehindPlayer(playerid);

//      	SendClientMessageToAll(0xFB0000FF, string1);
		SetPlayerVirtualWorld(playerid, 1337);*/ //Agregado 12/07/17
	}
	else if (Afk[playerid] == 1)
	{
		UpdateSpawnPlayer(playerid);
		PlayersDataOnline[playerid][StateDeath] = true;
		SpawnPlayerEx(playerid);

		PlayersDataOnline[playerid][Spawn]      = true;
		TogglePlayerControllableEx(playerid, 1);
		SetSpawnInfoEx(playerid);

		Afk[playerid] = 0;

		/*TogglePlayerControllable(playerid, true);
		SetCameraBehindPlayer(playerid);
		SendClientMessage(playerid, 0xE4FF00FF, "Ya no estás AFK! a Rolear! .");
//      	SendClientMessageToAll(0xE4FF00FF, string2);
		SetPlayerVirtualWorld(playerid, MundoOriginal); */ //Agregado 12/07/17
	}
	return 1;
}

CMD:world(playerid)
{
	new string[60], MundoVirt = GetPlayerVirtualWorld(playerid);
	format(string, sizeof(string), "Tu mundo virtual actual es el nº: %i", MundoVirt);
	SendClientMessage(playerid, 0xFFFFFFFF, string);
	return 1;
}

/*	new LenGet = strlen(cmdtext);
	for (new i = 0; i < LenGet; i++)
	{
	    if (cmdtext[i] == '}' || cmdtext[i] == '{')
	    {
	        cmdtext[i] = ' ';
	    }
	}
	if (PlayersData[playerid][Admin] >= 9 || PlayersDataOnline[playerid][State] == 3 && PlayersDataOnline[playerid][IsNotSilenciado])
	{
	    if (!PlayersDataOnline[playerid][InCamera])
	    {
		    if (strlen(cmdtext) > 1)
		    {
		    	printf("%s [ID: %i] || %s", PlayersDataOnline[playerid][NameOnline], playerid, cmdtext);

		        PlayersDataOnline[playerid][IsAFK] = false;

				// COMANDO: /Ayuda colorcar flag de admins deje para ejemplo*/
/*CMD:ayuda(playerid, params[])
{
	// COMANDO: /Ayuda Móvil
	else if (strcmp("/Ayuda Móvil", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12 ||
			 strcmp("/Ayuda Movil", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
	{
		SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
		SendInfoMessage(playerid, 1, "/Agenda - /N [Normal] - /Tirar Móvil - /Dar Móvil [ID] - /Llamar [Número] - /C (Colgar) - /D (Descolgar)", "Móvil:");
		SendInfoMessage(playerid, 1, "/Móvil - /Estado Móvil - /Ver Saldo - /Tirar Agenda - /Dar Agenda [ID] - /SMS [Número] - /Altavoz - /Ayuda GPS", "Móvil:");
	}
	// COMANDO: /Ayuda Habilidades
	else if (strcmp("/Ayuda Habilidades", cmdtext, true, 18) == 0 && strlen(cmdtext) == 18)
	{
		SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
		SendInfoMessage(playerid, 1, "1 - Normal", "Habilidades:");
		SendInfoMessage(playerid, 1, "2 - Boxeo", "Habilidades:");
		SendInfoMessage(playerid, 1, "3 - Kneehead", "Habilidades:");
		SendInfoMessage(playerid, 1, "4 - Kungfu", "Habilidades:");
		SendInfoMessage(playerid, 1, "5 - Elbow", "Habilidades:");
		SendInfoMessage(playerid, 1, "6 - Grabkick", "Habilidades:");
	}
	// COMANDO: /Ayuda Idiomas
	else if (strcmp("/Ayuda Idiomas", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
	{
		SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
		SendInfoMessage(playerid, 1, "/Al [Alemán] - /Fr [Francés] - /Po [Portugés] - /It [Italiano] - /In [Inglés] - /Ja [Japonés]", "Idiomas:");
	}
	// COMANDO: /Ayuda Llaves
	else if (strcmp("/Ayuda Llaves", cmdtext, true, 13) == 0 && strlen(cmdtext) == 13)
	{
		SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
		SendInfoMessage(playerid, 1, "/Llaves Coche - /Llaves Puerta - /Llaves PuertaEx - /Llaves Facción - /Llaves Refrigerador - /Llaves Casa", "Llaves:");
		SendInfoMessage(playerid, 1, "/Llaves Armario - /Llaves Garage - /Llaves GarageEx - /Llaves Amigos - /Llaves Amigos Veh - /Llaves Maletero", "Llaves:");

	}
	// COMANDO: /Ayuda Estados
	else if (strcmp("/Ayuda Estados", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
	{
		SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
		SendInfoMessage(playerid, 1, "/Estado OOC - /Estado Family - /Estado Radio - /Estado CNN - /Estado Móvil - /Estado Trabajo", "Estados:");
	}
	// COMANDO: /Ayuda Tirar
	else if (strcmp("/Ayuda Tirar", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
	{
		SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
		SendInfoMessage(playerid, 1, "/Tirar Coche [ID]- /Tirar Móvil - /Tirar Dados - /Tirar Patines - /Tirar Chaleco - /Tirar Arma - /Tirar Agenda", "Tirar:");
		SendInfoMessage(playerid, 1, "/Tirar Artículo [ID_Bolsa] - /Tirar Cartera [ID_Cartera] - /Tirar BBX", "Tirar: ");
	}
	// COMANDO: /Ayuda Lugares
	else if (strfind(cmdtext, "/Ayuda Lugares", true) == 0)
	{
		SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
		SendInfoMessage(playerid, 1, "/Talleres - /Hospitales - /Concesionarios - /Licencieros - /Bancos - /Depósitos - /Universidades", "Lugares: ");
		//SendInfoMessage(playerid, 1, "/Tirar Artículo [ID_Bolsa] - /Tirar Cartera [ID_Cartera]", "Tirar: ");
	}
	// COMANDO: /Ayuda Dar
	else if (strcmp("/Ayuda Dar", cmdtext, true, 10) == 0 && strlen(cmdtext) == 10)
	{
		SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
		SendInfoMessage(playerid, 1, "/Dar Arma [ID] - /Dar ArmaEx [ID] [Munición] - /Dar Chaleco [ID] - /Dar Drogas [ID] [Cantidad]", "Dar:");
		SendInfoMessage(playerid, 1, "/Dar Ganzúas [ID] [Cantidad] - /Dar Materiales [ID] [Cantidad] - /Dar Bombas [ID] [Cantidad] - /Dar Llaves [Amigo, Coche, AmigoVeh] [ID]", "Dar:");
		SendInfoMessage(playerid, 1, "/Dar Extorsión [ID] - /Dar Dados [ID] - /Dar Patines [ID] - /Dar Móvil [ID] - /Dar Agenda [ID] - /Dar Bolsa [ID]", "Dar:");
		SendInfoMessage(playerid, 1, "/Dar Artículo [ID] [ID_Bolsa] - /Dar Cartera [ID] [ID_Cartera] - /Dar BBX [ID]", "Dar:");
	}
	// COMANDO: /Ayuda Dar
	else if (strcmp("/Ayuda GPS", cmdtext, true, 10) == 0 && strlen(cmdtext) == 10)
	{
		SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
		SendInfoMessage(playerid, 1, "/GPS - /Ver Dirección - /Copiar Dirección", "GPS:");
	}
	// COMANDO: /Ayuda Radio
	else if (strcmp("/Ayuda Radio", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
	{
		SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
		SendInfoMessage(playerid, 1, "/R Radio] - /Cambiar Frecuencia - /Ver Frecuencia - /Estado Radio", "Radio:");
	}
	// COMANDO: /Ayuda Trabajo
	else if (strcmp("/Ayuda Trabajo", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
	{
		if (PlayersData[playerid][Job] != NINGUNO)
		{
			SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
			if (PlayersData[playerid][Job] == PESCA)
			{
				SendInfoMessage(playerid, 1, "/Pescar - /Vender Peces", "Pesca:");
				SendInfoMessage(playerid, 1, "Si quieres renunciar o cambiar de trabajo ve al lugar donde lo obtuviste, usa /Trabajos", "Pesca:");
			}
			else if (PlayersData[playerid][Job] == VENDEDOR_MOVIL)
			{
				SendInfoMessage(playerid, 1, "/Vender Móvil [ID] [$] [Número]", "Vendedor de Móviles:");
				SendInfoMessage(playerid, 1, "Si quieres renunciar o cambiar de trabajo ve al lugar donde lo obtuviste, usa /Trabajos", "Vendedor de Móviles:");
			}
			else if (PlayersData[playerid][Job] == TRANSPORTISTA)
			{
				SendInfoMessage(playerid, 1, "/Transportar", "Transportista:");
				SendInfoMessage(playerid, 1, "Si quieres renunciar o cambiar de trabajo ve al lugar donde lo obtuviste, usa /Trabajos", "Transportista:");
			}
			else if (PlayersData[playerid][Job] == MERCADER)
			{
				SendInfoMessage(playerid, 1, "/Mercadería", "Mercadero:");
				SendInfoMessage(playerid, 1, "Si quieres renunciar o cambiar de trabajo ve al lugar donde lo obtuviste, usa /Trabajos", "Mercadero:");
			}
			else if (PlayersData[playerid][Job] == CONDUCTOR)
			{
				SendInfoMessage(playerid, 1, "/Conducir", "Conductor:");
				SendInfoMessage(playerid, 1, "Si quieres renunciar o cambiar de trabajo ve al lugar donde lo obtuviste, usa /Trabajos", "Conductor:");
			}
			else if (PlayersData[playerid][Job] == MINERO)
			{
				SendInfoMessage(playerid, 1, "/Minar", "Minero:");
				SendInfoMessage(playerid, 1, "Si quieres renunciar o cambiar de trabajo ve al lugar donde lo obtuviste, usa /Trabajos", "Minero:");
			}
			else if (PlayersData[playerid][Job] == RECOLECTOR)
			{
				SendInfoMessage(playerid, 1, "/Recolectar", "Recolector:");
				SendInfoMessage(playerid, 1, "Si quieres renunciar o cambiar de trabajo ve al lugar donde lo obtuviste, usa /Trabajos", "Recolector:");
			}
			else if (PlayersData[playerid][Job] == FOTOGRAFO)
			{
				SendInfoMessage(playerid, 1, "/Fotografiar", "Fotografo:");
				SendInfoMessage(playerid, 1, "Si quieres renunciar o cambiar de trabajo ve al lugar donde lo obtuviste, usa /Trabajos", "Fotografo:");
			}
		}
		else
		{
			SendInfoMessage(playerid, 0, "963", "Tú no tienes trabajo, usá /Trabajos");
		}
	}
	// COMANDO: /Ayuda Facción
	else if (strcmp("/Ayuda Facción", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14 ||
			 strcmp("/Ayuda Faccion", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
	{
		if (PlayersData[playerid][Faccion] != CIVIL)
		{
			SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
			// GENERAL LIDERES
			if (PlayersData[playerid][Rango] == 0)
			{
				//SendInfoMessage(playerid, 1, "", "Facción:");
				SendInfoMessage(playerid, 1, "/Consultar Facción - /Depositar Facción [Cantidad] - /Retirar Facción [Cantidad]", "Facción:");
			}
			// GENERAL SUB-LIDERES
			if (PlayersData[playerid][Rango] <= 1)
			{
				SendInfoMessage(playerid, 1, "/Asignar [ID] - /Desasignar [ID] [SLOT] - /Ver Horas [ID] - /Reiniciar Horas [ID] - /Escoger Spawn [ID] [Spawnid]", "Facción:");
				SendInfoMessage(playerid, 1, "/Llaves Coche - /Invitar [ID] - /Rango [ID] [ID_RANGO] - /Expulsar [ID]", "Facción:");
			}
			// GOBIERNO
			if (PlayersData[playerid][Faccion] == GOBIERNO)
			{
				SendInfoMessage(playerid, 1, "/Dar Licencia Armas [ID] - /Gob [Texto] - /Ver Deposito - /Cambiar Ciudad [ID] - /Casar [ID] [ID]- /Divorciar [ID] [ID] - /Carnet [ID]", "Facción:");
				SendInfoMessage(playerid, 1, "AGENTES y DETECTIVES: /Datos [ID] - /Localizar Coche [Matricula] - /Localizar Persona [Teléfono] - /Proteger [ID]", "Facción:");
				SendInfoMessage(playerid, 1, "/Poner uniforme", "Faccion:");
			}
			// SAPD
			else if (PlayersData[playerid][Faccion] == SAPD)
			{
				SendInfoMessage(playerid, 1, "/Llamadas - /Quitar Licencia Armas [ID] - /Quitar Licencia Coche [ID] - /Quitar Licencia Camión [ID]", "Facción:");
				SendInfoMessage(playerid, 1, "/Quitar Licencia Vuelo [ID] - /Quitar Licencia Bote [ID] - /Quitar Licencia Pesca [ID] - /Quitar Licencia Moto [ID]", "Facción:");
				SendInfoMessage(playerid, 1, "/Quitar Licencia Tren [ID] - /Multar [ID] [$] [Razón] - /Esposar [ID] - /Recoger - /Poner Uniforme - /Sirena", "Facción:");
				SendInfoMessage(playerid, 1, "/Equipo - /Chequear [ID] - /Arrestar [ID] [Tiempo] - /Poner Candado [Razón] - /Meg [Texto] - /Mir - /Datos [ID]", "Facción:");
				SendInfoMessage(playerid, 1, "/Meter [ID] - /Autorizar [ID] - /Desactivar Bomba - /Alarmas - /Rga [Radio General Todos] - /Rg [Radio General] - /Estado Rg - /Estado Rgt", "Facción:");
				SendInfoMessage(playerid, 1, "/Decomisar [ID] - /Poner Cono - /Poner Valla - /Poner Pincho - /Ver Candado - /Credencial [ID] - /Callsign [Identificación] - /EP", "Facción:");
			}
			// LSMD
			else if (PlayersData[playerid][Faccion] == LSMD)
			{
				SendInfoMessage(playerid, 1, "/Gob [Texto] - /Llamadas - /Llamadas Bomberos - /Curar [ID] - /Estado Trabajo - /Obtener Extintor - /Debilitar Incendio", "Facción:");
				SendInfoMessage(playerid, 1, "/Poner Cono - /Poner Valla - /Recoger - /Rga [Radio Global] - /Rg [Radio General] - /Estado Rg - /Estado Rgt", "Facción:");
				SendInfoMessage(playerid, 1, "/Curar Enfermedad [ID] - /Examinar Enfermedad [ID] - /Carnet [ID] - /Poner uniforme", "Facción:");

				SendInfoMessage(playerid, 1, "/tomarcuerpo [ID] - /dejarcuerpo - /descambulancia", "Facción Cuerpos:");
			}
			// TAXI
			else if (PlayersData[playerid][Faccion] == TAXI)
			{
				SendInfoMessage(playerid, 1, "/Llamadas - /Estado Trabajo - /Estado Taxí - /Tren [Anuncio] - /Informar [Informe]", "Facción:");
				SendInfoMessage(playerid, 1, "/Estado Uber - /Estado Pro (Ambos solamente para colocar rotulo a Sultan Taxi/Uber) - /Carnet [ID] - /Poner uniforme", "Facción:");
			}
			// LICENCIEROS
			else if (PlayersData[playerid][Faccion] == LICENCIEROS)
			{
				SendInfoMessage(playerid, 1, "/Dar Idioma Alemán [ID] - /Dar Idioma Francés [ID] - /Dar Idioma Portugués [ID] - /Dar Idioma Italiano [ID]", "Facción:");
				SendInfoMessage(playerid, 1, "/Dar Idioma Inglés [ID] - /Dar Idioma Japonés [ID] - /Dar Licencia Coche [ID]", "Facción:");
				SendInfoMessage(playerid, 1, "/Dar Licencia Camión [ID] - /Dar Licencia Moto [ID] - /Dar Licencia Vuelo [ID] - /Dar Licencia Bote [ID]", "Facción:");
				SendInfoMessage(playerid, 1, "/Dar Licencia Pesca [ID] - /Dar Licencia Tren [ID] - /Dar Habilidad [ID] [ID_Habilidad] - /Precios Licencias", "Facción:");
				SendInfoMessage(playerid, 1, "/Prueba [ID] - Sirve para hacer un test de conducción de cualquier tipo de vehiculo - /Carnet [ID] - /Poner uniforme", "Facción:"); //Agregado 18/07/17 - Prueba de conducción
			}
			// NFS
			else if (PlayersData[playerid][Faccion] == NFS)
			{
				SendInfoMessage(playerid, 1, "/Vender Coche [ID] - /Aparcar NFS - /Renovar Coche [ID] - /Precio Coche - /Dropear - /Carnet [ID] - /Poner uniforme", "Facción:");
			}
			// CAMIONEROS
			else if (PlayersData[playerid][Faccion] == CAMIONEROS)
			{
				SendInfoMessage(playerid, 1, "/Obtener Mercancía - /Depositar Mercancía - /Abastecer Gasolinera - /Abastecer Negocio - /Ver Precio", "Facción:");
				SendInfoMessage(playerid, 1, "/Abastecer Almacén - /Almacén - /Llaves Almacén - /Consultar Almacén - /Depositar Almacén [Cantidad]", "Facción:");
				SendInfoMessage(playerid, 1, "/Retirar Almacén [Cantidad] - /Poner Cono - /Recoger - /Ver Deposito - /Carnet [ID] - /Poner uniforme", "Facción:");
			}
			// CNN
			else if (PlayersData[playerid][Faccion] == CNN)
			{
				SendInfoMessage(playerid, 1, "/Na [Narrar] - /Tr [Transmitir] - /Entrevistar [ID] - /Sacar [ID] - /Finalizar Entrevista - /Obtener Cámara", "Facción:");
				SendInfoMessage(playerid, 1, "/Conectar [Número] - /Desconectar - /En [Texto] - /Carnet [ID] - /Cancion - /Poner uniforme", "Facción:");
			}
			// TALLER_LS
			else if (PlayersData[playerid][Faccion] == TALLER_LS)
			{
				SendInfoMessage(playerid, 1, "/Llamadas - /Taller - /Reparar [ID] [$] - /Factura [ID] [$] [Razón] - /Echar Aceíte - /Estado Trabajo", "Facción:");
				SendInfoMessage(playerid, 1, "/Pistas - /Reparar [ID] [$] - /Vender Ganzúas [ID] [$] - /Aceíte [ID] [$] - /Carnet [ID] - /Poner uniforme", "Facción:");
			}
			// SICARIOS
			else if (PlayersData[playerid][Faccion] == SICARIOS)
			{
				SendInfoMessage(playerid, 1, "/Bombas - /Desactivar Bomba - /Ver Bomba - /Poner Bomba [Tipo] - /Detonar Todas", "Facción:");
				SendInfoMessage(playerid, 1, "/Chequear [ID] - /Atar [ID] - /Poner Uniforme - /Meter [ID]", "Faccion:");
			}
			// YKZ
			else if (PlayersData[playerid][Faccion] == YKZ)
			{
				SendInfoMessage(playerid, 1, "/Almacén - /Llaves Almacén - /Consultar Almacén - /Depositar Almacén [Cantidad]", "Facción: ");
				SendInfoMessage(playerid, 1, "/Retirar Almacén [Cantidad] - /Atar [ID]", "Facción: ");
			}
			// LCN
			else if (PlayersData[playerid][Faccion] == LCN)
			{
				SendInfoMessage(playerid, 1, "/Almacén - /Llaves Almacén - /Consultar Almacén - /Depositar Almacén [Cantidad]", "Facción:");
				SendInfoMessage(playerid, 1, "/Retirar Almacén [Cantidad] - /Chequear [ID] - /Atar [ID] - /Poner uniforme", "Facción:");
			}
			// TRAFICANTES
			else if (PlayersData[playerid][Faccion] == TRAFICANTES)
			{
				SendInfoMessage(playerid, 1, "/Crear Arma - /Chequear-/atar -/meter/Retirar Almacén [Cantidad] - /Almacén - /Vender Drogas [ID] [Cantidad] [$] - /Obtener Drogas", "Facción:");
				SendInfoMessage(playerid, 1, "/Llaves Almacén - /Consultar Almacén - /Depositar Almacén [Cantidad] - /Retirar Almacén [Cantidad] - /Poner uniforme", "Facción:");
			}
			// COLTS
			else if (PlayersData[playerid][Faccion] == COLTS)
			{
				SendInfoMessage(playerid, 1, "/Robar Local - /Graffiti Pintar [Texto] - /Obtener Bate - /Crear Armap - /Atar [ID] - /Terminar Robo - /Poner uniforme - /Chequear [ID] - /Atar [ID]", "Facción:");
			}
			// HAMPA
			else if (PlayersData[playerid][Faccion] == HAMPA)
			{
				if (PlayersData[playerid][Rango] == 0)
				{
					SendInfoMessage(playerid, 1, "/Robar Local", "Facción:");
				}
				SendInfoMessage(playerid, 1, "/Graffiti Pintar [Texto] - /Obtener Bate - /Crear Armap - /Atar [ID] - /Terminar Robo - /Poner uniforme - /Chequear [ID] - /Atar [ID]", "Facción:");
			}
			// HEORS
			else if (PlayersData[playerid][Faccion] == HEORS)
			{
				SendInfoMessage(playerid, 1, "/Robar Local - /Graffiti Pintar [Texto] - /Obtener Bate - /Crear Armap - /Atar [ID] - /Terminar Robo - /Poner uniforme - /Chequear [ID] - /Atar [ID]", "Facción:");
			}
			// PODER JUDICIAL
			else if (PlayersData[playerid][Faccion] == PODERJUDICIAL)
			{
				SendInfoMessage(playerid, 1, "/Dar Licencia Armas - /Quitar Licencia Armas [ID] - /Poner Equipo [ID EQUIPO] - /Chequear [ID]", "Facción:");
				SendInfoMessage(playerid, 1, "/Localizar Coche [Matrícula] - /Localizar Persona [NÚMERO] - /Datos [ID] - /Poner uniforme - /Rg [Radio General]", "Facción:");
				SendInfoMessage(playerid, 1, "/Rga [Radio General Todos] - /Estado Rgt - /MEG [Texto]", "Facción: ");
			}
			// CONTRABANDISTAS
			else if (PlayersData[playerid][Faccion] == CONTRABANDISTAS)
			{
				SendInfoMessage(playerid, 1, "/Obtener Mercancía - /Depositar Mercancía - /Abastecer Tienda - /Ver Precio - /Crear Arma", "Facción:");
				SendInfoMessage(playerid, 1, "/Abastecer Almacén - /Almacén - /Llaves Almacén - /Consultar Almacén - /Depositar Almacén [Cantidad]", "Facción:");
				SendInfoMessage(playerid, 1, "/Retirar Almacén [Cantidad] - /Poner uniforme - /Depositar Materiales - /Chequear [ID] - /Atar [ID] - /Meter [ID]", "Facción: ");
			}
			// ADP
			else if (PlayersData[playerid][Faccion] == ADP)
			{
				SendInfoMessage(playerid, 1, "/Poner Equipo [ID EQUIPO] - /Localizar Coche [Matrícula] - /Localizar Persona [NÚMERO] - /Datos [ID] - /Proteger [ID]", "Facción:");
				SendInfoMessage(playerid, 1, "/Carnet [ID] - /Poner uniforme - /Rg [Radio General] - /Rga [Radio General Todos] - /Estado Rgt", "Facción:");
				SendInfoMessage(playerid, 1, "/Servicio [ID] [$] [Razón] - /Chequear [ID] - /Atar [ID] - /Poner Cono - /Recoger - /MEG [Texto] ", "Facción:");
			}
			// TALLER_LS
			else if (PlayersData[playerid][Faccion] == TALLER_LS)
			{
				SendInfoMessage(playerid, 1, "/Llamadas - /Taller - /Reparar [ID] [$] - /Factura [ID] [$] [Razón] - /Echar Aceíte - /Estado Trabajo", "Facción:");
				SendInfoMessage(playerid, 1, "/Pistas - /Reparar [ID] [$] - /Vender Ganzúas [ID] [$] - /Aceíte [ID] [$] - /Carnet [ID] - /Poner uniforme", "Facción:");
			}
			// LSMD
			else if (PlayersData[playerid][Faccion] == LSMD)
			{
				SendInfoMessage(playerid, 1, "/Gob [Texto] - /Llamadas - /Llamadas Bomberos - /Curar [ID] - /Estado Trabajo - /Obtener Extintor - /Debilitar Incendio", "Facción:");
				SendInfoMessage(playerid, 1, "/Curar Enfermedad [ID] - /Poner Cono - /Poner Valla - /Recoger - /Rg [Radio General] - /Rga [Radio General Todos] - /Estado Rg - /Estado Rgt", "Facción:");
				SendInfoMessage(playerid, 1, "/Examinar Enfermedad [ID] - /Carnet [ID] - /Poner uniforme", "Facción:");
			}
			// TheAngelsMC
			else if (PlayersData[playerid][Faccion] == TheAngelsMC)
			{
				if (PlayersData[playerid][Rango] == 0)
				{
					SendInfoMessage(playerid, 1, "/Robar Local", "Facción:");
				}
				SendInfoMessage(playerid, 1, "/Graffiti Pintar [Texto] - /Obtener Bate - /Atar [ID] - /Terminar Robo - /Chequear [ID] - /Atar [ID]", "Facción:");
			}
			// SAPD
			else if (PlayersData[playerid][Faccion] == SAPD)
			{
				SendInfoMessage(playerid, 1, "/Gob [Texto] - /Llamadas - /Quitar Licencia Armas [ID] - /Quitar Licencia Coche [ID] - /Quitar Licencia Camión [ID]", "Facción:");
				SendInfoMessage(playerid, 1, "/Quitar Licencia Vuelo [ID] - /Quitar Licencia Bote [ID] - /Quitar Licencia Pesca [ID] - /Quitar Licencia Moto [ID]", "Facción:");
				SendInfoMessage(playerid, 1, "/Quitar Licencia Tren [ID] - /Multar [ID] [$] [Razón] - /Esposar [ID] - /Recoger - /Poner Uniforme - /Sirena", "Facción:");
				SendInfoMessage(playerid, 1, "/Equipo - /Chequear [ID] - /Arrestar [ID] [Tiempo] - /Poner Candado [Razón] - /Meg [Texto] - /Mir - /Datos [ID]", "Facción:");
				SendInfoMessage(playerid, 1, "/Meter [ID] - /Autorizar [ID] - /Desactivar Bomba - /Alarmas - /Rg [Radio General] - /Rga [Radio General Todos] - /Estado Rg - /Estado Rgt", "Facción:");
				SendInfoMessage(playerid, 1, "/Poner Cono - /Poner Valla - /Poner Pincho - /Ver Candado - /Credencial [ID] - /Callsign [Identificación] - /Servicio - /Decomisar [ID]", "Facción:");
			}
		}
		else
		{
			SendInfoMessage(playerid, 0, "381", "Tú no tienes facción");
		}
	}
	// COMANDO: /Ayuda Luces
	else if (strcmp("/Ayuda Luces", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
	{
		SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
		SendInfoMessage(playerid, 1, "/Luces - /Izquierda - /Derecha - /Estacionamiento", "Luces:");
	}
	// COMANDO: /Ayuda Coche
	else if (strcmp("/Ayuda Coche", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
	{
		SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
		SendInfoMessage(playerid, 1, "/Llaves Coche - /Aparcar - /Vender Mi Coche - /Dar Llaves [Coche, AmigoVeh] [ID] - /Llaves Maletero /Maletero - /Matrícula", "Coche:");
		SendInfoMessage(playerid, 1, "/Llenar Lata - /Echar Lata - /Apagar - /Apagar Alarma - /Apagar Neon - /Encender - /Encender Alarma - /Encender Neón", "Coche:");
		SendInfoMessage(playerid, 1, "/Llenar Deposito [Cantidad] - /Estado Alarma - /Estado Capó - /Puente - /Robar Gas - /Guantera - /Llaves Guantera", "Coche:");
		SendInfoMessage(playerid, 1, "/Papeles [ID] - /Tiempo Coche - /Precio Coche - /Estéreo - /Ayuda Coger - /Ayuda Dejar - /Ayuda Luces", "Coche:");
		SendInfoMessage(playerid, 1, "/Dar llaves AmigoVeh - /Llaves Amigos Veh", "Coche:");
	}
	// COMANDO: /Ayuda Casa
	else if (strcmp("/Ayuda Casa", cmdtext, true, 11) == 0 && strlen(cmdtext) == 11)
	{
		SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
		SendInfoMessage(playerid, 1, "/Llaves Casa - /Llaves Armario - /Llaves Garage - /Comprar Casa - /Vender Casa - /Cambiar Precio Alquiler [$]", "Casa:");
		SendInfoMessage(playerid, 1, "/Desalojar Todos - /Desalojar [ID] - /Alquilar - /Consultar Casa - /Retirar Casa - /Timbre - /Info Casa - /Armario", "Casa:");
		SendInfoMessage(playerid, 1, "/Dar Llaves Amigo [ID] - /Llaves Amigos - /Llaves Refrigerador - /Refrigerador - /Cocinar [ID_Refrigerador]", "Casa:");
		SendInfoMessage(playerid, 1, "/Ayuda Coger - /Ayuda Dejar - /Música - /Gaveta - /Llaves Gaveta", "Casa:");
	}
	// COMANDO: /Ayuda Banco
	else if (strcmp("/Ayuda Banco", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
	{
		SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
		SendInfoMessage(playerid, 1, "/Banco - /Consultar Cajero - /Depositar Cajero [$] - /Retirar Cajero [$] - /Crear Cheque Efectivo [ID] [$]", "Banco:");
		SendInfoMessage(playerid, 1, "/Crear Cheque Personal [ID] [$] - /Modo Pago (Cambiar entre efectivo y tarjeta de crédito)", "Banco:");
	}
	// COMANDO: /Ayuda Aceptar
	else if (strcmp("/Ayuda Aceptar", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
	{
		SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
		SendInfoMessage(playerid, 1, "/Aceptar Invite - /Aceptar Coche - /Aceptar Contrato - /Aceptar Factura - /Aceptar Reparación", "Aceptar:");
		SendInfoMessage(playerid, 1, "/Aceptar Protección - /Aceptar Drogas - /Aceptar Multa - /Aceptar Ganzúas - /Aceptar Aceíte", "Aceptar:");
		SendInfoMessage(playerid, 1, "/Aceptar Servicios - /Aceptar Sexo - /Aceptar Móvil - /Aceptar Saludo - /Aceptar Renovación", "Aceptar:");
	}
	// COMANDO: /Ayuda Coger
	else if (strcmp("/Ayuda Coger", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
	{
		SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
		SendInfoMessage(playerid, 1, "/Coger Arma - /Coger ArmaEx [ID_SLOT] - /Recoger Arma - /Coger Chaleco - /Coger Drogas [Cantidad] - /Dar Ganzúas [Cantidad]", "Coger:");
		SendInfoMessage(playerid, 1, "/Coger Materiales [Cantidad] - /Coger Bombas [Cantidad] - /Coger Artículo [ID_Refrigerador] - /Coger Objeto", "Coger:");
		SendInfoMessage(playerid, 1, "/Coger ObjetoEx [ID_SLOT]", "Coger: ");
	}
	// COMANDO: /Ayuda Usar
	else if (strcmp("/Ayuda Usar", cmdtext, true, 11) == 0 && strlen(cmdtext) == 11)
	{
		SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
		SendInfoMessage(playerid, 1, "/Usar Bolsa [ID_Bolsa] - /Usar Refrigerador [ID_Refrigerador]", "Usar:");
	}
	// COMANDO: /Ayuda Quitar
	else if (strcmp("/Ayuda Quitar", cmdtext, true, 13) == 0 && strlen(cmdtext) == 13)
	{
		SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
		SendInfoMessage(playerid, 1, "/Quitar Extorsión [ID] - /Quitar Arma [ID]", "Quitar:");
	}
	// COMANDO: /Ayuda Dejar
	else if (strcmp("/Ayuda Dejar", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
	{
		SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
		SendInfoMessage(playerid, 1, "/Dejar Arma - /Dejar ArmaEx [ID_SLOT] - /Dejar Chaleco - /Dejar Drogas [Cantidad] - /Dejar Ganzúas [Cantidad]", "Dejar:");
		SendInfoMessage(playerid, 1, "/Dejar Materiales [Cantidad] - /Dejar Bombas [Cantidad] - /Dejar Artículo [ID_Bolsa]", "Dejar:");
	}
	// COMANDO: /Ayuda Canales
	else if (strcmp("/Ayuda Canales", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
	{
		SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
		SendInfoMessage(playerid, 1, "/O [OOC General] - /B [OOC Local] - /W [ID] [Duda] - /N [Fuera de Móvil]", "Canales:");
		SendInfoMessage(playerid, 1, "/F [Family] - /R [Radio] - /Cambiar Frecuencia", "Canales:");
	}
	// COMANDO: /Ayuda Rangos
	else if (strcmp("/Ayuda Rangos", cmdtext, true, 13) == 0 && strlen(cmdtext) == 13 ||
			 strcmp("/Rangos", cmdtext, true, 13) == 0 && strlen(cmdtext) == 13)
	{
		if (PlayersData[playerid][Faccion] != CIVIL)
		{
			new MsgRangos[MAX_TEXT_CHAT];
			SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
			for (new i = 0; i <= GetMaxFaccionRango(PlayersData[playerid][Faccion]); i++)
			{
				format(MsgRangos, sizeof(MsgRangos), "%i - %s", i + 1, FaccionesRangos[PlayersData[playerid][Faccion]][i]);
				SendInfoMessage(playerid, 1, MsgRangos, "Rango: ");
			}
		}
		else
		{
			SendInfoMessage(playerid, 0, "182", "Tú no tienes facción");
		}
	}
	// COMANDO: /Ayuda Ayudante
	else if (strfind(cmdtext, "/Ayuda Ayudante", true) == 0)
	{
		if(PlayersData[playerid][Admin] >= 1 || PlayersData[playerid][Colaborador] == 1)
		{
			SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
			SendInfoMessage(playerid, 1, "Para responder a una duda puedes utilizar /Res [ID] [Respuesta]", "Ayudante:");
			SendInfoMessage(playerid, 1, "Siempre recuerda ser atento y responder de una manera adecuada", "Ayudante:");
			SendInfoMessage(playerid, 1, "Si no conoces la respuesta puedes consultar con el resto del staff en /J [Texto]", "Ayudante:");
		}
		else
		{
			SendClientMessage(playerid, COLOR_MESSAGES[0], "No tienes acceso a la ayuda de Ayudantes");
		}
	}
	/*else if (strcmp("/Ayuda Vip", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
	{
		SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
		SendInfoMessage(playerid, 1, "Si quieres ser miembro VIP debes utilizar /comprarvip, o contactar un administrador.", "VIP:");
		SendInfoMessage(playerid, 1, "Tendrás múltiples beneficios que los podrás consultar con nosotros.", "VIP:");
		SendInfoMessage(playerid, 1, "Nos puedes contactar vía Discord (/discord) o TeamSpeak 3 (/ts3) (Administradores Generales)", "VIP:");
	}
	else if (strfind(cmdtext, "/Ayuda vip", true) == 0)
	{
		SendInfoMessage(playerid, 1, "------------------Centro de Ayuda-----------------------", "»");
		SendInfoMessage(playerid, 1, "/comprarvip - /comprarsupervip - /beneficiosvip - /coins", "»");
		SendInfoMessage(playerid, 1, "al usar /beneficiosvip salga algo asi por el estilo:", "»");
		SendInfoMessage(playerid, 1, "-------------------Beneficios VIP-----------------------", "»");
		SendInfoMessage(playerid, 1, "VIP:                  Super VIP:", "»");
		SendInfoMessage(playerid, 1, "4: Coches             6: Coches", "»");
		SendInfoMessage(playerid, 1, "2: Casa               4: Casas", "»");
		SendInfoMessage(playerid, 1, "2: Negocio            4: Negocios", "»");
		SendInfoMessage(playerid, 1, "-Skines Personalizadas", "»");
		SendInfoMessage(playerid, 1, "-Usar /estado Personalizado sin el Nivel Requerido", "»");
		SendInfoMessage(playerid, 1, "-Poder usar bolsa de comida en cuarquiel Lugar", "»");
	}
	// COMANDO: /Ayudantes
	else if (strfind(cmdtext, "/ayudantes", true) == 0)
	{
		new MsgAdminsOn[100];
		new FoundAdmin;
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsPlayerConnected(i) && PlayersDataOnline[i][State] == 3 && PlayersData[i][Colaborador] == 1)
			{
				if (!FoundAdmin)
				{
					SendClientMessage(playerid, 0x505050FF, "{505050}»»»»»»»»»»»»»»»»»» {008228}A{00B428}yudantes {008228}O{00B428}nline {505050}««««««««««««««««««");
					FoundAdmin++;
				}
				format(MsgAdminsOn, sizeof(MsgAdminsOn), "{0037FF}* {FFF559}%s [ID: %i]", PlayersDataOnline[i][NameOnlineFix], i); //00FFF7
				SendClientMessage(playerid, 0x505050FF, MsgAdminsOn);
			}
		}
		if (!FoundAdmin)
		{
			SendClientMessage(playerid, 0x505050FF, "{910000}»»»»»»»»»»»»» {E10000}No hay Ayudantes en servicio {910000}«««««««««««««");
		}
	}
	// COMANDO: /Ayudante [ID] - Asignar Ayudante a usuario
	else if (strfind(cmdtext, "/Colaborador ", true) == 0)
	{
		MsgAdminUseCommands(9, playerid, cmdtext);
		if (PlayersData[playerid][Admin] == 9)
		{
			new ID_JugadorColaborador[11];
			strmid(ID_JugadorColaborador, cmdtext, 13, strlen(cmdtext), sizeof(ID_JugadorColaborador));
			if (IsPlayerConnected(strval(ID_JugadorColaborador)))
			{
				Comandos_Admin(25, playerid, strval(ID_JugadorColaborador), PlayersData[playerid][Admin], 0, "0");
				return 1;
			}
			else
			{
				SendInfoMessage(playerid, 0, "183", "El jugador que desea asignar el comando, no se encuentra conectado.");
				return 1;
			}
		}
		else
		{
			SendInfoMessage(playerid, 0, "184", "Tú no tienes acceso al comando /Ayudante [ID].");
			return 1;
		}
	}
	// COMANDO: /Ayuda Mappers
	else if (strfind(cmdtext, "/Ayuda Mappers", true) == 0)
	{
		if(PlayersData[playerid][Mapeador] == 1)
		{
			SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
			SendInfoMessage(playerid, 1, "Próximamente estarán disponibles los comandos para Mappers.", "Mappers:");
		}
		else
		{
			SendClientMessage(playerid, COLOR_MESSAGES[0], "No tienes acceso a la ayuda de Mappers");
		}
	}
	// COMANDO: /Ayuda Crear
	else if (strcmp("/Ayuda Crear", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
	{
		SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
		SendInfoMessage(playerid, 1, "/Crear Arma - /Crear Cheque Efectivo [ID] [Cantidad] - /Crear Cheque Personal [ID] [Cantidad]", "Crear:");
	}
	// COMANDO: /Ayuda Negocio
	else if (strcmp("/Ayuda Negocio", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
	{
		SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
		SendInfoMessage(playerid, 1, "/Comprar Negocio - /Vender Negocio - /Consultar Negocio - /Retirar Negocio [Cantidad] - /Depositar Negocio [Cantidad]", "Negocios:");
		SendInfoMessage(playerid, 1, "/Cambiar Nombre Nombre] - /Cambiar Precio Entrada [$] - /Cambiar Precio Materiales [$] - /Info Negocio", "Negocios:");
		SendInfoMessage(playerid, 1, "/Dar Extorsión [ID] - /Quitar Extorsión [ID] - /Retirar Extorsión - /Consultar Extorsión - /Llaves Negocio", "Negocios:");
	}
	// COMANDO: /Ayuda Owned
	else if (strcmp("/Ayuda owned", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
	{
		if (PlayersData[playerid][Admin] >= 1)
		{
			SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
			SendInfoMessage(playerid, 1, "/AdminOn - /A [Texto] - /Estado Whisper - /Test [ID] - /Ver - /Teles [ID] - /Es [ID] - /Borrar",				"Moderador 1: ");
			SendInfoMessage(playerid, 1, "/Kick [ID] [Razón] - /Revisar [ID] - /Traer [ID] - /Ir [ID] - /Res [ID] [DUDA] - /Facciones [ID]",			"Moderador 1: ");
			if (PlayersData[playerid][Admin] >= 2)
			{
				SendInfoMessage(playerid, 1, "/Jail [ID] [Tiempo] [Razón] - /Spawn [ID] - /Parar [ID] - /Respawn [ID] - /Rellenar - /Rellenar Facción [ID]", 	"Moderador 2: ");
				if (PlayersData[playerid][Admin] >= 3)
				{
					SendInfoMessage(playerid, 1, "/Estado Todos - /Número [Número] - /Silenciar [ID]",										"Moderador 3: ");
					if (PlayersData[playerid][Admin] >= 4)
					{
						SendInfoMessage(playerid, 1, "/IrC [ID_Coche] - /Matar [ID] - /Ban [ID] [Razón] - /Recoger Todos", 								"Moderador 4: ");
						SendInfoMessage(playerid, 1, "/Tele [InteriorID] [X] [Y] [Z] - /Tutorial [ID] - /Vida [ID] - /Chaleco [ID]", 					"Moderador 4: ");
						if (PlayersData[playerid][Admin] >= 5)
						{
							SendInfoMessage(playerid, 1, "/Respawn Facción [ID_Facción] - /Estado Dudas - /Limpiar [ID] - /AparcarEx",					"Moderador 5: ");
							if (PlayersData[playerid][Admin] >= 6)
							{
								SendInfoMessage(playerid, 1, "/Warn [ID] [Razón] - /ICoche - /ICocheEx [ID] - /Skin [ID] - /Race [ID] - /TraerC [ID_COCHE]", 				"Moderador Global: ");
								if (PlayersData[playerid][Admin] >= 7)
								{
									SendInfoMessage(playerid, 1, "/Facción [ID] [ID_Facción] [Rango] - /FacciónEx [Nombre_Apellido] [ID_Faccion] [Rango] - /BanEx [Nombre_Del_Jugador]", 	"Co-Admin: ");
									SendInfoMessage(playerid, 1, "/Borrar Warn [ID] - /DivorciarEx [ID] - /Editar Pistas - /StatsEx [ID] - /AparcarFac", 									"Co-Admin: ");
									SendInfoMessage(playerid, 1, "/IrN [ID_Negocio] - /IrCa [ID_Casa] - /Incendios - /Desactivar Bomba Todos - /Respawn Todos", 							"Co-Admin: ");
									SendInfoMessage(playerid, 1, "/Enfermar [ID] [ID_Enfermedad] - /Crear Incendio [ID_Casa]", 							"Co-Admin: ");
									SendInfoMessage(playerid, 1, "/Desbanear [Nombre_Del_Jugador] - /DmArmas - /Dm Equipo - /Matar DM - /DM [ID] [Equipo]", 								"Co-Admin: ");
									SendInfoMessage(playerid, 1, "/SkinDM [Equipo] [Skin_ID] [Equipo] - /DM Off - /Canción - /Respawn TodosEx - /Crear ArmaA",												"Co-Admin: ");
									if (PlayersData[playerid][Admin] >= 8)
									{
										SendInfoMessage(playerid, 1, "/Cambiar Logo [Nuevo_Logo] - /Map Point [Point] - /Cambiar Balas Modelo/Tiempo [Tiempo/Modelo]", 						"Administrador: ");
										SendInfoMessage(playerid, 1, "/Cambiar Servidor Nombres [ID 0-3] - /Estado Nombres - /Ntipo [ID] - /Ctipo [ID]",																	"Administrador: ");
										SendInfoMessage(playerid, 1, "/Map Off - /Map - /SpawnDM [Equipo]- /CPos [ID_Casa] - /NPos [ID_Negocio] - /Traerc Bug - /Gtipo [ID]", 				"Administrador: ");
										SendInfoMessage(playerid, 1, "/Info Garage - /Garages [ID_Casa] - /Forzar Licencia [ID] - /Skinex [ID] [Skin] ", 					"Administrador: ");
										SendInfoMessage(playerid, 1, "/Ver Design - /Dg A (Afuera) - /Dg C (Coche) - /Dg D (Dentro) - /Dg Rand [ID_Casa] [ID_Garage] - /VCoche",			"Administrador: ");
										SendInfoMessage(playerid, 1, "/Crear Garage [ID_Casa] [Tipo_Garage] - /Design Garage [ID_Design] - /Dg dP [ID_Casa] [ID_Garage]", 					"Administrador: ");
										SendInfoMessage(playerid, 1, "/Dg aP [ID_Casa] [ID_Garage] - /Dg cP [ID_Casa] [ID_Garage] - /Server Stats - /Cerrar Servidor",		 				"Administrador: ");
										SendInfoMessage(playerid, 1, "/Vcasa - /Vnegocio - /Cprecio [$] - /Nprecio [$] - /Cnivel [Nivel] - /Nnivel [Nivel] - /AReparar - /Taller",		 				"Administrador: ");
										if (PlayersData[playerid][Admin] >= 9)
										{
											SendInfoMessage(playerid, 1, "/Clima [Tipo] - /Staff [ID] [Nivel] - /Estado Commands - /MsgEX [Estilo] [Texto] - /Forzar Paga - /LlenarGasolineras - /IP [ID]",		"Admin General: ");
											SendInfoMessage(playerid, 1, "/VIP [ID] - /SVIP [ID] - /Quitar VIP [ID] - /RVip [ID] (10 horas más) /RSVip [ID] (10 horas más) - /Mapeador [ID] - /Colaborador [ID] - /Quitar Tutorial [ID]",	"Admin General: ");
											SendInfoMessage(playerid, 1, "/DarDinero [ID] [Cantidad] - /DarMateriales [ID] [Cantidad] - /DarCoins [ID] [Cantidad] - /DarHoras [ID] [Cantidad]",					"Admin General: ");
											SendInfoMessage(playerid, 1, "/DarDrogas [ID] [Cantidad] - /DarBombas [ID] [Cantidad] - /DarGanzúas [ID] [Cantidad]",	"Admin General: ");
											SendInfoMessage(playerid, 1, "/GiveAyudante [ID] - /RemoveAyudante [ID] - /Nombre [ID] [Nombre]",			"Admin General: ");
											SendInfoMessage(playerid, 1, "/Crear Negocio [ID] [$] [Nivel] - /Crear Casa [ID] [$] [Nivel] - /Cambiar Password [Nombre_Apellido] [Nueva Password]",	"Admin General: ");
											SendInfoMessage(playerid, 1, "/Graffiti Crear - /Graffiti Ir [ID] - /Graffiti Borrar [ID] - /Graffiti Mover [ID] - /Graffiti Info",	"Admin General: ");
										}
									}
								}
							}
						}
					}
				}
			}
		}
		else
		{
			SendInfoMessage(playerid, 0, "101", "Tú no tienes acceso al comando /Ayuda Owned.");
		}
	}
	else
	{
		SendInfoMessage(playerid, 0, "102", "Quizás quiso decir: /Ayuda");
	}
}*/
CMD:ocultar(playerid, params[])
{
	if(strcmp(params, "chaleco", true) == 0)
	{
		if(GetPlayerScore(playerid) >= 5)
		{
			if (ArmourStats[playerid] > 0.0 && ArmourUsed[playerid] == 1)
			{
				ArmourUsed[playerid] = 0;
				RemovePlayerAttachedObject(playerid, ARMOUR_INDEX);
				SendInfoMessage(playerid, 1, "Has removido tu chaleco correctamente, no aparecerá hasta que vuelvas a colocartelo", "Chaleco: ");
			}
			else
			{
				SendInfoMessage(playerid, 0, "455", "No tienes chaleco puesto, así que no puedes quitarte algo que no tienes.");
			}
		}
		else
		{
			SendInfoMessage(playerid, 0, "456", "Si no tienes nivel cinco (5) o más no puedes usar /Ocultar Chaleco");
		}
	}
	return 1;
}

CMD:foro(playerid)
{
	SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
	SendInfoMessage(playerid, 1, "Te invitamos a ingresar a nuestro Foro: playerliferp.com/", "Foro:");
	return 1;
}

CMD:ts3(playerid)
{
	SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
	SendInfoMessage(playerid, 1, "Te invitamos a ingresar a nuestro TS3: ts.playerliferp.com:7000 ", "TS3:");
	return 1;
}

CMD:trabajos(playerid)
{
	ShowPlayerDialogEx(playerid, 169, DIALOG_STYLE_LIST, "Trabajos","Pescador\nVendedor de Móviles\nTransportista\nMercadero\nConductor\nMinero\nRecolector","Localizar","Cancelar");
	return 1;
}

CMD:talleres(playerid)
{
	ShowPlayerDialogEx(playerid, 223, DIALOG_STYLE_LIST, "{00A2FF}Talleres Disponible","Taller de Los Santos","Localizar","Cancelar");
	return 1;
}

CMD:hospitales(playerid)
{
	ShowPlayerDialogEx(playerid, 224, DIALOG_STYLE_LIST, "{00A2FF}Hospitales Disponible","Hospital de Los Santos","Localizar","Cancelar");
	return 1;
}

CMD:concesionarios(playerid)
{
	ShowPlayerDialogEx(playerid, 225, DIALOG_STYLE_LIST, "Concesionarios Disponible","Grotti\nCoutt And Schutz","Localizar","Cancelar");
	return 1;
}

CMD:licencieros(playerid)
{
	ShowPlayerDialogEx(playerid, 226, DIALOG_STYLE_LIST, "Licencieros Disponible","Los Santos","Localizar","Cancelar");
	return 1;
}

CMD:bancos(playerid)
{
	ShowPlayerDialogEx(playerid, 227, DIALOG_STYLE_LIST, "Bancos Disponible","Los Santos","Localizar","Cancelar");
	return 1;
}

CMD:depositos(playerid)
{
	ShowPlayerDialogEx(playerid, 228, DIALOG_STYLE_LIST, "Depósitos Policiales","Los Santos","Localizar","Cancelar");
	return 1;
}

CMD:universidades(playerid)
{
	ShowPlayerDialogEx(playerid, 229, DIALOG_STYLE_LIST, "Universidades Disponibles","Los Santos","Localizar","Cancelar");
	return 1;
}

CMD:vendedor(playerid, params[])
{
	if(strcmp(params, "de moviles", true) == 0)
	{
		SendInfoMessage(playerid, 1, "Para poder vender móviles debes ir al lugar que hemos marcado en el mapa por tí", "Vendedor de Móviles:");
		SetPlayerCheckpoint(playerid, -1961.57, 438.60, 35.17, 3.0);
		onCheck[playerid] = true;
	}
	return 1;
}

CMD:test(playerid)
{
	if (IsPlayerUsingCustomSkin(playerid))
	{
		SendInfoMessage(playerid, 1, "Actualmente SI estás usando un skin personalizado", "Skin Test:");
	}
	else
	{
		SendInfoMessage(playerid, 1, "Actualmente NO estás usando un skin personalizado", "Skin Test:");
	}
	return 1;
}
				
CMD:transportar(playerid)
{
	if (GetVehicleModel(IsPlayerInNearVehicle(playerid)) == 578 && PlayersData[playerid][Job] == TRANSPORTISTA)
	{
		SendInfoMessage(playerid, 1, "Ve hacia el lugar de carga que se te marcará", "Transportista:");
		SetPlayerCheckpoint(playerid, TransportistaSalida, 5.0);
		onCheck[playerid] = true;
	}
	else
	{
		SendInfoMessage(playerid, 1, "Debes ser transportista y estar en un vehículo del trabajo", "Transportista:");
	}
	return 1;
}

CMD:mercaderia(playerid)
{
	if (GetVehicleModel(IsPlayerInNearVehicle(playerid)) == 609 && PlayersData[playerid][Job] == MERCADER)
	{
		SendInfoMessage(playerid, 1, "Ve hacia el lugar de carga que se te marcará", "Mercadero:");
		SetPlayerCheckpoint(playerid, TransportistaSalida, 5.0);
		onCheck[playerid] = true;
	}
	else
	{
		SendInfoMessage(playerid, 1, "Debes ser mercadero y estar en un vehículo del trabajo", "Mercadero:");
	}
	return 1;
}

CMD:graffiti(playerid, params[])
{
	if(strcmp(params, "crear", true) == 0)
	{
		if(PlayersData[playerid][Admin] != 9) return SendInfoMessage(playerid, 0, "0", "¡No tienes acceso a este comando!");
		if(Iter_Free(Graffitis) == -1) return SendInfoMessage(playerid, 0, "0", "¡Se alcanzó el máximo de graffitis disponibles!");
		if(GetPVarInt(playerid, "ADM_CREANDO_GRAFFITI") || GetPVarInt(playerid, "ADM_MOVIENDO_GRAFFITI")) return SendInfoMessage(playerid, 0, "0", "¡Ya te encuentras creando/moviendo algún graffiti!");

		//- Preparamos las variables
		new Float:Pos[4], Graffiti_ID = Iter_Free(Graffitis), String[34];
		GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
		GetPlayerFacingAngle(playerid, Pos[3]);

		//- Creamos el objeto
		Graffitis[Graffiti_ID][ObjetoID] = CreateDynamicObject(OBJ_BASE_GRAFFITI, Pos[0], Pos[1], Pos[2], 0.0, 0.0, Pos[3]);
		SetDynamicObjectMaterialText(Graffitis[Graffiti_ID][ObjetoID], 0, GRAFFITI_DEFAULT_TEXT, OBJECT_MATERIAL_SIZE_256x64, GRAFFITI_FONT, 50, 1, COLOR_DEFAULT_GRAFFITI, 0, 0);
		SetDynamicObjectMaterialText(Graffitis[Graffiti_ID][ObjetoID], 1, "null", OBJECT_MATERIAL_SIZE_256x64, "Arial", 50, 1, 0, 0, 0);
		EditDynamicObject(playerid, Graffitis[Graffiti_ID][ObjetoID]);
		Graffitis[Graffiti_ID][Usandose] = true;

		//- Variables e informativo
		SetPVarInt(playerid, "ADM_GRAFF_ID", Graffiti_ID);
		SetPVarInt(playerid, "ADM_CREANDO_GRAFFITI", true);
		SetPVarFloat(playerid, "GRAFFITI_POS_X", Pos[0]);
		SetPVarFloat(playerid, "GRAFFITI_POS_Y", Pos[1]);
		SetPVarFloat(playerid, "GRAFFITI_POS_Z", Pos[2]);

		//- Mensaje
		format(String, sizeof(String), "Has creado el graffiti ID: %d.", Graffiti_ID);
		SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, String);
	}
	else if(strcmp(params, "info", true) == 0)
	{
		if(PlayersData[playerid][Admin] != 9) return SendInfoMessage(playerid, 0, "0", "¡No tienes acceso a este comando!");
		if(GraffitiCercano(playerid) == -1) return SendInfoMessage(playerid, 0, "0", "¡No hay ningún graffiti cerca tuyo!");

		//- Información
		new String[145], TiempoEx[46];
		new Graffiti_ID = GraffitiCercano(playerid);
		new Diff = (gettime() - Graffitis[Graffiti_ID][Tiempo]), Dias, Horas, Minutos, Segundos;
		ConverTime(Diff, Dias, Horas, Minutos, Segundos);

		if(!Graffitis[Graffiti_ID][Tiempo])
		{
			format(TiempoEx, sizeof(TiempoEx), "%d día%s, %d hora%s, %d minuto%s y %d segundo%s", Dias, (Dias == 0 || Dias > 1) ? "s" : "", Horas, (Horas == 0 || Horas > 1) ? "s" : "", Minutos, (Minutos == 0 || Minutos > 1) ? "s" : "", Segundos, (Segundos == 0 || Segundos > 1) ? "s" : "");
		}
		else
		{
			format(TiempoEx, sizeof(TiempoEx), "0");
		}
		format(String, sizeof(String), "Graffiti %d - Dueño: %s - Tiempo: %s - Usandose: %s - Texto: %s", Graffiti_ID, Graffitis[Graffiti_ID][Creador], TiempoEx, (Graffitis[Graffiti_ID][Usandose]) ? "Sí" : "No", Graffitis[Graffiti_ID][Texto]);
		SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, String);
	}
	else if(strcmp(params, "ir", true) == 0)
	{
		new Graffiti_ID = strval(cmdtext[13]);
		new String[41];

		if(PlayersData[playerid][Admin] != 9) return SendInfoMessage(playerid, 0, "0", "¡No tienes acceso a este comando!");
		if(!EsGraffitiValido(Graffiti_ID)) return SendInfoMessage(playerid, 0, "0", "Ese graffiti no existe.");
		SetPlayerPos(playerid, Graffitis[Graffiti_ID][Posicion][0]+3.0, Graffitis[Graffiti_ID][Posicion][1], Graffitis[Graffiti_ID][Posicion][2]);
		format(String, sizeof(String), "Te teletransportaste al graffiti %d.", Graffiti_ID);
		SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, String);
	}
	else if(strcmp(params, "borrar", true) == 0)
	{
		new Graffiti_ID = strval(cmdtext[17]);
		new String[100];

		if(PlayersData[playerid][Admin] != 9) return SendInfoMessage(playerid, 0, "0", "¡No tienes acceso a este comando!");
		if(!EsGraffitiValido(Graffiti_ID)) return SendInfoMessage(playerid, 0, "0", "Ese graffiti no existe.");
		if(Graffitis[Graffiti_ID][Usandose]) return SendInfoMessage(playerid, 0, "0", "No puedes borrar un graffiti que está siendo usado.");
		if(GetPVarInt(playerid, "ADM_CREANDO_GRAFFITI") || GetPVarInt(playerid, "ADM_MOVIENDO_GRAFFITI")) return SendInfoMessage(playerid, 0, "0", "¡No puedes borrar un graffiti mientras estas creando/moviendo uno!");

		BorrarGraffiti(Graffiti_ID);
		format(String, sizeof(String), "Has borrado el graffiti %d.", Graffiti_ID);
		SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, String);
	}
	else if(strcmp(params, "mover", true) == 0)
	{
		new Graffiti_ID = strval(cmdtext[16]);
		new String[100];

		if(PlayersData[playerid][Admin] != 9) return SendInfoMessage(playerid, 0, "0", "¡No tienes acceso a este comando!");
		if(!EsGraffitiValido(Graffiti_ID)) return SendInfoMessage(playerid, 0, "0", "Ese graffiti no existe.");
		if(Graffitis[Graffiti_ID][Usandose]) return SendInfoMessage(playerid, 0, "0", "No puedes mover un graffiti que está siendo usado.");
		if(GetPVarInt(playerid, "ADM_CREANDO_GRAFFITI") || GetPVarInt(playerid, "ADM_MOVIENDO_GRAFFITI")) return SendInfoMessage(playerid, 0, "0", "¡No puedes mover un graffiti mientras estas creando/moviendo uno!");
		if(IsPlayerInRangeOfPoint(playerid, RANGO_GRAFFITI_ADM, Graffitis[Graffiti_ID][Posicion][0], Graffitis[Graffiti_ID][Posicion][1], Graffitis[Graffiti_ID][Posicion][2]))
		{
			SetPVarInt(playerid, "ADM_MOVIENDO_GRAFFITI", true);
			SetPVarInt(playerid, "ADM_GRAFF_ID", Graffiti_ID);
			Graffitis[Graffiti_ID][Usandose] = true;
			EditDynamicObject(playerid, Graffitis[Graffiti_ID][ObjetoID]);

			//- Informativo
			format(String, sizeof(String), "Estas editando el graffiti %d.", Graffiti_ID);
			SendInfoMessage(playerid, 0, "0", String);
		}
		else
		{
			format(String, sizeof(String), "¡Debes estar al menos a %d metros del graffiti seleccionado!", RANGO_GRAFFITI_ADM);
			SendInfoMessage(playerid, 0, "0", String);
		}
	}
	else if(strcmp(params, "pintar", true) == 0)
	{
		if (PlayersData[playerid][Faccion] == COLTS  || PlayersData[playerid][Faccion] == HAMPA || PlayersData[playerid][Faccion] == TheAngelsMC || PlayersData[playerid][Faccion] == HEORS)
		{
			if(GraffitiCercano(playerid) == -1 || GetPlayerInterior(playerid) != 0) return SendInfoMessage(playerid, 0, "0", "No puedes pintar un graffiti aquí");
			if(strlen(cmdtext[17]) > MAX_LETRAS_GRAFFITI || strlen(cmdtext[17]) < MIN_LETRAS_GRAFFITI) return SendInfoMessage(playerid, 0, "0", "El graffiti debe tener de 5 a 14 carácteres.");
			if(GetPlayerWeapon(playerid) != 41) return SendInfoMessage(playerid, 0, "0", "¡Debes tener la lata de pintura en la mano!");
			if(!GraffitiLibre(playerid, GraffitiCercano(playerid))) return SendInfoMessage(playerid, 0, "0", "No puedes pintar un graffiti aquí");
			if(Graffitis[GraffitiCercano(playerid)][Usandose]) return SendInfoMessage(playerid, 0, "0", "¡Este graffiti se encuentra en uso!");

			//- Comenzamos a pintar
			SetPVarInt(playerid, "PINTANDO_GRAFFITI", true);
			SetPVarInt(playerid, "PINTANDO_GRAFFITI_ID", GraffitiCercano(playerid));
			SetPVarInt(playerid, "PINTANDO_GRAFFITI_PROGRESO", 1);
			SetPVarInt(playerid, "COMENZO_A_PINTAR", gettime() + 30); //- Tiene hasta 30 segundos para terminar
			SetPVarString(playerid, "PINTANDO_GRAFFITI_TEXTO", cmdtext[17]);
			Graffitis[GraffitiCercano(playerid)][Usandose] = true;

			//- Preparamos su posición
			new Float:Pos[3];
			GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
			SetPVarFloat(playerid, "GRAFFITI_X",   Pos[0]);
			SetPVarFloat(playerid, "GRAFFITI_Y",   Pos[1]);
			SetPVarFloat(playerid, "GRAFFITI_Z",   Pos[2]);

			//- Informativo
			Pintando_Graffitis[playerid] = SetTimerEx("PintandoGraffiti", 1000, true, "d", playerid);
			CreatePlayerSpecialBar(playerid, "GRAFFITI", "Progreso", MAX_PROGRESO_GRAFFITI, 0xF0AF00AF);
			SendInfoMessage(playerid, 0, "0", "Mantén presionado 'CLICK' y comienza a pintar en la pared.");
		}
		else
		{
			SendInfoMessage(playerid, 0, "187", "No eres miembro de una pandilla.");
		}
	}
	else
	{
		SendInfoMessage(playerid, 0, "0", "Coloca /Graffiti pintar (Texto)"); /// Quizás quiso decir: Graffiti {Crear, Ir, Mover, Borrar, Info}
	}
	return 1;
}

CMD:conducir(playerid)
{
	if (GetVehicleModel(IsPlayerInNearVehicle(playerid)) == 478 && PlayersData[playerid][Job] == CONDUCTOR)
	{
		SendInfoMessage(playerid, 1, "Ve hacia el lugar de carga que se te marcará", "Conductor:");
		SetPlayerCheckpoint(playerid, TransportistaSalida, 5.0);
		onCheck[playerid] = true;
	}
	else
	{
		SendInfoMessage(playerid, 1, "Debes ser transportista y estar en un vehículo del trabajo", "Conductor:");
	}
	return 1;
}

CMD:minar(playerid)
{
	if (PlayersData[playerid][Job] == MINERO)
	{
		if (GetPlayerSkin(playerid) == 211 || GetPlayerSkin(playerid) == 27 || PlayersData[playerid][VIP])
		{
			if (IsPlayerInRangeOfPoint(playerid, 15.0, PagaMinero))
			{
				TogglePlayerControllableEx(playerid, false);
				ApplyAnimation(playerid, "benchpress", GYM_ANIMATIONS[0], 4.0, 0, 1, 1, 1, 0, 1);
				GameTextForPlayer(playerid, "~G~Comprobando ~W~Musculatura", 5000, 6);
				SetTimerEx("DescongelarPlayer",5000,false,"d",playerid);
				SendInfoMessage(playerid, 1, "Ve hacia el área de seguridad y toma los implementos necesarios", "Minero:");
				SetPlayerCheckpoint(playerid, SeguridadMinero, 1.0);
				onCheck[playerid] = true;
			}
			else
			{
				SendInfoMessage(playerid, 1, "Debes estar en el área de seguridad, lo hemos marcado por tí!", "Minero: ");
				SetPlayerCheckpoint(playerid, -2201.4277, -1519.2947, 29.8750, 3.0);
				onCheck[playerid] = true;
			}
		}
		else
		{
			SendInfoMessage(playerid, 0, "963", "Debes ponerte el uniforme antes, ve a cambiarte");
		}
	}
	else
	{
		SendInfoMessage(playerid, 1, "Debes ser minero y estar en el área de seguridad para iniciar el trabajo", "Minero:");
	}
	return 1;
}

CMD:recolectar(playerid)
{
	if (PlayersData[playerid][Job] == RECOLECTOR)
	{
		if (GetPlayerSkin(playerid) == 190 || GetPlayerSkin(playerid) == 144 || PlayersData[playerid][VIP])
		{
			if (IsPlayerInRangeOfPoint(playerid, 15.0, PagaRecolector))
			{
				TogglePlayerControllableEx(playerid, false);
				ApplyAnimation(playerid, "benchpress", GYM_ANIMATIONS[0], 4.0, 1, 1, 1, 1, 0, 1);
				GameTextForPlayer(playerid, "~G~Comprobando ~W~Musculatura", 5000, 5);
				SetTimerEx("DescongelarPlayer",5000,false,"d",playerid);
				SendInfoMessage(playerid, 1, "Ve afuera de la caseta y revisa entre los primeros vehículo comprimidos", "Recolector:");
				SetPlayerCheckpoint(playerid, Recolector00, 1.0);
				onCheck[playerid] = true;
			}
			else
			{
				SendInfoMessage(playerid, 1, "Debes estar cerca de la caseta de recolección", "Recolector:");
			}
		}
		else
		{
			SendInfoMessage(playerid, 0, "963", "Debes ponerte el uniforme antes, ve a cambiarte a la caseta");
			RemovePlayerFromVehicle(playerid);
		}
	}
	else
	{
		SendInfoMessage(playerid, 1, "Debes ser recolector y estar en el la caseta para iniciar el trabajo", "Recolector:");
	}
	return 1;
}
// COMANDO: /Fotografiar
/*				else if (strcmp("/Fotografiar", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
{
	if (GetPlayerWeapon(playerid) == 43 && PlayersData[playerid][Job] == FOTOGRAFO)
	{
		SendInfoMessage(playerid, 1, "Ve con James Olsen para que te indique los lugares que debes fotografiar", "Fotografo:");
		SetPlayerCheckpoint(playerid, FotografoEmpezar, 5.0);
		onCheck[playerid] = true;
	}
	else
	{
		SendInfoMessage(playerid, 1, "Debes ser fotógrafo y tener una cámara, sino tienes una, consiguela en cualquier 24-7", "Fotografo:");
	}
}*/

CMD:colocar(playerid, params[])
{
	if(strcmp(item, "uniforme", true) == 0)
	{
		if (PlayersData[playerid][Job] == TRANSPORTISTA ||
			 PlayersData[playerid][Job] == MERCADER ||
			 PlayersData[playerid][Job] == CONDUCTOR ||
			 PlayersData[playerid][Job] == MINERO ||
			 PlayersData[playerid][Job] == RECOLECTOR)
		{
			if (IsPlayerInRangeOfPoint(playerid, 5.0, 2196.1980, -2254.1697, 13.8060) || /*Transportista, Mercadero y Conductor*/
				 IsPlayerInRangeOfPoint(playerid, 5.0, -2195.9993, -1519.1068, 29.8750) || /*Minero*/
				 IsPlayerInRangeOfPoint(playerid, 5.0, -1938.4314, -1734.1622, 21.9834)) /*Recolector*/
			{
				if 	(PlayersData[playerid][Job] == TRANSPORTISTA)
				{
					if (GetPlayerSkin(playerid) == 233 || GetPlayerSkin(playerid) == 133)
					{
						if (PlayersData[playerid][Sexo]) //Mujer
						{
							SetPlayerSkin(playerid, PlayersData[playerid][Skin]);
							TogglePlayerControllableEx(playerid, false);
							ApplyAnimation(playerid, "CLOTHES", CLOTHES_ANIMATIONS[10], 4.0, 0, 1, 1, 1, 0, 1);
							GameTextForPlayer(playerid, "~G~Colocandote ~W~Uniforme", 5000, 6);
							SetTimerEx("DescongelarPlayer",5000,false,"d",playerid);
							Acciones_ROL(playerid, ACCION_ME, "toma su ropa particular del locker y se empieza a cambiar rapidamente");
						}
						else
						{
							SetPlayerSkin(playerid, PlayersData[playerid][Skin]);
							TogglePlayerControllableEx(playerid, false);
							ApplyAnimation(playerid, "CLOTHES", CLOTHES_ANIMATIONS[12], 4.0, 0, 1, 1, 1, 0, 1);
							GameTextForPlayer(playerid, "~G~Colocandote ~W~Uniforme", 5000, 6);
							SetTimerEx("DescongelarPlayer",5000,false,"d",playerid);
							Acciones_ROL(playerid, ACCION_ME, "toma su ropa particular del locker y se empieza a cambiar");
						}
					}
					else
					{
						if (PlayersData[playerid][Sexo]) //Hombre
						{
							SetPlayerSkin(playerid, 233);
							TogglePlayerControllableEx(playerid, false);
							ApplyAnimation(playerid, "CLOTHES", CLOTHES_ANIMATIONS[10], 4.0, 0, 1, 1, 1, 0, 1);
							GameTextForPlayer(playerid, "~G~Colocandote ~W~Uniforme", 5000, 6);
							SetTimerEx("DescongelarPlayer",5000,false,"d",playerid);
							Acciones_ROL(playerid, ACCION_ME, "toma un uniforme del locker y se empieza a cambiar rapidamente");
						}
						else
						{
							SetPlayerSkin(playerid, 133);
							TogglePlayerControllableEx(playerid, false);
							ApplyAnimation(playerid, "CLOTHES", CLOTHES_ANIMATIONS[12], 4.0, 0, 1, 1, 1, 0, 1);
							GameTextForPlayer(playerid, "~G~Colocandote ~W~Uniforme", 5000, 6);
							SetTimerEx("DescongelarPlayer",5000,false,"d",playerid);
							Acciones_ROL(playerid, ACCION_ME, "toma un uniforme del locker y se empieza a cambiar");
						}
					}
				}
				else if (PlayersData[playerid][Job] == MERCADER)
				{
					if (GetPlayerSkin(playerid) == 211 || GetPlayerSkin(playerid) == 289)
					{
						if (PlayersData[playerid][Sexo]) //Mujer
						{
							SetPlayerSkin(playerid, PlayersData[playerid][Skin]);
							TogglePlayerControllableEx(playerid, false);
							ApplyAnimation(playerid, "CLOTHES", CLOTHES_ANIMATIONS[10], 4.0, 0, 1, 1, 1, 0, 1);
							GameTextForPlayer(playerid, "~G~Colocandote ~W~Uniforme", 5000, 6);
							SetTimerEx("DescongelarPlayer",5000,false,"d",playerid);
							Acciones_ROL(playerid, ACCION_ME, "toma su ropa particular del locker y se empieza a cambiar rapidamente");
						}
						else
						{
							SetPlayerSkin(playerid, PlayersData[playerid][Skin]);
							TogglePlayerControllableEx(playerid, false);
							ApplyAnimation(playerid, "CLOTHES", CLOTHES_ANIMATIONS[12], 4.0, 0, 1, 1, 1, 0, 1);
							GameTextForPlayer(playerid, "~G~Colocandote ~W~Uniforme", 5000, 6);
							SetTimerEx("DescongelarPlayer",5000,false,"d",playerid);
							Acciones_ROL(playerid, ACCION_ME, "toma su ropa particular del locker y se empieza a cambiar");
						}
					}
					else
					{
						if (PlayersData[playerid][Sexo]) //Mujer
						{
							SetPlayerSkin(playerid, 211);
							TogglePlayerControllableEx(playerid, false);
							ApplyAnimation(playerid, "CLOTHES", CLOTHES_ANIMATIONS[10], 4.0, 0, 1, 1, 1, 0, 1);
							GameTextForPlayer(playerid, "~G~Colocandote ~W~Uniforme", 5000, 6);
							SetTimerEx("DescongelarPlayer",5000,false,"d",playerid);
							Acciones_ROL(playerid, ACCION_ME, "toma un uniforme del locker y se empieza a cambiar rapidamente");
						}
						else
						{
							SetPlayerSkin(playerid, 289);
							TogglePlayerControllableEx(playerid, false);
							ApplyAnimation(playerid, "CLOTHES", CLOTHES_ANIMATIONS[12], 4.0, 0, 1, 1, 1, 0, 1);
							GameTextForPlayer(playerid, "~G~Colocandote ~W~Uniforme", 5000, 6);
							SetTimerEx("DescongelarPlayer",5000,false,"d",playerid);
							Acciones_ROL(playerid, ACCION_ME, "toma un uniforme del locker y se empieza a cambiar");
						}
					}
				}
				else if (PlayersData[playerid][Job] == CONDUCTOR)
				{
					if (GetPlayerSkin(playerid) == 192 || GetPlayerSkin(playerid) == 236)
					{
						if (PlayersData[playerid][Sexo]) //Mujer
						{
							SetPlayerSkin(playerid, PlayersData[playerid][Skin]);
							TogglePlayerControllableEx(playerid, false);
							ApplyAnimation(playerid, "CLOTHES", CLOTHES_ANIMATIONS[10], 4.0, 0, 1, 1, 1, 0, 1);
							GameTextForPlayer(playerid, "~G~Colocandote ~W~Uniforme", 5000, 6);
							SetTimerEx("DescongelarPlayer",5000,false,"d",playerid);
							Acciones_ROL(playerid, ACCION_ME, "toma su ropa particular del locker y se empieza a cambiar rapidamente");
						}
						else
						{
							SetPlayerSkin(playerid, PlayersData[playerid][Skin]);
							TogglePlayerControllableEx(playerid, false);
							ApplyAnimation(playerid, "CLOTHES", CLOTHES_ANIMATIONS[12], 4.0, 0, 1, 1, 1, 0, 1);
							GameTextForPlayer(playerid, "~G~Colocandote ~W~Uniforme", 5000, 6);
							SetTimerEx("DescongelarPlayer",5000,false,"d",playerid);
							Acciones_ROL(playerid, ACCION_ME, "toma su ropa particular del locker y se empieza a cambiar");
						}
					}
					else
					{
						if (PlayersData[playerid][Sexo]) //Mujer
						{
							SetPlayerSkin(playerid, 192);
							TogglePlayerControllableEx(playerid, false);
							ApplyAnimation(playerid, "CLOTHES", CLOTHES_ANIMATIONS[10], 4.0, 0, 1, 1, 1, 0, 1);
							GameTextForPlayer(playerid, "~G~Colocandote ~W~Uniforme", 5000, 6);
							SetTimerEx("DescongelarPlayer",5000,false,"d",playerid);
							Acciones_ROL(playerid, ACCION_ME, "toma un uniforme del locker y se empieza a cambiar rapidamente");
						}
						else
						{
							SetPlayerSkin(playerid, 236);
							TogglePlayerControllableEx(playerid, false);
							ApplyAnimation(playerid, "CLOTHES", CLOTHES_ANIMATIONS[12], 4.0, 0, 1, 1, 1, 0, 1);
							GameTextForPlayer(playerid, "~G~Colocandote ~W~Uniforme", 5000, 6);
							SetTimerEx("DescongelarPlayer",5000,false,"d",playerid);
							Acciones_ROL(playerid, ACCION_ME, "toma un uniforme del locker y se empieza a cambiar");
						}
					}
				}
				else if (PlayersData[playerid][Job] == MINERO)
				{
					if (GetPlayerSkin(playerid) == 211 || GetPlayerSkin(playerid) == 27)
					{
						if (PlayersData[playerid][Sexo]) //Mujer
						{
							SetPlayerSkin(playerid, PlayersData[playerid][Skin]);
							TogglePlayerControllableEx(playerid, false);
							ApplyAnimation(playerid, "CLOTHES", CLOTHES_ANIMATIONS[10], 4.0, 0, 1, 1, 1, 0, 1);
							GameTextForPlayer(playerid, "~G~Colocandote ~W~Uniforme", 5000, 6);
							SetTimerEx("DescongelarPlayer",5000,false,"d",playerid);
							Acciones_ROL(playerid, ACCION_ME, "toma su ropa particular del locker y se empieza a cambiar rapidamente");
						}
						else
						{
							SetPlayerSkin(playerid, PlayersData[playerid][Skin]);
							TogglePlayerControllableEx(playerid, false);
							ApplyAnimation(playerid, "CLOTHES", CLOTHES_ANIMATIONS[12], 4.0, 0, 1, 1, 1, 0, 1);
							GameTextForPlayer(playerid, "~G~Colocandote ~W~Uniforme", 5000, 6);
							SetTimerEx("DescongelarPlayer",5000,false,"d",playerid);
							Acciones_ROL(playerid, ACCION_ME, "toma su ropa particular del locker y se empieza a cambiar");
						}
					}
					else
					{
						if (PlayersData[playerid][Sexo]) //Mujer
						{
							SetPlayerSkin(playerid, 211);
							TogglePlayerControllableEx(playerid, false);
							ApplyAnimation(playerid, "CLOTHES", CLOTHES_ANIMATIONS[10], 4.0, 0, 1, 1, 1, 0, 1);
							GameTextForPlayer(playerid, "~G~Colocandote ~W~Uniforme", 5000, 6);
							SetTimerEx("DescongelarPlayer",5000,false,"d",playerid);
							Acciones_ROL(playerid, ACCION_ME, "toma un uniforme del locker y se empieza a cambiar rapidamente");
						}
						else
						{
							SetPlayerSkin(playerid, 27);
							TogglePlayerControllableEx(playerid, false);
							ApplyAnimation(playerid, "CLOTHES", CLOTHES_ANIMATIONS[12], 4.0, 0, 1, 1, 1, 0, 1);
							GameTextForPlayer(playerid, "~G~Colocandote ~W~Uniforme", 5000, 6);
							SetTimerEx("DescongelarPlayer",5000,false,"d",playerid);
							Acciones_ROL(playerid, ACCION_ME, "toma un uniforme del locker y se empieza a cambiar");
						}
					}
				}
				else if (PlayersData[playerid][Job] == RECOLECTOR)
				{
					if (GetPlayerSkin(playerid) == 190 || GetPlayerSkin(playerid) == 144)
					{
						if (PlayersData[playerid][Sexo]) //Mujer
						{
							SetPlayerSkin(playerid, PlayersData[playerid][Skin]);
							TogglePlayerControllableEx(playerid, false);
							ApplyAnimation(playerid, "CLOTHES", CLOTHES_ANIMATIONS[10], 4.0, 0, 1, 1, 1, 0, 1);
							GameTextForPlayer(playerid, "~G~Colocandote ~W~Uniforme", 5000, 6);
							SetTimerEx("DescongelarPlayer",5000,false,"d",playerid);
							Acciones_ROL(playerid, ACCION_ME, "toma su ropa particular del locker y se empieza a cambiar rapidamente");
						}
						else
						{
							SetPlayerSkin(playerid, PlayersData[playerid][Skin]);
							TogglePlayerControllableEx(playerid, false);
							ApplyAnimation(playerid, "CLOTHES", CLOTHES_ANIMATIONS[12], 4.0, 0, 1, 1, 1, 0, 1);
							GameTextForPlayer(playerid, "~G~Colocandote ~W~Uniforme", 5000, 6);
							SetTimerEx("DescongelarPlayer",5000,false,"d",playerid);
							Acciones_ROL(playerid, ACCION_ME, "toma su ropa particular del locker y se empieza a cambiar");
						}
					}
					else
					{
						if (PlayersData[playerid][Sexo]) //Mujer
						{
							SetPlayerSkin(playerid, 190);
							TogglePlayerControllableEx(playerid, false);
							ApplyAnimation(playerid, "CLOTHES", CLOTHES_ANIMATIONS[10], 4.0, 0, 1, 1, 1, 0, 1);
							GameTextForPlayer(playerid, "~G~Colocandote ~W~Uniforme", 5000, 6);
							SetTimerEx("DescongelarPlayer",5000,false,"d",playerid);
							Acciones_ROL(playerid, ACCION_ME, "toma un uniforme del locker y se empieza a cambiar rapidamente");
						}
						else
						{
							SetPlayerSkin(playerid, 144);
							TogglePlayerControllableEx(playerid, false);
							ApplyAnimation(playerid, "CLOTHES", CLOTHES_ANIMATIONS[12], 4.0, 0, 1, 1, 1, 0, 1);
							GameTextForPlayer(playerid, "~G~Colocandote ~W~Uniforme", 5000, 6);
							SetTimerEx("DescongelarPlayer",5000,false,"d",playerid);
							Acciones_ROL(playerid, ACCION_ME, "toma un uniforme del locker y se empieza a cambiar");
						}
					}
				}
			}
			else
			{
				SendInfoMessage(playerid, 0, "1513", "No te encuentras en el vestuario!");
			}
		}
		else
		{
			SendInfoMessage(playerid, 0, "1514", "Usted no es transportista, mercadero, conductor, minero ni recolector!");
		}
	}
	return 1;
}

CMD:reglas(playerid)
{
	SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
	SendInfoMessage(playerid, 1, " - No se permite nada de lo siguiente:", "Reglas:");
	SendInfoMessage(playerid, 1, "/DM - DeathMatch", "Reglas:");
	SendInfoMessage(playerid, 1, "/CK - CarKill", "Reglas:");
	SendInfoMessage(playerid, 1, "/DB - DriverBy", "Reglas:");
	SendInfoMessage(playerid, 1, "/MG - MetaGaming", "Reglas:");
	SendInfoMessage(playerid, 1, "/PG - PowerGaming", "Reglas:");
	SendInfoMessage(playerid, 1, "/Flood - Flood", "Reglas:");
	SendInfoMessage(playerid, 1, "Faltas de respeto entre usuarios", "Reglas:");
	SendInfoMessage(playerid, 1, "/CJ - /RK - /HQ", "Otras:");
	SendInfoMessage(playerid, 1, " - LA LISTA NO TERMINA ACÁ CONSULTE EL /FORO PARA INFORMACIÓN MÁS EXTENSA -", "");
	return 1;
}

CMD:hq(playerid)
{
	SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
	SendInfoMessage(playerid, 1, "Es entrar dentro o en el area de una facción, sin haber sido llevado por ningún miembro de la misma, y sin Rol", "HeadQuarters:");
	return 1;
}

CMD:rk(playerid)
{
	SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
	SendInfoMessage(playerid, 1, "Es cuando un jugador te mata y lo buscas para matarlo. Cuando mueres no recuerdas nada de lo que te pasó", "RevengeKill:");
	return 1;
}

CMD:cj(playerid)
{
	SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
	SendInfoMessage(playerid, 1, "Es cuando un jugador va pasando en un vehículo y otro jugador lo saca del vehículo porque si, sin ningún motivo", "CarJacked:");
	return 1;
}

CMD:dm(playerid)
{
	SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
	SendInfoMessage(playerid, 1, "Es cuando un jugador empieza a golpear o mata a otro sin tener motivo", "DeathMatch:");
	return 1;
}

CMD:ck(playerid)
{
	SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
	SendInfoMessage(playerid, 1, "Cuando vamos en un vehículo y atropellamos gente sin motivo alguno, simplemente porque mola", "CarKill:");
	return 1;
}

CMD:db(playerid)
{
	SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
	SendInfoMessage(playerid, 1, "Si disparas de dentro de un Coche/Moto y te encuentras en el puesto de conductor, allí estás haciendo DriverBy", "DriverBy:");
	return 1;
}

CMD:mg(playerid)
{
	SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
	SendInfoMessage(playerid, 1, "Usar información totalmente OOC y usarla IC, por ejemplo cuando vemos el nombre en la cabeza del jugador", "MetaGaming:");
	SendInfoMessage(playerid, 1, "y lo llamamos por su nombre", "MetaGaming: ");
	return 1;
}

CMD:pg(playerid)
{
	SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
	SendInfoMessage(playerid, 1, "Es cuando el jugador hace acciones exageradas, que no son posibles en la realidad o dentro del juego", "PowerGaming:");
	return 1;
}

CMD:flood(playerid)
{
	SendClientMessage(playerid, COLOR_TITULO_DE_AYUDA, TITULO_AYUDA);
	SendInfoMessage(playerid, 1, "Repetir consecutivamente el mismo texto u similar en 3 o más líneas", "Flood:");
	return 1;
}

CMD:bbx(playerid)
{
	if(GetPVarType(playerid, "PlacedBB"))
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ")))
		{
			ShowPlayerDialogEx(playerid,174,DIALOG_STYLE_LIST,"Estéreo portátil","Jazz\nPop\nRap\nR&B and Urban\nRock\nLatina\nIngresar URL\nApagar estéreo portátil","Seleccionar", "Cancelar");
		}
		else
		{
			SendInfoMessage(playerid, 2, "0", "No estás cerca de tu estéreo portátil!");
		}
	}
	else
	{
		SendInfoMessage(playerid, 2, "0", "Tu no has colocado ningun estéreo portátil!");
	}
	return 1;
}

CMD:cancion(playerid)
{
	MsgAdminUseCommands(9, playerid, cmdtext);
	if (PlayersData[playerid][Admin] >= 7 && PlayersDataOnline[playerid][AdminOn])
	{
		ShowPlayerDialogEx(playerid,167,DIALOG_STYLE_INPUT,"Nombre de la cancion a tocar","En el recuadro de abajo escribe el nombre de la cancion que vas a colocar","Seguir","Cancelar");
	}
	else if (PlayersData[playerid][Faccion] == CNN && PlayersData[playerid][Rango] <= 3)
	{
		if (IsPlayerInRangeOfPoint(playerid, 20.0, 1118.3374,1260.9243,10.8203))
		{
			ShowPlayerDialogEx(playerid,167,DIALOG_STYLE_INPUT,"Nombre de la cancion a tocar","En el recuadro de abajo escribe el nombre de la cancion que vas a colocar","Seguir","Cancelar");
		}
		else
		{
			SendInfoMessage(playerid, 0, "907", "Tienes que estar en el estudio para colocar una canción!");
		}
	}
	else
	{
		SendInfoMessage(playerid, 0, "1279", "No tienes acceso al comando /Canción");
	}
	return 1;
}

CMD:detener(playerid, params[])
{
	if(strcmp(params, "musica", true) == 0)
	{
		SendInfoMessage(playerid, 1, "Has detenido el stream de audio.", "Audio:");
		StopAudioStreamForPlayer(playerid);
		return 1;
	}
	return 1;
}

CMD:giveayudante(playerid, params[])
{
	if(PlayersData[playerid][Admin] >= 9)
	{
		new player;
		if(sscanf(params, "u", player)) return SendClientMessage(playerid, -1, "/giveayudante [jugador id]");
		if(IsPlayerConnected(player))
		{
			if(PlayersData[player][Colaborador] == 0)
			{
				PlayersData[player][Colaborador] = 1;
				new MsjVip[120]; format(MsjVip,sizeof(MsjVip),"Le has otorgado Ayudante a %s",PlayersDataOnline[player][NameOnlineFix]);
				SendInfoMessage(playerid,3,"0",MsjVip);
				SendInfoMessage(player,3,"0","¡Felicitaciones!, ahora eres Ayudante");
			}
		}
		else
		{
			SendInfoMessage(playerid, 0, "1519", "El jugador ayudante no se encuentra conectado");
		}
	}
	else
	{
		SendInfoMessage(playerid, 0, "203", "Tú no tienes acceso a el comando /giveayudante.");
		return 1;
	}
	return 1;
}

CMD:removeayudante(playerid, params[])
{
	if(PlayersData[playerid][Admin] >= 9)
	{
		new player;
		if(sscanf(params, "u", player)) return SendClientMessage(playerid, -1, "/removeayudante [jugador id]");
		if(IsPlayerConnected(player))
		{
			if(PlayersData[player][Colaborador] == 1)
			{
				PlayersData[player][Colaborador] = 0;
				new MsjVip[120]; format(MsjVip,sizeof(MsjVip),"Le has quitado el Ayudante a %s",PlayersDataOnline[player][NameOnlineFix]);
				SendInfoMessage(playerid,3,"0",MsjVip);
				SendInfoMessage(player,3,"0","Ya no eres Ayudante!");
			}
			}
		else
		{
			SendInfoMessage(playerid, 0, "1519", "El jugador ayudante no se encuentra conectado");
		}
	}
	else
	{
		SendInfoMessage(playerid, 0, "203", "Tú no tienes acceso a el comando /RemoveAyudante.");
		return 1;
	}
	return 1;
}

CMD:cinturon(playerid)
{
	if(IsPlayerInAnyVehicle(playerid) == 1)
	{
		if(coches_Todos_Type[GetVehicleModel(GetPlayerVehicleID(playerid)) - 400] != BICI ||
			coches_Todos_Type[GetVehicleModel(GetPlayerVehicleID(playerid)) - 400] != MOTO)
		{
			if(Cinturon[playerid] == 0)
			{
				Cinturon[playerid] = 1;
				Acciones_ROL(playerid, ACCION_ME, "alcanza el cinturón de seguridad y lo abrocha.");
				SendInfoMessage(playerid, 2, "0", "Te has puesto el cinturon de seguridad.");
			}
			else if(Cinturon[playerid] == 1)
			{
				Cinturon[playerid] = 0;
				Acciones_ROL(playerid, ACCION_ME, "extiende su brazo desabrochando su cinturón de seguridad.");
				SendInfoMessage(playerid, 2, "0", "Te has quitado el cinturón de seguridad.");
			}
		}
		else
		{
			SendInfoMessage(playerid, 0, "100", "No puedes usar cinturón en una bicicleta.");
		}
	}
	else
	{
		SendInfoMessage(playerid, 0, "100", "No estás en ningún vehículo.");
	}
	return 1;
}

CMD:escoger(playerid)
{
	if(strcmp(params, "spawn", true) == 0)
	{
		if(PlayersData[playerid][Faccion] != CIVIL && PlayersData[playerid][Rango] <= 1)
		{
			new playeridAsignar = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
			new SpawnIDAsignar = strval(cmdtext[GetPosSpace(cmdtext, 3)]);
			if (playerid == playeridAsignar || IsPlayerNear(playerid, playeridAsignar,
				 "1522",
				 "1523",
				 "1524",
				 "El jugador que desea asginarle un spawn no se encuentra conectado",
				 "El jugador que desea asginarle un spawn no se encuentra logueado",
				 "El jugador que desea asginarle un spawn no se encuentra cerca de tí"))
			{
				if (PlayersData[playeridAsignar][Faccion] == PlayersData[playerid][Faccion])
				{
					if (SpawnIDAsignar >= 1 && SpawnIDAsignar <= 2)
					{
						SpawnIDAsignar--;
						if (FaccionData[PlayersData[playerid][Faccion]][Spawn_X][SpawnIDAsignar] != 0.0)
						{
							if (PlayersData[playeridAsignar][SpawnFac] != SpawnIDAsignar)
							{
								PlayersData[playeridAsignar][SpawnFac] = SpawnIDAsignar;
								UpdateSpawnPlayer(playerid);
								new MsgAsignadosToPlayer[MAX_TEXT_CHAT];
								if (playerid != playeridAsignar)
								{
									format(MsgAsignadosToPlayer, sizeof(MsgAsignadosToPlayer), "%s te ha cambiado el spawn de facción, por el ID %i.", PlayersDataOnline[playerid][NameOnlineFix], PlayersData[playeridAsignar][SpawnFac] + 1);
									SendInfoMessage(playeridAsignar, 3, "0", MsgAsignadosToPlayer);
									format(MsgAsignadosToPlayer, sizeof(MsgAsignadosToPlayer), "Le has cambiado el spawn de facción a %s por el ID %i.", PlayersDataOnline[playeridAsignar][NameOnlineFix], PlayersData[playeridAsignar][SpawnFac] + 1);
									SendInfoMessage(playerid, 3, "0", MsgAsignadosToPlayer);
								}
								else
								{
									format(MsgAsignadosToPlayer, sizeof(MsgAsignadosToPlayer), "Te has cambiado el spawn de facción, al ID %i.", PlayersData[playeridAsignar][SpawnFac] + 1);
									SendInfoMessage(playerid, 3, "0", MsgAsignadosToPlayer);
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "1525", "Ya este jugador tiene ese ID de spawn asiganado.");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1526", "El ID de spawn introducido, no está definido en su facción");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "1527", "El ID de spawn debe estar comprendido entre 1 y 2.");
					}
				}
				else
				{
					SendInfoMessage(playerid, 0, "1528", "El jugador que desea asignarle un spawn no pertenece a su facción");
				}
			}
		}
		else
		{
			SendInfoMessage(playerid, 0, "1529", "Usted no es Líder ni Sub-Líder!");
		}
	}
	return 1;
}

CMD:ver(playerid, params[])
{
	MsgAdminUseCommands(8, playerid, cmdtext);
	if (PlayersData[playerid][Admin] >= 1)
	{
		Comandos_Admin(17, playerid, 0, PlayersData[playerid][Admin], 0, "0");
		return 1;
	}
	else
	{
		SendInfoMessage(playerid, 0, "187", "Tú no tienes acceso al comando /Ver.");
		return 1;
	}
	
	switch(YHash(params, false))
	{
		case _I<precio>:
		{
			if (PlayersData[playerid][Faccion] == CAMIONEROS && PlayersData[playerid][Rango] <= 3 ||
			PlayersData[playerid][Faccion] == CONTRABANDISTAS && PlayersData[playerid][Rango] <= 3)
			{
				if (PlayersDataOnline[playerid][InPickup] >= NegociosData[1][PickupOutId] &&
					 PlayersDataOnline[playerid][InPickup] <= NegociosData[MAX_BIZZ][PickupOutId])
				{
					if (NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Type] >= 11 && PlayersData[playerid][Faccion] == CAMIONEROS)
					{
						if (NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][PricePiece] == 0)
						{
							SendInfoMessage(playerid, 2, "0", "Este negocio no está aceptando materiales");
						}
						else
						{
							new MsgVerPrecio[MAX_TEXT_CHAT];
							format(MsgVerPrecio, sizeof(MsgVerPrecio), "Este negocio paga el material a $%i. Actualmente tiene [%i/5000]", NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][PricePiece], NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Materiales]);
							SendInfoMessage(playerid, 2, "0", MsgVerPrecio);
						}
					}
					else if (NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Type] <= 10 && PlayersData[playerid][Faccion] == CONTRABANDISTAS)
					{
						if (NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][PricePiece] == 0)
						{
							SendInfoMessage(playerid, 2, "0", "Esta tienda no está aceptando materiales");
						}
						else
						{
							new MsgVerPrecio[MAX_TEXT_CHAT];
							format(MsgVerPrecio, sizeof(MsgVerPrecio), "Esta tienda paga el material a $%i. Actualmente tiene [%i/5000]", NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][PricePiece], NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Materiales]);
							SendInfoMessage(playerid, 2, "0", MsgVerPrecio);
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "784", "No puedes ver el precio de compra de este negocio");
					}
				}
				else
				{
					SendInfoMessage(playerid, 0, "785", "No te encuentras en ningún negocio");
				}
			}
			else
			{
				SendInfoMessage(playerid, 0, "786", "Usted no puedes ver el precio del producto!");
			}
		}
		
		case _I<candado>:
		{
			if (PlayersData[playerid][Faccion] == SAPD ||
				 PlayersData[playerid][Faccion] == SAPD)
			{
				new MyNearCar = IsPlayerInNearVehicle(playerid);
				new Message[MAX_TEXT_CHAT];

				if (DataCars[MyNearCar][LockPolice])
				{
					format(Message, MAX_TEXT_CHAT, "Este vehículo tiene un candado del departamento %s", DataCars[MyNearCar][ReasonLock]);
					SendClientMessage(playerid, 0xFFA97FFF, Message);
				}
				else
				{
					SendClientMessage(playerid, COLOR_MESSAGES[0], "Este vehículo no tiene candado policial");
				}
			}
			else
			{
				SendInfoMessage(playerid, 0, "2491", "Usted no es policía!");
			}
		}
		
		case _I<asignados>:
		{
			if(PlayersData[playerid][Faccion] != CIVIL && PlayersData[playerid][Rango] <= 1)
			{
				if (IsPlayerNear(playerid, strval(cmdtext[15]),
					 "1202",
					 "1203",
					 "1204",
					 "El jugador que desea verle los vehículos asignados no se encuentra conectado",
					 "El jugador que desea verle los vehículos asignados no se encuentra logueado",
					 "El jugador que desea verle los vehículos asignados no se encuentra cerca de tí"))
				{
					if (PlayersData[strval(cmdtext[15])][Faccion] == PlayersData[playerid][Faccion])
					{
						new MsgAsignadosToPlayer[MAX_TEXT_CHAT];
						format(MsgAsignadosToPlayer, sizeof(MsgAsignadosToPlayer), "%s mira los vehículos que tienes asignados con el comando /Ver Asignados.", PlayersDataOnline[playerid][NameOnlineFix]);
						SendInfoMessage(strval(cmdtext[15]), 3, "0", MsgAsignadosToPlayer);

						ShowAsignados(strval(cmdtext[15]), playerid);
					}
					else
					{
						SendInfoMessage(playerid, 0, "1358", "El jugador que desea verle los vehículos asignados, no pertenece a su facción");
					}
				}
			}
			else
			{
				SendInfoMessage(playerid, 0, "1205", "Usted no es Líder ni Sub-Líder!");
			}
		}
		
		case _I<horas>:
		{
			if(PlayersData[playerid][Faccion] != CIVIL && PlayersData[playerid][Rango] <= 1)
			{
				if (IsPlayerNear(playerid, strval(cmdtext[11]),
					 "1361",
					 "1362",
					 "1363",
					 "El jugador que desea verle las horas jugadas no se encuentra conectado",
					 "El jugador que desea verle las horas jugadas no se encuentra logueado",
					 "El jugador que desea verle las horas jugadas no se encuentra cerca de tí"))
				{
					if (PlayersData[strval(cmdtext[11])][Faccion] == PlayersData[playerid][Faccion])
					{
						new MsgAsignadosToPlayer[MAX_TEXT_CHAT];
						format(MsgAsignadosToPlayer, sizeof(MsgAsignadosToPlayer), "%s mira las horas jugadas desde el último reinicio de horas, con el comando /Ver Horas.", PlayersDataOnline[playerid][NameOnlineFix]);
						SendInfoMessage(strval(cmdtext[11]), 3, "0", MsgAsignadosToPlayer);
						format(MsgAsignadosToPlayer, sizeof(MsgAsignadosToPlayer), "%s tiene %i horas jugadas desde el último reinicio de horas.", PlayersDataOnline[strval(cmdtext[11])][NameOnlineFix], PlayersData[strval(cmdtext[11])][HorasWork]);
						SendInfoMessage(playerid, 3, "0", MsgAsignadosToPlayer);
					}
					else
					{
						SendInfoMessage(playerid, 0, "1359", "El jugador que desea verle las horas jugadas no pertenece a su facción");
					}
				}
			}
			else
			{
				SendInfoMessage(playerid, 0, "1360", "Usted no es Líder ni Sub-Líder!");
			}
		}
		
		case _I<desing>:
		{
			MsgAdminUseCommands(8, playerid, cmdtext);
			if (PlayersData[playerid][Admin] >= 8)
			{
				new MsgChangeDesing[MAX_TEXT_CHAT];
				format(MsgChangeDesing, sizeof(MsgChangeDesing), "   -  Desing ID [%i]  -", PlayersDataOnline[playerid][DesignGarageId]);
				SendInfoMessage(playerid, 2, "0", MsgChangeDesing);
				format(MsgChangeDesing, sizeof(MsgChangeDesing), "   -  X_Afuera: %f | Y_Afuera: %f  | Z_Afuera: %f | ZZ_Afuera: %f ", GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][Xg], GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][Yg], GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][Zg], GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][ZZg]);
				SendInfoMessage(playerid, 2, "0", MsgChangeDesing);
				format(MsgChangeDesing, sizeof(MsgChangeDesing), "   -  X_Afuera_C: %f | Y_Afuera_C: %f  | Z_Afuera_C: %f | ZZ_Afuera_C: %f ", GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][XgOut], GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][YgOut], GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][ZgOut], GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][ZZgOut]);
				SendInfoMessage(playerid, 2, "0", MsgChangeDesing);
				format(MsgChangeDesing, sizeof(MsgChangeDesing), "   -  X_Dentro: %f | Y_Dentro: %f  | Z_Dentro: %f | ZZ_Dentro: %f ", GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][XgIn], GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][YgIn], GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][ZgIn], GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][ZZgIn]);
				SendInfoMessage(playerid, 2, "0", MsgChangeDesing);
			}
			else
			{
				SendInfoMessage(playerid, 0, "1169", "No tienes acceso al comando /Ver Design");
			}
		}
		
		case _I<frecuencia>:
		{
			if (FaccionData[PlayersData[playerid][Faccion]][Radio])
			{
				if (PlayersDataOnline[playerid][StateChannelRadio])
				{
					new MsgFrecuencia[MAX_TEXT_CHAT];
					Acciones_ROL(playerid, ACCION_ME, "mira en que frecuencia está su radio");
					format(MsgFrecuencia, sizeof(MsgFrecuencia), "Se ecuentra en la frecuencia [%i]", PlayersDataOnline[playerid][Frecuencia]);
					SendInfoMessage(playerid, 2, "0", MsgFrecuencia);
				}
				else
				{
					SendInfoMessage(playerid, 0, "1016", "Tú tienes cerrado el canal Radio personal, abrelo con /Estado Radio y luego usa /Ver Frecuencia");
				}
			}
			else
			{
				SendInfoMessage(playerid, 0, "1017", "Su facción no tiene canal /R [Radio], no puedes usar /Ver Frecuencia");
			}
		}
		
		case _I<saldo>:
		{
			new MsgSaldoCheck[MAX_TEXT_CHAT];
			Acciones_ROL(playerid, ACCION_ME, "chequea su saldo");
			format(MsgSaldoCheck, sizeof(MsgSaldoCheck), "Tiene $%i de saldo en su móvil.", PlayersData[playerid][Saldo]);
			SendInfoMessage(playerid, 2, "0", MsgSaldoCheck);
		}
		
		case _I<deposito>:
		{
			if (PlayersData[playerid][Faccion] == GOBIERNO && PlayersData[playerid][Rango] <= 1 ||
				 PlayersData[playerid][Faccion] == CAMIONEROS && PlayersData[playerid][Rango] <= 3 ||
				 PlayersData[playerid][Admin] >= 8)
			{
				new MyNearGas = GetMyNearGas(playerid);
				if (MyNearGas != -1)
				{
					new MsgConsultarDepositoGas[MAX_TEXT_CHAT];
					format(MsgConsultarDepositoGas, sizeof(MsgConsultarDepositoGas), "Esta gasolinera tiene [%i/12000] litros de gas",  Gasolineras[MyNearGas][Fuel]);
					SendInfoMessage(playerid, 2, "0", MsgConsultarDepositoGas);
				}
			}
			else
			{
				SendInfoMessage(playerid, 0, "523", "Usted no puede ver cuánto tiene esta gasolinera!");
			}
		}
		
		case _I<bomba>:
		{
			if (PlayersData[playerid][Faccion] == SICARIOS &&
				 PlayersData[playerid][Rango] <= 4)
			{
				new IsBombNear = IsPlayerNearBomba(playerid, 1.5, -1);
				if (IsBombNear != -1)
				{
					new MsgVerBomba[MAX_TEXT_CHAT];
					format(MsgVerBomba, sizeof(MsgVerBomba), "Esta bomba tiene el número de control #%i", IsBombNear);
					SendInfoMessage(playerid, 2, "0", MsgVerBomba);
				}
				else
				{
					SendInfoMessage(playerid, 0, "1300", "No te encuentras cerca de una bomba");
				}
			}
			else
			{
				SendInfoMessage(playerid, 0, "1297", "Usted no puede ver el número de control en una bomba!");
			}
		}
		
		case _I<direccion>:
		{
			if (PlayersData[playerid][Phone] != 0)
			{
				if (GetPlayerVirtualWorld(playerid) == WORLD_NORMAL)
				{
					// RC - info casa
					if (PlayersDataOnline[playerid][InPickup] >= HouseData[1][PickupId] &&
						 PlayersDataOnline[playerid][InPickup] <= HouseData[MAX_HOUSE][PickupId])
					{
						Acciones_ROL(playerid, ACCION_ME, "mira la dirección de lugar");
						new MsgInfoCasa[MAX_TEXT_CHAT];
						format(MsgInfoCasa, MAX_TEXT_CHAT, "Dirección: CA-%i (Casa)",PlayersDataOnline[playerid][MyPickupWorld]);
						//SendInfoMessage(playerid, 1, MsgInfoCasa, "Casa:");
						SendInfoMessage(playerid, 2, "0", MsgInfoCasa);
					}
					// RN - info negocio
					else if (PlayersDataOnline[playerid][InPickup] >= NegociosData[1][PickupOutId] &&
						 PlayersDataOnline[playerid][InPickup] <= NegociosData[MAX_BIZZ][PickupOutId])
					{
						Acciones_ROL(playerid, ACCION_ME, "mira la dirección de lugar");
						new MsgInfoNegocio[MAX_TEXT_CHAT];
						format(MsgInfoNegocio, MAX_TEXT_CHAT, "Dirección: NE-%i (Negocio)",PlayersDataOnline[playerid][MyPickupWorld]);

						//SendInfoMessage(playerid, 1, MsgInfoNegocio, "Negocio:");
						SendInfoMessage(playerid, 2, "0", MsgInfoNegocio);
					}

					// GC - info garage
					else if (PlayersDataOnline[playerid][InPickup] >= MIN_GARAGE_PICKUP &&
						 PlayersDataOnline[playerid][InPickup] <= MAX_GARAGE_PICKUP)
					{
						new GarageID, HouseID;

						HouseID = PlayersDataOnline[playerid][InPickupTele];
						GarageID = (PlayersData[playerid][IsPlayerInGarage] + 50);

						Acciones_ROL(playerid, ACCION_ME, "mira la dirección de lugar");
						new MsgChangeType[MAX_TEXT_CHAT];
						format(MsgChangeType, sizeof(MsgChangeType), "Dirección: GC-%i-%i (Garage de casa)",HouseID, GarageID);
						//SendInfoMessage(playerid, 1, MsgChangeType, "Garage de casa:");
						SendInfoMessage(playerid, 2, "0", MsgChangeType);
					}
					// RT - info puertaex
					else if (PlayersDataOnline[playerid][InPickup] >= Teles[0][PickupID] &&
							  PlayersDataOnline[playerid][InPickup] <= Teles[MAX_TELE][PickupID])
					{
						for(new i=0;i<=MAX_TELE;i++)
						{
							if (Teles[i][PickupID] == PlayersDataOnline[playerid][InPickup])
							{
								new GarageID;

								GarageID = i;

								Acciones_ROL(playerid, ACCION_ME, "mira la dirección de lugar");
								new MsgChangeType[MAX_TEXT_CHAT];
								format(MsgChangeType, sizeof(MsgChangeType), "Dirección: RT-%i (Lugar)",GarageID);
								//SendInfoMessage(playerid, 1, MsgChangeType, "RT:");
								SendInfoMessage(playerid, 2, "0", MsgChangeType);
								break;
							}
						}
					}
					// RF - info faccion
					else if (PlayersDataOnline[playerid][InPickup] >= FaccionData[GOBIERNO][PickupidOutF] &&
						 PlayersDataOnline[playerid][InPickup] <= FaccionData[MAX_FACCION][PickupidOutF])
					{
						//new MyNearFaccion = GetNearFaccion(playerid);
						for(new i=GOBIERNO;i<=MAX_FACCION;i++)
						{
							if (FaccionData[i][PickupidOutF] == PlayersDataOnline[playerid][InPickup])
							{
								new FaccionID;
								FaccionID = i;

								Acciones_ROL(playerid, ACCION_ME, "mira la dirección de lugar");
								new MsgChangeType[MAX_TEXT_CHAT];
								format(MsgChangeType, sizeof(MsgChangeType), "Dirección: RF-%i (Facción)",FaccionID);
								//SendInfoMessage(playerid, 1, MsgChangeType, "Facción:");
								SendInfoMessage(playerid, 2, "0", MsgChangeType);
								break;
							}
						}
					}
					// GP - info garageex
					else if (PlayersDataOnline[playerid][InPickup] >= GaragesEx[0][PickupIDTwoP] &&
							  PlayersDataOnline[playerid][InPickup] <= GaragesEx[MAX_GARAGES_EX][PickupIDTwoP])
					{
						for (new i = 0; i <= MAX_GARAGES_EX; i++)
						{
							if (GaragesEx[i][PickupIDTwoP] == PlayersDataOnline[playerid][InPickup])
							{
								new GarageID = i;

								Acciones_ROL(playerid, ACCION_ME, "mira la dirección de lugar");
								new MsgChangeType[MAX_TEXT_CHAT];
								format(MsgChangeType, sizeof(MsgChangeType), "Dirección: GP-%i (Garage Privado)",GarageID);
								//SendInfoMessage(playerid, 1, MsgChangeType, "Garage privado:");
								SendInfoMessage(playerid, 2, "0", MsgChangeType);
								break;
							}
						}
					}
					else
					{
						SendInfoMessage(playerid, 1, "No se logró localizar la dirección actual, intente en entradas de: Casas, Negocios, Garages y Lugares.", "GPS:");
					}
				}
				else
				{
					SendInfoMessage(playerid, 1, "No se logró localizar la dirección actual, intente en entradas de: Casas, Negocios, Garages y Lugares.", "GPS:");
				}

			}
			else
			{
				SendInfoMessage(playerid, 0, "893", "Tú no tienes GPS, compra un móvil para poder utilizar el GPS");
			}
		}
	}
	return 1;
}
	
CMD:reiniciar(playerid, params[])
{
	if(strcmp(params, "horas", true) == 0)
	{
		if(PlayersData[playerid][Faccion] != CIVIL && PlayersData[playerid][Rango] <= 1)
		{
			if (IsPlayerNear(playerid, strval(cmdtext[17]),
				 "1366",
				 "1367",
				 "1368",
				 "El jugador que deseas reiniciarles las horas no se encuentra conectado",
				 "El jugador que deseas reiniciarles las horas no se encuentra logueado",
				 "El jugador que deseas reiniciarles las horas no se encuentra cerca de tí"))
			{
				if (PlayersData[strval(cmdtext[17])][Faccion] == PlayersData[playerid][Faccion])
				{
					new MsgAsignadosToPlayer[MAX_TEXT_CHAT];
					format(MsgAsignadosToPlayer, sizeof(MsgAsignadosToPlayer), "%s te reinició las horas de trabajo.", PlayersDataOnline[playerid][NameOnlineFix]);
					SendInfoMessage(strval(cmdtext[17]), 3, "0", MsgAsignadosToPlayer);
					format(MsgAsignadosToPlayer, sizeof(MsgAsignadosToPlayer), "Reiniciaste las horas de trabajo a %s .", PlayersDataOnline[strval(cmdtext[17])][NameOnlineFix]);
					SendInfoMessage(playerid, 3, "0", MsgAsignadosToPlayer);
					PlayersData[strval(cmdtext[17])][HorasWork] = 0;
				}
				else
				{
					SendInfoMessage(playerid, 0, "1364", "El jugador que desea verle las horas jugadas no pertenece a su facción");
				}
			}
		}
		else
		{
			SendInfoMessage(playerid, 0, "1365", "Usted no es Líder ni Sub-Líder!");
		}
	}
	return 1;
}
				
CMD:abastecer(playerid, params[])
{
	new option[24];
	if(sscanf(params, "s[24]", option)) return SendInfoMessage(playerid, 0, "797", "Quizás quiso decir: /Abastecer {Gasolinera, Negocio, Tienda, Almacén}");
	
	if(!strcmp(option, "gasolinera", true))
	{
		if (PlayersData[playerid][Faccion] == CAMIONEROS && PlayersData[playerid][Rango] <= 3)
		{
			if (PlayersData[playerid][MyBonus])
			{
				if (IsPlayerInAnyVehicle(playerid) && GetVehicleModel(GetPlayerVehicleID(playerid)) == 514 ||
					 IsPlayerInAnyVehicle(playerid) && GetVehicleModel(GetPlayerVehicleID(playerid)) == 515 ||
					 /*IsPlayerInAnyVehicle(playerid) && GetVehicleModel(GetPlayerVehicleID(playerid)) == 456 ||*/ //Solo camiones de gasolina
					 IsPlayerInAnyVehicle(playerid) && GetVehicleModel(GetPlayerVehicleID(playerid)) == 403 ||
					 /*IsPlayerInAnyVehicle(playerid) && GetVehicleModel(GetPlayerVehicleID(playerid)) == 578 ||*/ //Solo camiones de gasolina
					 IsPlayerInAnyVehicle(playerid) && GetVehicleModel(GetPlayerVehicleID(playerid)) == 454 ||
					 IsPlayerInAnyVehicle(playerid) && GetVehicleModel(GetPlayerVehicleID(playerid)) == 484)

				{
					new MyNearGas = GetMyNearGas(playerid);
					if (MyNearGas != -1)
					{
						if (Gasolineras[MyNearGas][Fuel] + 5000 <= 12000)
						{
							Gasolineras[MyNearGas][Fuel] = Gasolineras[MyNearGas][Fuel] + 2000;
							SendInfoMessage(playerid, 3, "0", "Abasteciste con 2000 litros esta gasolinera!");
							Acciones_ROL(playerid, ACCION_ME, "ha llenado los depositos de esta gasolinera");
							GivePlayerMoneyEx(playerid, 800);
							PlayersData[playerid][MyBonus] = false;
						}
						else
						{
							SendInfoMessage(playerid, 0, "798", "El deposito de esta gasolinera esta llena o los 2000 litros más lo que tiene actualmente sobrepasan el límite de 12000 litros");
						}
					}
				}
				else
				{
					SendInfoMessage(playerid, 0, "787", "Suba a un trailer para abastecer una gasolinera");
				}
			}
			else
			{
				SendInfoMessage(playerid, 0, "788", "No tiene mercancías para abastecer una gasolinera");
			}
		}
		else
		{
			SendInfoMessage(playerid, 0, "789", "Usted no puede abastecer gasolineras!");
		}
	}
	else if(!strcmp(option, "tienda", true))
	{
		if (PlayersData[playerid][Faccion] == CONTRABANDISTAS && PlayersData[playerid][Rango] <= 3)
		{
			if (PlayersDataOnline[playerid][InPickup] >= NegociosData[1][PickupOutId] &&
				 PlayersDataOnline[playerid][InPickup] <= NegociosData[MAX_BIZZ][PickupOutId])
			{
				new MyNearCar = IsPlayerInNearVehicle(playerid);
				if (MyNearCar)
				{
					if (GetVehicleModel(MyNearCar) == 482 ||
						 GetVehicleModel(MyNearCar) == 418)
					{
						if (coches_Todos_Maleteros[MyNearCar][10][0] != 0)
						{
							if (NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Type] <= 10)
							{
								if (NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][PricePiece] != 0 )
								{
									if (NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Materiales] + coches_Todos_Maleteros[MyNearCar][10][0] <= 5000)
									{
										if (NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Deposito] >= coches_Todos_Maleteros[MyNearCar][10][0] * NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][PricePiece])
										{
											NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Materiales] = NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Materiales] + coches_Todos_Maleteros[MyNearCar][10][0];
											NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Deposito] = NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Deposito] -(coches_Todos_Maleteros[MyNearCar][10][0] * NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][PricePiece]);
											FaccionData[CONTRABANDISTAS][Deposito] = FaccionData[CONTRABANDISTAS][Deposito] + (coches_Todos_Maleteros[MyNearCar][10][0] * NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][PricePiece]);

											new MsgAbastecerNegocio[MAX_TEXT_CHAT];
											format(MsgAbastecerNegocio, sizeof(MsgAbastecerNegocio), "Has abastecido este negocio con %i materiales, se le ha enviado $%i a la cuenta de la empresa", coches_Todos_Maleteros[MyNearCar][10][0], coches_Todos_Maleteros[MyNearCar][10][0] * NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][PricePiece]);
											SendInfoMessage(playerid, 3, "0", MsgAbastecerNegocio);
											coches_Todos_Maleteros[MyNearCar][10][0] = 0;
										}
										else
										{
											SendInfoMessage(playerid, 0, "-", "Esta tienda no le queda suficiente dinero para comprale todos los materiales de la furgona");
										}
									}
									else
									{
										SendInfoMessage(playerid, 0, "-", "El almacén de la tienda esta lleno o los materiales que quieres depositar ya sobrepasan el límite de 5000");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "-", "Esta tienda no está aceptando compra de materiales, contacte con el dueño");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "-", "Solo puedes abastecer tiendas de ropa");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "-", "No le quedan materiales a este vehículo");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "-", "No estás con un vehículo de materiales, busque uno y aparquelo junto al negocio y luego use (/Abastecer Tienda)");
					}
				}
			}
			else
			{
				SendInfoMessage(playerid, 0, "-", "No te encuentras en ninguna Tienda de Ropas, ni mucho menos en una Armeria!");
			}
		}
		else
		{
			SendInfoMessage(playerid, 0, "-", "Usted no puede abastecer Tiendas!");
		}
	}
	else if(strcmp(params, "negocio", true) == 0)
	{
		if (PlayersData[playerid][Faccion] == CAMIONEROS && PlayersData[playerid][Rango] <= 3)
		{
			if (PlayersDataOnline[playerid][InPickup] >= NegociosData[1][PickupOutId] &&
				 PlayersDataOnline[playerid][InPickup] <= NegociosData[MAX_BIZZ][PickupOutId])
			{
				new MyNearCar = IsPlayerInNearVehicle(playerid);
				if (MyNearCar)
				{
					if (GetVehicleModel(MyNearCar) == 514 ||
						 GetVehicleModel(MyNearCar) == 515 ||
						 GetVehicleModel(MyNearCar) == 403 ||
						 GetVehicleModel(MyNearCar) == 456 ||
						 GetVehicleModel(MyNearCar) == 578)
					{
						if (coches_Todos_Maleteros[MyNearCar][10][0] != 0)
						{
							if (NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][PricePiece] != 0 )
							{
								if (NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Materiales] + coches_Todos_Maleteros[MyNearCar][10][0] <= 5000)
								{
									if (NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Deposito] >= coches_Todos_Maleteros[MyNearCar][10][0] * NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][PricePiece])
									{
										NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Materiales] = NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Materiales] + coches_Todos_Maleteros[MyNearCar][10][0];
										NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Deposito] = NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Deposito] -(coches_Todos_Maleteros[MyNearCar][10][0] * NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][PricePiece]);
										FaccionData[CAMIONEROS][Deposito] = FaccionData[CAMIONEROS][Deposito] + (coches_Todos_Maleteros[MyNearCar][10][0] * NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][PricePiece]);

										new MsgAbastecerNegocio[MAX_TEXT_CHAT];
										format(MsgAbastecerNegocio, sizeof(MsgAbastecerNegocio), "Has abastecido este negocio con %i materiales, se le ha enviado $%i a la cuenta de la empresa", coches_Todos_Maleteros[MyNearCar][10][0], coches_Todos_Maleteros[MyNearCar][10][0] * NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][PricePiece]);
										SendInfoMessage(playerid, 3, "0", MsgAbastecerNegocio);
										coches_Todos_Maleteros[MyNearCar][10][0] = 0;
										Acciones_ROL(playerid, ACCION_ME, "ha entregado nueva mercaderia al negocio");
									}
									else
									{
										SendInfoMessage(playerid, 0, "790", "Este negocio no le quedá suficiente dinero para comprale todos los materiales del camión");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "799", "El almacén del negocio esta lleno o los materiales que quieres depositar ya sobrepasan el límite de 5000");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "791", "Este negocio no esta aceptando compra de materiales, conctacte con el dueño");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "793", "No le quedan materiales a este camión");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "794", "Este vehículo no es un camión de materiales, busque uno y aparquelo junto al negocio y luego use (/Abastecer Negocio)");
					}
				}
			}
			else
			{
				SendInfoMessage(playerid, 0, "795", "No te encuentras en ningún negocio");
			}
		}
		else
		{
			SendInfoMessage(playerid, 0, "796", "Usted no puede abastecer negocios!");
		}
	}
	if(strcmp(params, "almacen", true) == 0)
	{
		if (PlayersData[playerid][Faccion] == CAMIONEROS && PlayersData[playerid][Rango] <= 3)
		{
			new FaccionID = -1;

			if (IsPlayerInRangeOfPoint(playerid, 10.0,
				 FaccionData[TALLER_LS][AlmacenX][0],
				 FaccionData[TALLER_LS][AlmacenY][0],
				 FaccionData[TALLER_LS][AlmacenZ][0]))
			{
				FaccionID = TALLER_LS;
			}
			else if (IsPlayerInRangeOfPoint(playerid, 10.0,
				 FaccionData[TALLER_LS][AlmacenX][0],
				 FaccionData[TALLER_LS][AlmacenY][0],
				 FaccionData[TALLER_LS][AlmacenZ][0]))
			{
				FaccionID = TALLER_LS;
			}
			else if (IsPlayerInRangeOfPoint(playerid, 10.0,
				 FaccionData[SAPD][AlmacenX][0],
				 FaccionData[SAPD][AlmacenY][0],
				 FaccionData[SAPD][AlmacenZ][0]))
			{
				FaccionID = SAPD;
			}

			if (FaccionID != -1)
			{
				new MyNearCar = IsPlayerInNearVehicle(playerid);
				if (MyNearCar)
				{
					if (GetVehicleModel(MyNearCar) == 514 || GetVehicleModel(MyNearCar) == 515 || GetVehicleModel(MyNearCar) == 403 || GetVehicleModel(MyNearCar) == 456 || GetVehicleModel(MyNearCar) == 578 ||
						 MyNearCar > MAX_CAR_DUENO && MyNearCar <= MAX_CAR_FACCION)
					{
						if (coches_Todos_Maleteros[MyNearCar][10][0] != 0)
						{
							FaccionData[FaccionID][Almacen][0] = FaccionData[FaccionID][Almacen][0] + coches_Todos_Maleteros[MyNearCar][10][0];
							new MsgAbastecerAlmacen[MAX_TEXT_CHAT];
							format(MsgAbastecerAlmacen, sizeof(MsgAbastecerAlmacen), "Has abastecido este almacén con %i materiales", coches_Todos_Maleteros[MyNearCar][10][0]);
							SendInfoMessage(playerid, 3, "0", MsgAbastecerAlmacen);
							coches_Todos_Maleteros[MyNearCar][10][0] = 0;
						}
						else
						{
							SendInfoMessage(playerid, 0, "865", "No le quedan materiales a este camión");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "866", "Este vehículo no es un camión o furgona de materiales, busque uno y aparquelo junto al almacén y luego use (/Abastecer Almacén)");
					}
				}
			}
			else
			{
				SendInfoMessage(playerid, 0, "867", "No te encuentras en ningún almacén que puedas abastecer!");
			}
		}
		else
		{
			SendInfoMessage(playerid, 0, "868", "Usted no puede abastecer almacenes!");
		}
	}
}

CMD:obtener(playerid, params[])
{
	new option[24];
	if(sscanf(params, "s[24]", option)) return
	
	if(!strcmp(option, "mercancia", true))
	{
		if (PlayersData[playerid][Faccion] == CAMIONEROS ||
			 PlayersData[playerid][Faccion] == CONTRABANDISTAS ||
			 PlayersData[playerid][Faccion] == TRAFICANTES	)
		{
			if (!PlayersData[playerid][MyBonus])
			{
				// CAMIONEROS
				if (PlayersData[playerid][Faccion] == CAMIONEROS)
				{
					if (IsPlayerInRangeOfPoint(playerid, 5.0, FaccionesMercancias[CAMIONEROS][PosX], FaccionesMercancias[CAMIONEROS][PosY], FaccionesMercancias[CAMIONEROS][PosZ]))
					{
						PlayersData[playerid][MyBonus] = true;
						SendInfoMessage(playerid, 3, "0", "Has obtenido mercancías!");

						GivePlayerMoneyEx(playerid, 50);
					}
					else
					{
						SendInfoMessage(playerid, 0, "783", "No se encuentra en la petrolera para obtener mercancías. Hemos creado un checkpoint para tí.");
						SetPlayerCheckpoint(playerid, FaccionesMercancias[CAMIONEROS][PosX], FaccionesMercancias[CAMIONEROS][PosY], FaccionesMercancias[CAMIONEROS][PosZ],  5.0);
						onCheck[playerid] = true;
					}
				}
				else if (PlayersData[playerid][Faccion] == CONTRABANDISTAS)
				{
					if (IsPlayerInRangeOfPoint(playerid, 5.0, FaccionesMercancias[CONTRABANDISTAS][PosX], FaccionesMercancias[CONTRABANDISTAS][PosY], FaccionesMercancias[CONTRABANDISTAS][PosZ]) || IsPlayerInRangeOfPoint(playerid, 20.0, -1421.7528,-964.7759,200.7651))
					{
						PlayersData[playerid][MyBonus] = true;
						SendInfoMessage(playerid, 3, "0", "Has obtenido mercancías!");

						GivePlayerMoneyEx(playerid, 50);
					}
					else
					{
						SendInfoMessage(playerid, 0, "-", "No se encuentra en la cabaña. Hemos creado un checkpoint para tí.");
						SetPlayerCheckpoint(playerid, 549.8550, -2982.2412, 10.9435, 5.0);
						onCheck[playerid] = true;
					}
				}
				else if (PlayersData[playerid][Faccion] == TRAFICANTES)
				{
					if (IsPlayerInRangeOfPoint(playerid, 5.0, FaccionesMercancias[TRAFICANTES][PosX], FaccionesMercancias[TRAFICANTES][PosY], FaccionesMercancias[TRAFICANTES][PosZ]))
					{
						PlayersData[playerid][MyBonus] = true;
						SendInfoMessage(playerid, 3, "0", "Has obtenido mercancías!");

						GivePlayerMoneyEx(playerid, 50);
					}
					else
					{
						SendInfoMessage(playerid, 0, "800", "No se encuentra en la cima de la montaña. Hemos creado un checkpoint para tí.");
						SetPlayerCheckpoint(playerid, FaccionesMercancias[TRAFICANTES][PosX], FaccionesMercancias[TRAFICANTES][PosY], FaccionesMercancias[TRAFICANTES][PosZ], 5.0);
						onCheck[playerid] = true;
					}
				}
			}
			else
			{
				SendInfoMessage(playerid, 0, "-", "Ya usted tiene mercancías, deposite esas para obtener otras");
			}
		}
		else
		{
			SendInfoMessage(playerid, 0, "-", "Usted no puede obtener mercancías!");
		}
	}
	else if(!strcmp(option, "camara", true))
	{
		if (PlayersData[playerid][Faccion] == CNN)
		{
			if (PlayersData[playerid][TimeEquipo] <= gettime())
			{
				if (CheckWeapondCheat(playerid) && IsPlayerInRangeOfPoint(playerid, 20.0, 1118.3374,1260.9243,10.8203))
				{
						PlayersData[playerid][TimeEquipo] = gettime() + 900;
						GivePlayerWeaponEx(playerid, 43, 50);
						Acciones_ROL(playerid, ACCION_ME, "coge una cámara fotográfica del estudio");
				}
				else
				{
					SendInfoMessage(playerid, 0, "908", "Aquí no se encuentra el estudio");
				}
			}
			else
			{
				new MsgPersonalizado[MAX_TEXT_CHAT];
				format(MsgPersonalizado, sizeof(MsgPersonalizado), "Debe esperar %i minutos con %i segundos para volver a coger una cámara", (PlayersData[playerid][TimeEquipo] - gettime()) / 60, ((PlayersData[playerid][TimeEquipo] - gettime()) % 60));
				SendInfoMessage(playerid, 0, "909", MsgPersonalizado);
			}
		}
		else
		{
			SendInfoMessage(playerid, 0, "910", "Usted no es CNN");
		}
	}
	else if(!strcmp(option, "bate", true))
	{
		if (PlayersData[playerid][Faccion] == COLTS ||
			 PlayersData[playerid][Faccion] == HAMPA ||
			 PlayersData[playerid][Faccion] == TheAngelsMC ||
			 PlayersData[playerid][Faccion] == HEORS)
		{
			if (PlayersData[playerid][TimeEquipo] <= gettime())
			{
				if (CheckWeapondCheat(playerid) && (
					 PlayersData[playerid][Faccion] == COLTS && IsPlayerInRangeOfPoint(playerid, 20.0, 1090.2321,1712.0156,10.9153) ||
					 PlayersData[playerid][Faccion] == TheAngelsMC && IsPlayerInRangeOfPoint(playerid, 20.0, 707.0674,-440.8705,16.3359) ||
					 PlayersData[playerid][Faccion] == HAMPA && (IsPlayerInRangeOfPoint(playerid, 20.0, 303.9115, 303.7705, 999.1484) || IsPlayerInRangeOfPoint(playerid, 20.0, 328.5336, 1125.5869, 1083.8828)) ||
					 PlayersData[playerid][Faccion] == HEORS && IsPlayerInRangeOfPoint(playerid, 20.0, 2447.7646, 2085.1616, 62.3593)
					))
				{
						PlayersData[playerid][TimeEquipo] = gettime() + 900;
						GivePlayerWeaponEx(playerid, 5, 1);
						Acciones_ROL(playerid, ACCION_ME, "coge un bate del armario");
				}
				else
				{
					SendInfoMessage(playerid, 0, "1468", "Aquí no se encuentra el armario");
				}
			}
			else
			{
				new MsgPersonalizado[MAX_TEXT_CHAT];
				format(MsgPersonalizado, sizeof(MsgPersonalizado), "Debe esperar %i minutos con %i segundos para volver a coger un bate", (PlayersData[playerid][TimeEquipo] - gettime()) / 60, ((PlayersData[playerid][TimeEquipo] - gettime()) % 60));
				SendInfoMessage(playerid, 0, "909", MsgPersonalizado);
			}
		}
		else
		{
			SendInfoMessage(playerid, 0, "1469", "Usted no es pandillero!");
		}
	}
	else if(!strcmp(option, "extintor", true))
	{
		if (PlayersData[playerid][Faccion] == LSMD ||
			 PlayersData[playerid][Faccion] == LSMD)
		{
			if (PlayersData[playerid][TimeEquipo] <= gettime())
			{
				if (CheckWeapondCheat(playerid) && (PlayersData[playerid][Faccion] == LSMD && IsPlayerInRangeOfPoint(playerid, 20.0, 1491.9310,2863.6858,13.7608) ||
													 PlayersData[playerid][Faccion] == LSMD && IsPlayerInRangeOfPoint(playerid, 20.0, 1859.0066,1402.4146,16.9622)))
				{
						PlayersData[playerid][TimeEquipo] = gettime() + 900;
						GivePlayerWeaponEx(playerid, 42, 3000);
						Acciones_ROL(playerid, ACCION_ME, "coge un extintor de la estación");
				}
				else
				{
					SendInfoMessage(playerid, 0, "1282", "Aquí no se encuentra la estación de bomberos");
				}
			}
			else
			{
				new MsgPersonalizado[MAX_TEXT_CHAT];
				format(MsgPersonalizado, sizeof(MsgPersonalizado), "Debe esperar %i minutos con %i segundos para volver a coger un extintor", (PlayersData[playerid][TimeEquipo] - gettime()) / 60, ((PlayersData[playerid][TimeEquipo] - gettime()) % 60));
				SendInfoMessage(playerid, 0, "1283", MsgPersonalizado);
			}
		}
		else
		{
			SendInfoMessage(playerid, 0, "1284", "Usted no es bombero!");
		}
	}
	// COMANDO: /Obtener Drogas
	else if (strcmp("/Obtener Drogas", cmdtext, true, 15) == 0 && strlen(cmdtext) == 15)
	{
		if (PlayersData[playerid][Faccion] == TRAFICANTES && PlayersData[playerid][Rango] <= 1 ||
			 PlayersData[playerid][Faccion] == TRAFICANTES && PlayersData[playerid][Rango] == 3)
		{
			if (TimerDrogas <= gettime())
			{
				if (IsPlayerInAlmacen(playerid, true) != -1)
				{
					TimerDrogas = gettime() + 1200;
					SendInfoMessage(playerid, 3, "0", "Ha obtenido 30 drogas del almacén");
					PlayersData[playerid][Drogas] = PlayersData[playerid][Drogas] + 30;
				}
			}
			else
			{
				new MsgObtenerDrogasError[MAX_TEXT_CHAT];
				format(MsgObtenerDrogasError, sizeof(MsgObtenerDrogasError), "No se puede retirar más droga hasta dentro de %i minutos", (TimerDrogas - gettime()) / 60);
				SendInfoMessage(playerid, 0, "764", MsgObtenerDrogasError);
			}
		}
		else
		{
			SendInfoMessage(playerid, 0, "763", "Usted no es vendedor de drogas");
		}
	}
	else
	{
		SendInfoMessage(playerid, 0, "762", "Quizás quiso decir: /Obtener {Drogas, Mercancía, Cámara, Extintor, Bate}");
	}
}
				// COMANDO: /Apagar
				else if (strfind(cmdtext, "/Apagar", true) == 0)
				{
					// COMANDO: /Apagar
				  	if (strcmp("/Apagar", cmdtext, true, 7) == 0 && strlen(cmdtext) == 7)
				  	{
						ApagarVehicle(playerid);
				  	}
					// COMANDO: /Apagar Alarma
				  	else if (strcmp("/Apagar Alarma", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
				  	{
						if (IsPlayerInAnyVehicle(playerid))
						{
						    new MyVehicleID = GetPlayerVehicleID(playerid);
							if (DataCars[MyVehicleID][AlarmOn])
							{
							    if (IsVehicleNotBici(playerid, MyVehicleID))
							    {
							  	    new MsgAlarmaDinamico[MAX_TEXT_CHAT];
							  	    if (GetPlayerVehicleSeat(playerid) == 0)
							  	    {
							  	    	format(MsgAlarmaDinamico, sizeof(MsgAlarmaDinamico), "apagar la alarma del vehículo");
									}
									else
									{
							  	    	format(MsgAlarmaDinamico, sizeof(MsgAlarmaDinamico), "ayudar a apagar la alarma del vehículo");
									}

			  						if (IntentarAccion(playerid, MsgAlarmaDinamico, random(2)))
			   						{
									    Acciones_ROL(playerid, ACCION_AME, "Alarma: Apagada...");
				   						DataCars[MyVehicleID][AlarmOn] = false;
		       	   						IsVehicleOff(MyVehicleID);
			   						}
		   						}
							}
							else
							{
								SendInfoMessage(playerid, 0, "991", "Este vehículo ya tiene la alarma apagada");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "990", "Suba al vehículo que desea apagarle la alarma y use (/Apagar Alarma)");
						}
				  	}
				  	// COMANDO: /Apagar Neon
				  	else if (strcmp("/Apagar Neon", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12 ||
				  			 strfind(cmdtext, "/Apagar Neón", true) == 0)
				  	{
						if (IsPlayerInAnyVehicle(playerid))
						{
						    new MyVehicleID = GetPlayerVehicleID(playerid);
							if (DataCars[MyVehicleID][NeonID] >= 18647 && DataCars[MyVehicleID][NeonID] <= 18651)
							{
								DestroyObject(DataCars[MyVehicleID][NeonIZ]);
								DataCars[MyVehicleID][NeonIZ] = false;
								DestroyObject(DataCars[MyVehicleID][NeonDE]);
								DataCars[MyVehicleID][NeonDE] = false;

                                DataCars[MyVehicleID][NeonOn] = false;

                                Acciones_ROL(playerid, ACCION_ME, "apaga el neón del vehículo");
							}
							else
							{
								SendInfoMessage(playerid, 0, "991", "Este vehículo no tiene neón instalado");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "990", "Suba al vehículo que desea apagarle el neón y use (/Apagar Neon)");
						}
				  	}
					else
					{
						SendInfoMessage(playerid, 0, "989", "Quizás quiso decir: /Apagar - /Apagar Alarma - /Apagar Neon");
					}
			  	}
				// COMANDO: /Encender
				else if (strfind(cmdtext, "/Encender", true) == 0)
				{
					// /Encender
				  	if (strcmp("/Encender", cmdtext, true, 9) == 0 && strlen(cmdtext) == 9)
				  	{
						EncenderVehicle(playerid);
				  	}
					// /Encender Alarma
				  	else if (strcmp("/Encender Alarma", cmdtext, true, 16) == 0 && strlen(cmdtext) == 16)
				  	{
						if (IsPlayerInAnyVehicle(playerid))
						{
						    if (GetPlayerVehicleSeat(playerid) == 0)
						    {
							    new MyVehicleID = GetPlayerVehicleID(playerid);
							    if (IsVehicleNotBici(playerid, MyVehicleID))
							    {
									if (!DataCars[MyVehicleID][AlarmOn])
									{
									    Acciones_ROL(playerid, ACCION_ME, "enciende la alarma del vehículo");
									    Acciones_ROL(playerid, ACCION_AME, "Alarma: Encendida...");
									    DataCars[MyVehicleID][AlarmOn] = true;
									    IsVehicleOff(MyVehicleID);
									}
									else
									{
										SendInfoMessage(playerid, 0, "1002", "Este vehículo ya tiene la alarma encendida");
									}
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "1003", "Sólo puede encender la alarma en el asiento del conductor");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1004", "Suba al vehículo que desea encenderle la alarma y use (/Encender Alarma)");
						}
				  	}
				  	// COMANDO: /Encender Neon
				  	else if (strcmp("/Encender Neon", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14 ||
				  			 strfind(cmdtext, "/Encender Neón", true) == 0)
				  	{
						if (IsPlayerInAnyVehicle(playerid))
						{
						    if (GetPlayerVehicleSeat(playerid) == 0)
						    {
							    new MyVehicleID = GetPlayerVehicleID(playerid);
							    if (IsVehicleNotBici(playerid, MyVehicleID))
							    {
									if (DataCars[MyVehicleID][NeonID] >= 18647 && DataCars[MyVehicleID][NeonID] <= 18651)
									{
										DestroyObject(DataCars[MyVehicleID][NeonIZ]);
										DataCars[MyVehicleID][NeonIZ] = false;
										DestroyObject(DataCars[MyVehicleID][NeonDE]);
										DataCars[MyVehicleID][NeonDE] = false;

										DataCars[MyVehicleID][NeonIZ] = true;
										DataCars[MyVehicleID][NeonDE] = true;
										DataCars[MyVehicleID][NeonIZ] = CreateObject(DataCars[MyVehicleID][NeonID], 0, 0, -1000, 0, 0, 0, 100.0);
										AttachObjectToVehicle(DataCars[MyVehicleID][NeonIZ], MyVehicleID, 0.974999, 0, -0.525000, 0, 0, 0);
										DataCars[MyVehicleID][NeonDE] = CreateObject(DataCars[MyVehicleID][NeonID], 0, 0, -1000, 0, 0, 0, 100.0);
										AttachObjectToVehicle(DataCars[MyVehicleID][NeonDE], MyVehicleID, -0.974999, 0, -0.525000, 0, 0, 0);

										DataCars[MyVehicleID][NeonOn] = true;

										Acciones_ROL(playerid, ACCION_ME, "enciende el neón del vehículo");
									}
									else
									{
										SendInfoMessage(playerid, 0, "1002", "Este vehículo no tiene neón instalado");
									}
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "1003", "Sólo puede encender el neon en el asiento del conductor");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1004", "Suba al vehículo que desea encenderle el neón y use (/Encender Neón)");
						}
				  	}
					else
					{
						SendInfoMessage(playerid, 0, "1005", "Quizás quiso decir: /Encender - /Encender Alarma - /Encender Neón");
					}

			  	}
				// COMANDO: /Parqueo
			  	else if (strcmp("/Parqueo", cmdtext, true, 8) == 0 && strlen(cmdtext) == 8)
			  	{
				  	IsPlayerNearPeaje(playerid, 1, 10);
			  	}
				// COMANDO: /Peaje
			  	else if (strcmp("/Peaje", cmdtext, true, 6) == 0 && strlen(cmdtext) == 6)
			  	{
				  	IsPlayerNearPeaje(playerid, 0, 10);
			  	}
				// COMANDO: /Cuenta
			  	else if (strcmp("/Cuenta", cmdtext, true, 7) == 0 && strlen(cmdtext) == 7)
			  	{
					ShowDialogAccount(playerid);
			  	}
			  	// COMANDO: /Movil
			  	else if (strcmp("/Movil", cmdtext, true, 7) == 0 && strlen(cmdtext) == 6 || strcmp("/Móvil", cmdtext, true, 7) == 0 && strlen(cmdtext) == 6)
			  	{
			  	    if (PlayersData[playerid][Phone] != 0)
				    {
						ShowDialogMovil(playerid);
					}
                    else
					{
						SendInfoMessage(playerid, 0, "918", "Tú no tienes móvil");
					}
			  	}
				// COMANDO: /Puente
			  	else if (strcmp("/Puente", cmdtext, true, 7) == 0 && strlen(cmdtext) == 7)
			  	{
					if (IsPlayerInAnyVehicle(playerid))
					{
					    new MyVehicleID = GetPlayerVehicleID(playerid);
						if (MyVehicleID <= MAX_CAR_DUENO && DataCars[MyVehicleID][Puente] && strlen(DataCars[MyVehicleID][Dueno]) == 1)
						{
						  	if (PlayersData[playerid][Ganzuas] != 0)
						  	{
						        if (!DataCars[MyVehicleID][LlenandoGas])
						        {
							  	    new MsgPuenteDinamico[MAX_TEXT_CHAT];
							  	    if (GetPlayerVehicleSeat(playerid) == 0)
							  	    {
							  	    	format(MsgPuenteDinamico, sizeof(MsgPuenteDinamico), "hacerle un puente al vehículo");
									}
									else
									{
							  	    	format(MsgPuenteDinamico, sizeof(MsgPuenteDinamico), "ayudar hacer el puente");
									}

			  						if (IntentarAccion(playerid, MsgPuenteDinamico, random(2)))
			   						{
					   					DataCars[MyVehicleID][Puente] = false;
										DataCars[MyVehicleID][StateEncendido] = true;
									    Acciones_ROL(playerid, ACCION_AME, "Vehículo: Puenteado...");
										IsVehicleOff(MyVehicleID);
										new IsBomb = IsVehicleHaveBomba(MyVehicleID);
										if (IsBomb != -1)
										{
										    ActivarBomba(IsBomb, 20);
											SetVehicleHealthEx(MyVehicleID, 0.0);
										}
			   						}
									PlayersData[playerid][Ganzuas]--;
								}
								else
								{
									SendInfoMessage(playerid, 0, "1456", "Este vehículo está llenando el deposito, espere que termine para encenderlo!");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "654", "No tienes ganzúas!");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "652", "Este vehículo no necesita puente");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "653", "Suba al vehículo que desea hacerle el puente y use (/Puente)");
					}
			  	}
				// COMANDO: /Fumar
			  	else if (strcmp("/Fumar", cmdtext, true, 6) == 0 && strlen(cmdtext) == 6)
			  	{
				  	if (PlayersData[playerid][Drogas] >= 2)
				  	{
					  	PlayersData[playerid][Drogas] = PlayersData[playerid][Drogas] - 2;
						Acciones_ROL(playerid, ACCION_ME, "saca un cigarrillo y lo enciende");
						SetPlayerSpecialAction(playerid,21);
					}
					else
					{
						SendInfoMessage(playerid, 0, "651", "No tienes suficientes drogas para fumar");
					}
			  	}
			  	// COMANDO: /ComprarVIP
			  	//else if (strcmp("/ComprarVip", cmdtext, true, 6) == 0 && strlen(cmdtext) == 6)
			  	else if (strfind(cmdtext, "/ComprarVip", true) == 0)
			  	{
				  	if(PlayersData[playerid][cFamCoin] >= 5)
				  	{
				  	    if(PlayersData[playerid][VIP] == 1) return SendInfoMessage(playerid, 2, "0", "¡Ya posees esa membresía VIP!");
				  	    if(PlayersData[playerid][VIP] == 2) return SendInfoMessage(playerid, 2, "0", "¡Ya posees una membresía superior!");
                        PlayersData[playerid][cFamCoin] -= 5;
 						PlayersData[playerid][VIP] = 1;
      	                PlayersData[playerid][TimeVip] = MAX_TIME_VIP;
						SendInfoMessage(playerid, 2, "0", "Adquiriste la membresía VIP por 5 Coins, ¡felicitaciones!");
					}
					else
					{
						SendInfoMessage(playerid, 0, "651", "No tienes suficientes Coins");
					}
			  	}
			  	// COMANDO: /ComprarSuperVIP
			  	else if (strfind(cmdtext, "/ComprarSuperVip", true) == 0)
			  	{
				  	if (PlayersData[playerid][cFamCoin] >= 10)
				  	{
                        if(PlayersData[playerid][VIP] == 2) return SendInfoMessage(playerid, 2, "0", "¡Ya posees esa membresía VIP!");
                        PlayersData[playerid][cFamCoin] -= 10;
 						PlayersData[playerid][VIP] = 2;
      	                PlayersData[playerid][TimeVip] = MAX_TIME_VIP;
						SendInfoMessage(playerid, 2, "0", "Adquiriste la membresía Super VIP por 10 Coins, ¡felicitaciones!");
					}
					else
					{
						SendInfoMessage(playerid, 0, "651", "No tienes suficientes Coins");
					}
			  	}
			  	// COMANDO: /RenovarVIP
			  	else if (strfind(cmdtext, "/RenovarVip", true) == 0)
			  	{
					if(PlayersData[playerid][cFamCoin] >= 5)
				  	{
						if(!PlayersData[playerid][VIP]) return SendInfoMessage(playerid, 2, "0", "¡No posees ninguna membresia VIP!");
						PlayersData[playerid][cFamCoin] -= 5;
      	                PlayersData[playerid][TimeVip] += MAX_TIME_VIP;
						SendInfoMessage(playerid, 2, "0", "Renovaste tu membresía VIP por 5 Coins, ¡felicitaciones!");
					}
					else
					{
						SendInfoMessage(playerid, 0, "651", "No tienes suficientes Coins");
					}
			  	}
				///COMMAND:beneficios2(playerid, params[])
				//else if (strfind(cmdtext, "/beneficios", true) == 0)
		    	//else if (strcmp("/Beneficios", cmdtext, true, 9) == 0 && strlen(cmdtext) == 9)
		    	else if (strfind(cmdtext, "/beneficios", true) == 0)
				{
					ShowPlayerDialogEx(playerid, 222, DIALOG_STYLE_LIST, "Beneficios VIP", "Cambio de Nombre {008000}[10 COIN's]\nSubir 10 horas de juego {008000}[10 Coin's]\n50.000$ {008000}[50 Coin's]", "Aceptar", "Cancelar");
				}
			    // COMANDO: /Echar Aceíte
			  	else if (strcmp("/Echar Aceíte", cmdtext, true, 13) == 0 && strlen(cmdtext) == 13 ||
					     strcmp("/Echar Aceite", cmdtext, true, 13) == 0 && strlen(cmdtext) == 13)
			  	{
					if (PlayersData[playerid][Faccion] == TALLER_LS || PlayersData[playerid][Faccion] == TALLER_LS)
				    {
				  	    new MyNearVehicle = IsPlayerInNearVehicle(playerid);
				  	    if (MyNearVehicle)
				  	    {
						    if (!IsPlayerInAnyVehicle(playerid))
						    {
								if (DataCars[MyNearVehicle][Oil] + 10 <= MAX_OIL_VEHICLE)
								{
									if (PlayersData[playerid][TimeEquipo] <= gettime())
									{
										if (!DataCars[MyNearVehicle][StateEncendido])
										{
											PlayersData[playerid][TimeEquipo] = gettime() + 600;
											if (coches_Todos_Type[DataCars[MyNearVehicle][Modelo] - 400] != TREN ||
												coches_Todos_Type[DataCars[MyNearVehicle][Modelo] - 400] != VUELO)
											{
												DataCars[MyNearVehicle][Oil] = DataCars[MyNearVehicle][Oil] + 10;

												UpdateGasAndOil(MyNearVehicle);
											}
											else
											{
												DataCars[MyNearVehicle][Oil] = MAX_OIL_VEHICLE;
											}
											Acciones_ROL(playerid, ACCION_ME, "echa el un poco de aceíte en el vehículo");
				                            SendInfoMessage(playerid, 3, "0", "Has echado un poco de aceíte a este vehículo");
			                            }
										else
										{
											SendInfoMessage(playerid, 0, "1137", "Apague el vehículo para echarle aceíte!");
										}
									}
									else
									{
										new MsgPersonalizado[MAX_TEXT_CHAT];
										format(MsgPersonalizado, sizeof(MsgPersonalizado), "Debe esperar %i minutos con %i segundos para volver a echar aceíte a un vehículo", (PlayersData[playerid][TimeEquipo] - gettime()) / 60, ((PlayersData[playerid][TimeEquipo] - gettime()) % 60));
										SendInfoMessage(playerid, 0, "1136", MsgPersonalizado);
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1135", "Este vehículo no necesita aceíte!");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "1134", "No puede echar aceíte desde adentro del vehículo");
							}
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "1133", "Usted no es mecánico");
					}
			  	}
			    // COMANDO: /Echar Lata
			  	else if (strcmp("/Echar Lata", cmdtext, true, 11) == 0 && strlen(cmdtext) == 11)
			  	{
			  	    new MyNearVehicle = IsPlayerInNearVehicle(playerid);
			  	    if (MyNearVehicle)
			  	    {
					    if (!IsPlayerInAnyVehicle(playerid))
					    {
				  	        if (PlayersData[playerid][Lata])
							{
						        if (!DataCars[MyNearVehicle][LlenandoGas])
						        {
									if (DataCars[MyNearVehicle][Gas] + 20 <= MAX_GAS_VEHICLE)
									{
										if (gettime() - PlayersDataOnline[playerid][TimeLata] >= 60)
										{
											if (!DataCars[MyNearVehicle][StateEncendido])
											{
												DataCars[MyNearVehicle][Gas] = DataCars[MyNearVehicle][Gas] + 20;
												PlayersData[playerid][Lata] = false;
												PlayersDataOnline[playerid][TimeLata] = gettime();

												UpdateGasAndOil(MyNearVehicle);

												Acciones_ROL(playerid, ACCION_ME, "echa el gas de su lata en el deposito del vehículo");
					                            SendInfoMessage(playerid, 3, "0", "Ha echado el gas de su lata en este vehículo");
				                            }
											else
											{
												SendInfoMessage(playerid, 0, "1087", "Apague el vehículo para echarle la lata!");
											}
										}
										else
										{
											new MsgErrorLata[MAX_TEXT_CHAT];
											format(MsgErrorLata, sizeof(MsgErrorLata), "No puede volver a echar una lata hasta dentro de %i segundos", 60 - (gettime() - PlayersDataOnline[playerid][TimeLata]));
											SendInfoMessage(playerid, 0, "1061", MsgErrorLata);
										}
									}
									else
									{
										SendInfoMessage(playerid, 0, "524", "Este vehículo tiene el deposito lleno");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1059", "Este vehículo está llenando el deposito, no puede echarle una lata");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "525", "Ha su lata no le queda gas");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1104", "No puede echar gas desde adentro del vehículo");
						}
					}
			  	}
				// COMANDO: /Llenar
				else if (strfind(cmdtext, "/Llenar ", true) == 0)
				{
					// COMANDO: /Llenar Lata
				  	if (strcmp("/Llenar Lata", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
				  	{
				  	    new MyNearGas = GetMyNearGas(playerid);
				  	    if (MyNearGas != -1)
				  	    {
				  	        if (!PlayersData[playerid][Lata])
							{
								if (Gasolineras[MyNearGas][Fuel] >= 20)
								{
							        if (PlayersData[playerid][Dinero] >= 40)
							        {
								        GivePlayerMoneyEx(playerid, -40);
										Gasolineras[MyNearGas][Fuel] = Gasolineras[MyNearGas][Fuel] - 20;

										FaccionData[GOBIERNO][Deposito] += 40;

										PlayersData[playerid][Lata] = true;
										Acciones_ROL(playerid, ACCION_ME, "llena su lata de gas");
		                                SendInfoMessage(playerid, 3, "0", "Ha llenado su lata de gas por $40");
							        }
							        else
							        {
										SendInfoMessage(playerid, 0, "526", "No tiene suficiente dinero para llenar su lata de gas!");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "527", "Esta gasolinera tiene el deposito agotado");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "528", "Su lata ya se encuentra llena de gas");
							}
						}
					}
				  	else if (strfind(cmdtext, "/Llenar Deposito", true) == 0)
				  	{
						if (IsPlayerInNearVehicle(playerid))
						{
					  	    new MyNearGas = GetMyNearGas(playerid);
					  	    if (MyNearGas != -1)
							{
								if (IsPlayerInAnyVehicle(playerid) && GetPlayerVehicleSeat(playerid) == 0)
								{
			    					new MyCarFill = GetPlayerVehicleID(playerid);
			    					if (IsVehicleNotBici(playerid, MyCarFill))
			    					{
										if (DataCars[MyCarFill][Gas] < MAX_GAS_VEHICLE)
										{
										    new GasToFill;
										    if (strcmp("/Llenar Deposito", cmdtext, true, 16) == 0 && strlen(cmdtext) == 16)
										    {
												GasToFill = MAX_GAS_VEHICLE - DataCars[MyCarFill][Gas];
										    }
										    else
										    {
										        GasToFill = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
											}
											if (GasToFill > 0)
											{
											    if (DataCars[MyCarFill][Gas] + GasToFill <= MAX_GAS_VEHICLE)
											    {
													if (Gasolineras[MyNearGas][Fuel] >= GasToFill)
													{
													    if (PlayersData[playerid][Dinero] >= (GasToFill * 2))
													    {
													        if (!DataCars[MyCarFill][LlenandoGas])
													        {
													            if (!DataCars[MyCarFill][StateEncendido])
													            {
																    new MsgLlenarDeposito[MAX_TEXT_CHAT];
																    format(MsgLlenarDeposito, sizeof(MsgLlenarDeposito), "Mandó a llenar el depósito del vehículo por $%i", (GasToFill * 2));

															        GivePlayerMoneyEx(playerid, -(GasToFill * 2));

																    Gasolineras[MyNearGas][Fuel] = Gasolineras[MyNearGas][Fuel] - GasToFill;

																	FaccionData[GOBIERNO][Deposito] = FaccionData[GOBIERNO][Deposito] + (GasToFill * 2);

																	Acciones_ROL(playerid, ACCION_ME, "comienza a llenar el depósito del vehículo");
										                            SendInfoMessage(playerid, 3, "0", MsgLlenarDeposito);

																	DataCars[MyCarFill][LlenandoGas] = DataCars[MyCarFill][Gas] + GasToFill;
																	FillVehicleGas(MyCarFill);

																	GameTextForPlayer(playerid, "~G~Llenando depósito...", 1000, 3);
																}
									                            else
									                            {
																	SendInfoMessage(playerid, 0, "1060", "Apague el vehículo para echarle gas!");
																}
								                            }
								                            else
								                            {
																SendInfoMessage(playerid, 0, "1058", "Ya este vehículo está llenando el depósito");
															}
							                            }
							                            else
							                            {
															SendInfoMessage(playerid, 0, "531", "No tienes suficiente dinero para llenar el depósito de este vehículo");
														}
													}
													else
													{
														SendInfoMessage(playerid, 0, "529", "Esta gasolinera tiene el depósito agotado");
													}
												}
												else
												{
													SendInfoMessage(playerid, 0, "1062", "Con esa cantidad de gas, sobrepasas el límite del tanque, intenta con un cantidad menor");
												}
											}
											else
											{
												SendInfoMessage(playerid, 0, "1056", "Mínimo debes echarle $1 al vehículo");
											}
										}
										else
										{
											SendInfoMessage(playerid, 0, "1063", "Ya el tanque de este vehículo, se encuenta lleno!");
										}
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1064", "Montese al vehículo que desea llenar el depósito y póngase de conductor");
								}
							}
						}
				  	}
					else
					{
						SendInfoMessage(playerid, 0, "532", "Quizás quiso decir: /Llenar {Lata, Deposito}");
					}
			  	}
				// COMANDO: /Rendirse
			  	else if (strcmp("/Rendirse", cmdtext, true, 9) == 0 && strlen(cmdtext) == 9)
			  	{
					ApplyPlayerAnimCustom(playerid,
					"ROB_BANK",
					ROB_ANIMATIONS[4], false);
			    }
				// COMANDO: /Apuntar
			  	else if (strcmp("/Apuntar", cmdtext, true, 8) == 0 && strlen(cmdtext) == 8)
			  	{
					ApplyPlayerAnimCustom(playerid,
					"PED",
					PED_ANIMATIONS[150], false);
			    }
				// COMANDO: /Miedo
			  	else if (strcmp("/Miedo", cmdtext, true, 6) == 0 && strlen(cmdtext) == 6)
			  	{
					ApplyPlayerAnimCustom(playerid,
					"PED",
					PED_ANIMATIONS[71], false);
			    }
				// COMANDO: /Borracho
			  	else if (strcmp("/Borracho", cmdtext, true, 9) == 0 && strlen(cmdtext) == 9)
			  	{
					ApplyPlayerAnimCustom(playerid,
					"PED",
					PED_ANIMATIONS[257], true);
			    }
				// COMANDO: /Sentarse
			  	else if (strcmp("/Sentarse", cmdtext, true, 9) == 0 && strlen(cmdtext) == 9)
			  	{
					ApplyPlayerAnimCustom(playerid,
					"BEACH",
					PLAYA_ANIMATIONS[2], false);
			    }
				// COMANDO: /Acostarse
			  	else if (strcmp("/Acostarse", cmdtext, true, 10) == 0 && strlen(cmdtext) == 10)
			  	{
					ApplyPlayerAnimCustom(playerid,
					"BEACH",
					PLAYA_ANIMATIONS[0], false);
			    }
				// COMANDO: /Crack
			  	else if (strcmp("/Crack", cmdtext, true, 6) == 0 && strlen(cmdtext) == 6)
			  	{
					ApplyPlayerAnimCustom(playerid,
					"CRACK",
					CRACK_ANIMATIONS[3], false);
			    }
				// COMANDO: /Fuck
			  	else if (strcmp("/Fuck", cmdtext, true, 5) == 0 && strlen(cmdtext) == 5)
			  	{
					ApplyPlayerAnimCustom(playerid,
					"PED",
					PED_ANIMATIONS[149], false);
			    }
				// COMANDO: /Crear
				else if (strfind(cmdtext, "/Crear ", true) == 0)
				{
					// COMANDO: /Crear Arma
				  	if (strcmp("/Crear Arma", cmdtext, true, 11) == 0 && strlen(cmdtext) == 11)
				    {
						if (PlayersData[playerid][Faccion] == TRAFICANTES && PlayersData[playerid][Rango] <= 2 ||
		 					 PlayersData[playerid][Faccion] == CONTRABANDISTAS && PlayersData[playerid][Rango] <= 4)
					    {
						    SetMenuTraficante(playerid);
					    }
					    else
					    {
							SendInfoMessage(playerid, 0, "420", "Usted no puede crear armas");
						}
				    }
					// COMANDO: /Crear ArmaP
				  	//if (strcmp("/Crear ArmaP", cmdtext, true, 11) == 0 && strlen(cmdtext) == 11)
				  	else if (strfind(cmdtext, "/Crear ArmaP", true) == 0)
				    {
						if (PlayersData[playerid][Faccion] == HEORS && PlayersData[playerid][Rango] <= 2 ||
		 					 PlayersData[playerid][Faccion] == COLTS && PlayersData[playerid][Rango] <= 2 ||
		 					 PlayersData[playerid][Faccion] == HAMPA && PlayersData[playerid][Rango] <= 2)
					    {
						    SetMenuPandilla(playerid);
					    }
					    else
					    {
							SendInfoMessage(playerid, 0, "420", "Usted no puede crear armas");
						}
				    }
 				  	else if (strfind(cmdtext, "/Crear ArmaA", true) == 0)
				    {
						if (PlayersData[playerid][Admin] >= 7)
					    {
						    SetMenuAdmin(playerid);
					    }
					    else
					    {
							SendInfoMessage(playerid, 0, "420", "Usted no puede crear armas administrativas");
						}
				    }
					//////////--- /Crear Cheque Efectivo [ID] [Cantidad]              - CREAR UN CHEQUE EFECTIVO
					else if (strfind(cmdtext, "/Crear Cheque Efectivo ", true) == 0)
					{
					    if (PlayersData[playerid][HoursPlaying] >= 24)
					    {
					        new PlayerIDCheque = strval(cmdtext[GetPosSpace(cmdtext, 3)]);
					        new ChequeCantidad = strval(cmdtext[GetPosSpace(cmdtext, 4)]);
						    if (PlayerIDCheque == playerid || IsPlayerNear(playerid, PlayerIDCheque,
								 "1334",
								 "1335",
								 "1336",
								 "El jugador que le deseas darle un cheque no se encuentra conectado",
								 "El jugador que le deseas darle un cheque no se ha logueado",
								 "El jugador que le deseas darle un cheque no se encuentra cerca de tí"))
						    {
						        new NextChequeID = IsNotChequesFull(playerid);
						        if (NextChequeID != -1)
						        {
							        if(ChequeCantidad > 0 && ChequeCantidad < 500000)
							        {
							            if(PlayerIDCheque != playerid)
							            {
											if (IsNotFullCartera(playerid, PlayerIDCheque, "El jugador que desea darle un cheque tiene la cartera llena!"))
										    {
										    	CrearCheque(playerid, PlayerIDCheque, 0, ChequeCantidad, NextChequeID);

												new MsgCrearCheque[MAX_TEXT_CHAT];
												new MsgCrearChequeMe[MAX_TEXT_CHAT];
												new MsgCrearChequeYou[MAX_TEXT_CHAT];
										        format(MsgCrearCheque, sizeof(MsgCrearCheque), "Le has dado un cheque tipo efectivo a %s por la suma de $%i",
												PlayersDataOnline[PlayerIDCheque][NameOnlineFix],
												ChequeCantidad);
										        format(MsgCrearChequeYou, sizeof(MsgCrearChequeYou), "%s te ha dado un cheque tipo efectivo por la suma de $%i",
												PlayersDataOnline[playerid][NameOnlineFix],
												ChequeCantidad);

										        format(MsgCrearChequeMe, sizeof(MsgCrearChequeMe), "crea un cheque y se lo pasa a %s", PlayersDataOnline[PlayerIDCheque][NameOnlineFix]);
										        Acciones_ROL(playerid, ACCION_ME, MsgCrearChequeMe);
										        SendInfoMessage(playerid, 2, "0", MsgCrearCheque);
										        SendInfoMessage(PlayerIDCheque, 2, "0", MsgCrearChequeYou);

										        printf("De %s para %s || %s", PlayersDataOnline[playerid][NameOnline], PlayersDataOnline[PlayerIDCheque][NameOnline], MsgCrearCheque);
										    }
									    }
									    else
									    {
											if (IsNotFullCartera(playerid, PlayerIDCheque, "Usted tiene la cartera llena!"))
										    {
										    	CrearCheque(playerid, PlayerIDCheque, 0, ChequeCantidad, NextChequeID);
												new MsgCrearCheque[MAX_TEXT_CHAT];
										        format(MsgCrearCheque, sizeof(MsgCrearCheque), "Creaste un cheque tipo efectivo por la suma de $%i", ChequeCantidad);
										        Acciones_ROL(playerid, ACCION_ME, "crea un cheque y lo guarada en su cartera");
										        SendInfoMessage(playerid, 2, "0", MsgCrearCheque);
										        printf("De %s || %s", PlayersDataOnline[playerid][NameOnline], MsgCrearCheque);
										    }
										}
									}
									else
									{
										SendInfoMessage(playerid, 0, "1333", "El valor del cheque tiene que ser mayor de $0 y menor de $500000!");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1426", "Debes cancelar o esperar que sean cobrados los cheques para poder repartír más!");
								}
						    }
					    }
					    else
					    {
							SendInfoMessage(playerid, 0, "1338", "Debes ser mayor de nivel 3 para crear cheques");
						}
					}
					//////////--- /Crear Cheque Personal [ID] [Cantidad]              - CREAR UN CHEQUE PERSONAL
					else if (strfind(cmdtext, "/Crear Cheque Personal ", true) == 0)
					{
					    if (PlayersData[playerid][HoursPlaying] >= 24)
					    {
					        new PlayerIDCheque = strval(cmdtext[GetPosSpace(cmdtext, 3)]);
					        new ChequeCantidad = strval(cmdtext[GetPosSpace(cmdtext, 4)]);
						    if (IsPlayerNear(playerid, PlayerIDCheque,
								 "1329",
								 "1330",
								 "1331",
								 "El jugador que le deseas darle un cheque no se encuentra conectado",
								 "El jugador que le deseas darle un cheque no se ha logueado",
								 "El jugador que le deseas darle un cheque no se encuentra cerca de tí"))
						    {
						        new NextChequeID = IsNotChequesFull(playerid);
						        if (NextChequeID != -1)
						        {
							        if(ChequeCantidad > 0 && ChequeCantidad < 500000)
							        {

										if (IsNotFullCartera(playerid, PlayerIDCheque, "El jugador que desea darle un cheque tiene la cartera llena!"))
									    {
									    	CrearCheque(playerid, PlayerIDCheque, 1, ChequeCantidad, NextChequeID);

											new MsgCrearCheque[MAX_TEXT_CHAT];
											new MsgCrearChequeMe[MAX_TEXT_CHAT];
											new MsgCrearChequeYou[MAX_TEXT_CHAT];
									        format(MsgCrearCheque, sizeof(MsgCrearCheque), "Le has dado un cheque tipo personal a %s por la suma de $%i",
											PlayersDataOnline[PlayerIDCheque][NameOnlineFix],
											ChequeCantidad);
									        format(MsgCrearChequeYou, sizeof(MsgCrearChequeYou), "%s te ha dado un cheque tipo personal por la suma de $%i",
											PlayersDataOnline[playerid][NameOnlineFix],
											ChequeCantidad);
									        format(MsgCrearChequeMe, sizeof(MsgCrearChequeMe), "crea un cheque y se lo pasa a %s",
											PlayersDataOnline[PlayerIDCheque][NameOnlineFix]);

									        Acciones_ROL(playerid, ACCION_ME, MsgCrearChequeMe);
									        SendInfoMessage(playerid, 2, "0", MsgCrearCheque);
									        SendInfoMessage(PlayerIDCheque, 2, "0", MsgCrearChequeYou);
									        printf("De %s para %s || %s", PlayersDataOnline[playerid][NameOnline], PlayersDataOnline[PlayerIDCheque][NameOnline], MsgCrearCheque);
									    }
									}
									else
									{
										SendInfoMessage(playerid, 0, "1332", "El valor del cheque tiene que ser mayor de $0 y menor de $500000!");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1425", "Debes cancelar o esperar que sean cobrados los cheques para poder repartír más!");
								}
						    }
					    }
					    else
					    {
							SendInfoMessage(playerid, 0, "1337", "Debes ser mayor de nivel 3 para crear cheques");
						}
					}
					//////////--- /Crear Negocio [ID]              - CREAR UN NEGOCIO
					else if (strfind(cmdtext, "/Crear Negocio ", true) == 0)
					{
   					    MsgAdminUseCommands(8, playerid, cmdtext);
						if (PlayersData[playerid][Admin] >= 9)
						{
					        new TypeBizz = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
					        new PrecioN = strval(cmdtext[GetPosSpace(cmdtext, 3)]);
					        new NivelN = strval(cmdtext[GetPosSpace(cmdtext, 4)]);
							if (TypeBizz >= 0 &&  TypeBizz <= MAX_BIZZ_TYPE)
							{
							    new MyNextBizz = GetMyNextBizz();
							    if (MyNextBizz)
							    {
							        new Float:PlayerPosBizz[4];
							        GetPlayerPos(playerid, PlayerPosBizz[0], PlayerPosBizz[1], PlayerPosBizz[2]);
							        GetPlayerFacingAngle(playerid, PlayerPosBizz[3]);

								    NegociosData[MyNextBizz][PosOutX]       = PlayerPosBizz[0];
								    NegociosData[MyNextBizz][PosOutY]		= PlayerPosBizz[1];
								    NegociosData[MyNextBizz][PosOutZ]		= PlayerPosBizz[2];
								    NegociosData[MyNextBizz][PosOutZZ] 		= PlayerPosBizz[3];
								    NegociosData[MyNextBizz][InteriorOut]   = GetPlayerInteriorEx(playerid);
								    NegociosData[MyNextBizz][Deposito]      = 2500;
								    if (PrecioN > 0 && PrecioN < 500000)
								    {
								    	NegociosData[MyNextBizz][Precio]        = PrecioN;
							    	}
							    	else
							    	{
								    	NegociosData[MyNextBizz][Precio]        = 150000;
							    	}
								    NegociosData[MyNextBizz][Lock]          = false;
								    NegociosData[MyNextBizz][Type]        	= TypeBizz;
								    NegociosData[MyNextBizz][PriceJoin]     = 20;
								    NegociosData[MyNextBizz][PricePiece]    = 1;
		                            format(NegociosData[MyNextBizz][NameBizz], 	MAX_BIIZ_NAME, "Ninguno");
	                                format(NegociosData[MyNextBizz][Dueno], MAX_PLAYER_NAME, "0");
	                                format(NegociosData[MyNextBizz][Extorsion], MAX_PLAYER_NAME, "No");
	                                NegociosData[MyNextBizz][Materiales]    = 2500;
									if (NivelN > 0 && NivelN < 99)
									{
										NegociosData[MyNextBizz][Level]  		= NivelN;
									}
									else
									{
										NegociosData[MyNextBizz][Level]  		= 10;
									}

								    DataSaveBizz(MyNextBizz, false);

								    new MsgPersonalizado[MAX_TEXT_CHAT];
								    format(MsgPersonalizado, sizeof(MsgPersonalizado), "%s Has creado un negocio tipo \"%s\"[%i] con ID %i, Precio: $%i", LOGO_STAFF, NegociosType[TypeBizz][TypeName], TypeBizz, MyNextBizz, NegociosData[MyNextBizz][Precio]);

									SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, MsgPersonalizado);
									printf("%s", MsgPersonalizado);
								}
								else
								{
									SendInfoMessage(playerid, 0, "1153", "Ya no se pueden agregar más negocios, se ha alcanzado el límite!");
								}
							}
							else
							{
							    new MsgPersonalizado[MAX_TEXT_CHAT];
							    format(MsgPersonalizado, sizeof(MsgPersonalizado), "El número del tipo de negocio debe estar comprendído entre 0 y %i",MAX_BIZZ_TYPE);
								SendInfoMessage(playerid, 0, "1154", MsgPersonalizado);
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1152", "No tienes acceso al comando /Crear Negocio");
						}
					}
					//////////--- /Crear Garage [ID_Casa] [Tipo_Garage]            - COMENZAR A DISEñAR UN GARAGE
					else if (strfind(cmdtext, "/Crear Garage ", true) == 0)
					{
   					    MsgAdminUseCommands(8, playerid, cmdtext);
						if (PlayersData[playerid][Admin] >= 8)
						{
					        new IdHouse = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
					        new TypeGarageS = strval(cmdtext[GetPosSpace(cmdtext, 3)]);
							if (IdHouse > 0 && IdHouse <= MAX_HOUSE)
							{
								if (TypeGarageS >= 0 && TypeGarageS <= MAX_GARAGE_TYPE)
								{
								    if (CreateGarage(playerid, IdHouse, PlayersDataOnline[playerid][DesignGarageId], TypeGarageS))
								    {
				                        new MsgChangeDesing[MAX_TEXT_CHAT];
				                        format(MsgChangeDesing, sizeof(MsgChangeDesing), "Creaste un garage tipo [%i], para la Casa [ID: %i] (Desing [ID: %i]", TypeGarageS, IdHouse, PlayersDataOnline[playerid][DesignGarageId]);
						                SendInfoMessage(playerid, 2, "0", MsgChangeDesing);
					                }
				                }
				                else
				                {
									SendInfoMessage(playerid, 0, "680", "El ID del tipo de garage introducido no existe!");
								}
			                }
			                else
			                {
								SendInfoMessage(playerid, 0, "1170", "El ID de casa introducido no existe!");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1171", "No tienes acceso al comando /Desing Garage");
						}
					}
					//////////--- /Crear Incendio [ID]              - CREAR UN INCENDIO
					else if (strfind(cmdtext, "/Crear Incendio ", true) == 0)
					{
   					    MsgAdminUseCommands(8, playerid, cmdtext);
						if (PlayersData[playerid][Admin] >= 7)
						{
					        new IdHouse = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
							if (IdHouse > 0 && IdHouse <= MAX_HOUSE)
							{
								new StringFormat[MAX_TEXT_CHAT];
								new nextFire = GetFireNext();
								if (CreateFire(IdHouse, GetFireNext()))
								{
									format(StringFormat, sizeof(StringFormat), "%s Has creado un incendio con [ID: %i] en la casa ID[%i]",LOGO_STAFF,nextFire, IdHouse);
			            		}
			            		else
			            		{
									format(StringFormat, sizeof(StringFormat), "%s Se ha alcanzado el número máximo de incendios",LOGO_STAFF);
								}
			            		SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, StringFormat);
			                }
			                else
			                {
								SendInfoMessage(playerid, 0, "1280", "El ID de casa introducido no existe!");
							}

						}
						else
						{
							SendInfoMessage(playerid, 0, "1279", "No tienes acceso al comando /Crear Incendio");
						}
					}
					//////////--- /Crear Casa [ID]              - CREAR UNA CASA
					else if (strfind(cmdtext, "/Crear Casa ", true) == 0)
					{
   					    MsgAdminUseCommands(8, playerid, cmdtext);
						if (PlayersData[playerid][Admin] >= 9)
						{
					        new TypeHouseC = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
					        new PrecioC = strval(cmdtext[GetPosSpace(cmdtext, 3)]);
					        new NivelC = strval(cmdtext[GetPosSpace(cmdtext, 4)]);
							if (TypeHouseC >= 0 &&  TypeHouseC <= MAX_HOUSE_TYPE_COUNT)
							{
							    new MyNextHouse = GetMyNextHouse();
							    if (MyNextHouse)
							    {
							        new Float:PlayerPosHouse[4];
							        GetPlayerPos(playerid, PlayerPosHouse[0], PlayerPosHouse[1], PlayerPosHouse[2]);
							        GetPlayerFacingAngle(playerid, PlayerPosHouse[3]);

									format(HouseData[MyNextHouse][Dueno], MAX_PLAYER_NAME, "No");
									HouseData[MyNextHouse][PosX] 			= PlayerPosHouse[0];
									HouseData[MyNextHouse][PosY] 			= PlayerPosHouse[1];
									HouseData[MyNextHouse][PosZ] 			= PlayerPosHouse[2];
									HouseData[MyNextHouse][PosZZ] 			= PlayerPosHouse[3];
									HouseData[MyNextHouse][Interior] 		= GetPlayerInteriorEx(playerid);
									HouseData[MyNextHouse][TypeHouseId]		= TypeHouseC;
									HouseData[MyNextHouse][PriceRent] 		= 0;
									if (NivelC > 0 && NivelC < 99)
									{
										HouseData[MyNextHouse][Level] 			= NivelC;
									}
									else
									{
										HouseData[MyNextHouse][Level] 			= 10;
									}
									HouseData[MyNextHouse][Lock]            = true;
								    if (PrecioC > 0 && PrecioC < 1000000)
								    {
								    	HouseData[MyNextHouse][Price]        = PrecioC;
							    	}
							    	else
							    	{
								    	HouseData[MyNextHouse][Price]        = 150000;
							    	}

								    SaveHouse(MyNextHouse, false);

								    new MsgPersonalizado[MAX_TEXT_CHAT];
								    format(MsgPersonalizado, sizeof(MsgPersonalizado), "%s Has creado una casa tipo \"%s\" [%i] con ID %i, Precio: $%i", LOGO_STAFF, TypeHouse[TypeHouseC][TypeName], TypeHouseC, MyNextHouse, HouseData[MyNextHouse][Price]);

									SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, MsgPersonalizado);
									printf("%s", MsgPersonalizado);
								}
								else
								{
									SendInfoMessage(playerid, 0, "1157", "Ya no se pueden agregar más casas, se ha alcanzado el límite!");
								}
							}
							else
							{
							    new MsgPersonalizado[MAX_TEXT_CHAT];
							    format(MsgPersonalizado, sizeof(MsgPersonalizado), "El número del tipo de casa debe estar comprendído entre 0 y %i",MAX_HOUSE_TYPE);
								SendInfoMessage(playerid, 0, "1156", MsgPersonalizado);
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1155", "No tienes acceso al comando /Crear Casa");
						}
					}
			    	else
					{
						SendInfoMessage(playerid, 0, "421", "Quizás quiso decir: /Crear {Arma, ArmaP, Cheque Efectivo [ID] [Cantidad], Cheque Personal [ID] [Cantidad]}");
					}
				}
			// COMANDO: /Aceíte [ID] [Precio]
				else if (strfind(cmdtext, "/Aceíte ", true) == 0 ||
						 strfind(cmdtext, "/Aceite ", true) == 0)
				{
			        new playerid_aceite = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
			        new dinero_aceite = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
					if (PlayersData[playerid][Faccion] == TALLER_LS || PlayersData[playerid][Faccion] == TALLER_LS)
				    {
			            if (IsPlayerInTaller(playerid))
			            {
			                if (playerid_aceite == playerid)
			                {
			                    if (IsPlayerInAnyVehicle(playerid))
			                    {
		                            SendInfoMessage(playerid, 3, "0", "Has rellenedo este vehículo de aceíte");
									DataCars[GetPlayerVehicleID(playerid)][Oil] = MAX_OIL_VEHICLE;

									UpdateGasAndOil(GetPlayerVehicleID(playerid));
								}
								else
								{
									SendInfoMessage(playerid, 0, "1122", "Suba al vehículo que desea rellenar aceíte");
								}
							}
						    else if (IsPlayerNear(playerid, playerid_aceite,
								 "1123",
								 "1124",
								 "1125",
								 "El jugador que desea rellenar de aceíte el vehículo no se encuentra conectado",
								 "El jugador que desea rellenar de aceíte el vehículo no se encuentra logueado",
								 "El jugador que desea rellenar de aceíte el vehículo no se encuentra cerca de tí"))
						    {
		                        if (IsPlayerInAnyVehicle(playerid_aceite))
		                        {
							        if (dinero_aceite > 0 && dinero_aceite <= 20000)
							        {
										new MsgRapair[MAX_TEXT_CHAT];
										new MsgRepairToPlayer[MAX_TEXT_CHAT];
										format(MsgRapair, sizeof(MsgRapair), "Ofreciste rellenar el vehículo de aceíte a %s por $%i", PlayersDataOnline[playerid_aceite][NameOnlineFix], dinero_aceite);
										format(MsgRepairToPlayer, sizeof(MsgRepairToPlayer), "El mecánico %s quiere rellenarle el vehículo de aceíte por $%i usa (/Aceptar Aceíte)", PlayersDataOnline[playerid][NameOnlineFix], dinero_aceite);

			                            SendInfoMessage(playerid, 3, "0", MsgRapair);
			                            SendInfoMessage(playerid_aceite, 3, "0", MsgRepairToPlayer);

										PlayersDataOnline[playerid_aceite][VAceite][0] = playerid;
										PlayersDataOnline[playerid_aceite][VAceite][1] = dinero_aceite;
									}
									else
									{
										SendInfoMessage(playerid, 0, "1126", "El monto mínimo para relleno de aceíte es es $1 y máximo $20000");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1127", "Pídale al cliente que suba a su vehículo para rellenarlo de aceíte");
								}
						    }
					    }
					}
					else
					{
						SendInfoMessage(playerid, 0, "1128", "Usted no es mecánico");
					}
				}
				// COMANDO: /Reparar [ID] [Precio]
				else if (strfind(cmdtext, "/Reparar ", true) == 0)
				{
			        new playerid_repair = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
			        new dinero_repair = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
					if (PlayersData[playerid][Faccion] == TALLER_LS || PlayersData[playerid][Faccion] == TALLER_LS)
				    {
			            if (IsPlayerInTaller(playerid))
			            {
			                if (playerid_repair == playerid)
			                {
			                    if (IsPlayerInAnyVehicle(playerid))
			                    {
		                            SendInfoMessage(playerid, 3, "0", "Has reparado este vehículo");
									RepairVehicle(GetPlayerVehicleID(playerid));
									SetVehicleHealthEx(GetPlayerVehicleID(playerid), 1000.0);
									new Float:SaveRepair = 1000.0;
							    	UpdateDamage(playerid, SaveRepair);
								}
								else
								{
									SendInfoMessage(playerid, 0, "690", "Suba al vehículo que desea reparar");
								}
							}
						    else if (IsPlayerNear(playerid, playerid_repair,
								 "691",
								 "692",
								 "693",
								 "El jugador que desea repararle el vehículo no se encuentra conectado",
								 "El jugador que desea repararle el vehículo no se encuentra logueado",
								 "El jugador que desea repararle el vehículo no se encuentra cerca de tí"))
						    {
		                        if (IsPlayerInAnyVehicle(playerid_repair))
		                        {
							        if (dinero_repair > 0 && dinero_repair <= 20000)
							        {
										new MsgRapair[MAX_TEXT_CHAT];
										new MsgRepairToPlayer[MAX_TEXT_CHAT];
										format(MsgRapair, sizeof(MsgRapair), "Ofreciste repararle el vehículo a %s por $%i", PlayersDataOnline[playerid_repair][NameOnlineFix], dinero_repair);
										format(MsgRepairToPlayer, sizeof(MsgRepairToPlayer), "El mecánico %s quiere reparte el vehículo por $%i usa (/Aceptar Reparación)", PlayersDataOnline[playerid][NameOnlineFix], dinero_repair);

			                            SendInfoMessage(playerid, 3, "0", MsgRapair);
			                            SendInfoMessage(playerid_repair, 3, "0", MsgRepairToPlayer);

										PlayersDataOnline[playerid_repair][VRepair][0] = playerid;
										PlayersDataOnline[playerid_repair][VRepair][1] = dinero_repair;
									}
									else
									{
										SendInfoMessage(playerid, 0, "699", "El monto mínimo de una reparación es $1 y máximo $20000");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "694", "Pídale al cliente que suba a su vehículo para repararselo");
								}
						    }
					    }
					}
					else
					{
						SendInfoMessage(playerid, 0, "695", "Usted no es mecánico");
					}
				}
				else if (strfind(cmdtext, "/AReparar ", true) == 0)
				{
			        new playerid_repair = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
			        new dinero_repair = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
					if (PlayersData[playerid][Admin] == 8)
				    {
			                if (playerid_repair == playerid)
			                {
			                    if (IsPlayerInAnyVehicle(playerid))
			                    {
		                            SendInfoMessage(playerid, 3, "0", "Has reparado este vehículo");
									RepairVehicle(GetPlayerVehicleID(playerid));
									SetVehicleHealthEx(GetPlayerVehicleID(playerid), 1000.0);
									new Float:SaveRepair = 1000.0;
							    	UpdateDamage(playerid, SaveRepair);
								}
								else
								{
									SendInfoMessage(playerid, 0, "690", "Suba al vehículo que desea reparar");
								}
							}
						    else if (IsPlayerNear(playerid, playerid_repair,
								 "691",
								 "692",
								 "693",
								 "El jugador que desea repararle el vehículo no se encuentra conectado",
								 "El jugador que desea repararle el vehículo no se encuentra logueado",
								 "El jugador que desea repararle el vehículo no se encuentra cerca de tí"))
						    {
		                        if (IsPlayerInAnyVehicle(playerid_repair))
		                        {
							        if (dinero_repair > 0 && dinero_repair <= 20000)
							        {
										new MsgRapair[MAX_TEXT_CHAT];
										new MsgRepairToPlayer[MAX_TEXT_CHAT];
										format(MsgRapair, sizeof(MsgRapair), "Ofreciste repararle el vehículo a %s por $%i", PlayersDataOnline[playerid_repair][NameOnlineFix], dinero_repair);
										format(MsgRepairToPlayer, sizeof(MsgRepairToPlayer), "%s quiere reparte el vehículo por $%i usa (/Aceptar Reparación)", PlayersDataOnline[playerid][NameOnlineFix], dinero_repair);

			                            SendInfoMessage(playerid, 3, "0", MsgRapair);
			                            SendInfoMessage(playerid_repair, 3, "0", MsgRepairToPlayer);

										PlayersDataOnline[playerid_repair][VRepair][0] = playerid;
										PlayersDataOnline[playerid_repair][VRepair][1] = dinero_repair;
									}
									else
									{
										SendInfoMessage(playerid, 0, "699", "El monto mínimo de una reparación es $1 y máximo $20000");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "694", "Pídale al cliente que suba a su vehículo para repararselo");
								}
						    }
					}
					else
					{
						SendInfoMessage(playerid, 0, "695", "Usted no es mecánico");
					}
				}
				// COMANDO: /Reparar (Para talleres autonomos)
				else if (strcmp("/Reparar", cmdtext, true, 8) == 0 && strlen(cmdtext) == 8)
				{
				    if (IsPlayerInRangeOfPoint(playerid, 1.0, 1944.8047, -1870.8354, 13.6447) || // LS Taller autonomo
			 			 IsPlayerInRangeOfPoint(playerid, 1.0, -1773.8730, 1205.2186, 25.2160) || // SF Taller autonomo
						 IsPlayerInRangeOfPoint(playerid, 1.0, 503.3408,2906.1331,7.3091) )      // LV Taller Off-Road (Mecas ON or OFF)
        			{
					    new MsgMecasOn[100];
					    new FoundMecas;
						for (new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
						{
							if (IsPlayerConnected(i) && PlayersDataOnline[i][State] == 3 && PlayersDataOnline[i][StateJob] == 1 && PlayersData[i][Faccion] == TALLER_LS ||
	     						 IsPlayerConnected(i) && PlayersDataOnline[i][State] == 3 && PlayersDataOnline[i][StateJob] == 1 && PlayersData[i][Faccion] == TALLER_LS )
							{
							    if (!FoundMecas)
							    {
								    SendClientMessage(playerid, 0x505050FF, "{505050}»»»»»»»»»»»»»»»»»» {008228}M{00B428}ecanicos {008228}O{00B428}nline {505050}««««««««««««««««««");
									FoundMecas++;
								}
								format(MsgMecasOn, sizeof(MsgMecasOn), "{0037FF}* %s %s en el %s [ID: %i]", FaccionesRangos[PlayersData[i][Faccion]][PlayersData[i][Rango]], PlayersDataOnline[i][NameOnlineFix], FaccionData[PlayersData[i][Faccion]][NameFaccion], i);
							    SendClientMessage(playerid, 0x505050FF, MsgMecasOn);
							}
						}
						if (!FoundMecas || IsPlayerInRangeOfPoint(playerid, 1.0, 503.3408,2906.1331,7.3091))
						{
							if (PlayersData[playerid][Faccion] != TALLER_LS || PlayersData[playerid][Faccion] != TALLER_LS || IsPlayerInRangeOfPoint(playerid, 1.0, 503.3408,2906.1331,7.3091))
						    {
				                if (PlayersData[playerid][Dinero] >= 1000 ||(PlayersData[playerid][ModoPago] && PlayersData[playerid][Credito] >= 1000))
				                {
				                    if (IsPlayerInAnyVehicle(playerid))
				                    {
			                            SendInfoMessage(playerid, 3, "0", "Has reparado este vehículo");
										RepairVehicle(GetPlayerVehicleID(playerid));
										SetVehicleHealthEx(GetPlayerVehicleID(playerid), 1000.0);
										new Float:SaveRepair = 1000.0;
								    	UpdateDamage(playerid, SaveRepair);



								    	new CiudadTaller = GetMyNearCity(playerid);
										// San Fierro
										if (CiudadTaller)
										{
											FaccionData[TALLER_LS][Deposito] += 1000;
										}
										// Los Santos
										else
										{
											FaccionData[TALLER_LS][Deposito] += 1000;
										}


										if(PlayersData[playerid][ModoPago] && PlayersData[playerid][Credito] >= PlayersDataOnline[playerid][VRepair][1])
										{
										    PlayersData[playerid][Credito] -= 1000;
										}
										else
										{
											GivePlayerMoneyEx(playerid, -1000);
										}
									}
									else
									{
										SendInfoMessage(playerid, 0, "690", "Suba al vehículo que desea reparar");
									}
	       						}
	       						else
								{
									SendInfoMessage(playerid, 0, "696", "No tienes suficiente dinero para reparar el vehículo a ese precio! ($1,000)");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "695", "Eres mecánico, ve a tu taller y repara en ese lugar");
							}
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "695", "No te encuentras en un taller autonomo");
					}
				}
				// COMANDO: /Renovar - Automático
				else if (strcmp("/Renovar", cmdtext, true, 8) == 0 && strlen(cmdtext) == 8)
				{
					if (IsVehicleMyVehicle(playerid, GetPlayerVehicleID(playerid)) ) //Comprobar que el usuario sea dueño del vehiculo a renovar
					{
						if (IsPlayerInRangeOfPoint(playerid,2.0,-1748.6619,112.0497,1743.1061) ||
							 IsPlayerInRangeOfPoint(playerid,2.0,-1858.4041,112.8166,1743.1061))
						{
						    new MsgNFSOn[100];
						    new FoundNFS;
							for (new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
							{
								if (IsPlayerConnected(i) && PlayersDataOnline[i][State] == 3 && PlayersData[i][Faccion] == NFS && PlayersData[i][Rango] <= 2)
								{
								    if (!FoundNFS)
								    {
									    SendClientMessage(playerid, 0x505050FF, "{505050}»»»»»»»»»»»»»»»»»» {008228}R{00B428}enovadores {008228}O{00B428}nline {505050}««««««««««««««««««");
										FoundNFS++;
									}
									format(MsgNFSOn, sizeof(MsgNFSOn), "{0037FF}* %s %s en el %s [ID: %i]", FaccionesRangos[PlayersData[i][Faccion]][PlayersData[i][Rango]], PlayersDataOnline[i][NameOnlineFix], FaccionData[PlayersData[i][Faccion]][NameFaccion], i);
								    SendClientMessage(playerid, 0x505050FF, MsgNFSOn);
								}
							}
							if (!FoundNFS)
							{
								if (GetPlayerVehiclesCount(playerid))
								{
									new MyVehicleID = GetPlayerVehicleID(playerid);
									if (PlayersData[playerid][Dinero] >= coches_Todos_Precios[GetVehicleModel(MyVehicleID) - 400] / 3 || // 5
										(PlayersData[playerid][Credito] >= coches_Todos_Precios[GetVehicleModel(MyVehicleID) - 400] / 3 && PlayersData[playerid][ModoPago])) // 5
									{
										new MsgNFSPrecioRenovacion[MAX_TEXT_CHAT];
										format(MsgNFSPrecioRenovacion, sizeof(MsgNFSPrecioRenovacion), "{F0F0F0}Este vehículo modelo \"%s\" tiene un costo por renovación de $%i.\n{F50000}¿Seguro que desea renovar su vehículo?", coches_Todos_Nombres[GetVehicleModel(MyVehicleID) - 400], coches_Todos_Precios[GetVehicleModel(MyVehicleID) - 400] / 3); // 5
										ShowPlayerDialogEx(playerid, 191, DIALOG_STYLE_MSGBOX, "{00A5FF}Autoservicio - Renovación Vehícular", MsgNFSPrecioRenovacion, "Si", "No");
									}
									else
									{
									    new MsgNFSPrecioRenew[MAX_TEXT_CHAT];
										format(MsgNFSPrecioRenew, sizeof(MsgNFSPrecioRenew), "{F0F0F0}Este vehículo modelo \"%s\" tiene un costo por renovación de $%i.\n{F50000}No tienes suficiente dinero para renovar este vehículo!", coches_Todos_Nombres[GetVehicleModel(MyVehicleID) - 400], coches_Todos_Precios[GetVehicleModel(MyVehicleID) - 400] / 3); // 5
										ShowPlayerDialogEx(playerid, 999, DIALOG_STYLE_MSGBOX, "{00A5FF}Autoservicio - Renovación Vehícular", MsgNFSPrecioRenew, "Aceptar", "");
										//SendInfoMessage(playerid, 0, "242", "No tienes suficiente dinero para renovar éste vehículo!");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "241", "Usted no tiene un vehículo!");
								}
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1457", "No te encuentras en el punto de renovación!");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "221", "Este no es su vehículo");
					}
				}
				// COMANDO: /Licencias
				else if (strcmp("/Licencias", cmdtext, true, 10) == 0 && strlen(cmdtext) == 10)
				{
					if (IsPlayerInRangeOfPoint(playerid,2.0,-2045.9489,-128.8156,-50.9141))
					{
						new MsgLicOn[100];
						new FoundLic;
						for (new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
						{
							if (IsPlayerConnected(i) && PlayersDataOnline[i][State] == 3 && PlayersData[i][Faccion] == LICENCIEROS && PlayersData[i][Rango] != 3 && PlayersData[i][Rango] != 5)
							{
								if (!FoundLic)
								{
									SendClientMessage(playerid, 0x505050FF, "{505050}»»»»»»»»»»»»»»»»»» {008228}L{00B428}icenciados {008228}O{00B428}nline {505050}««««««««««««««««««");
									FoundLic++;
								}
								format(MsgLicOn, sizeof(MsgLicOn), "{0037FF}* %s %s en el %s[%i]", FaccionesRangos[PlayersData[i][Faccion]][PlayersData[i][Rango]], PlayersDataOnline[i][NameOnlineFix], FaccionData[PlayersData[i][Faccion]][NameFaccion], i);
								SendClientMessage(playerid, 0x505050FF, MsgLicOn);
							}
						}
						if (!FoundLic)
						{
							new MsgDialogLicencias[175];
							format(MsgDialogLicencias, sizeof(MsgDialogLicencias),
							"Licencia\tPrecio\n\
							Automovil\t$%i\n\
							Camión\t$%i\n\
							Motos\t$%i\n\
							Vuelo\t$%i\n\
							Botes\t$%i\n\
							Tren\t$%i\n\
							Pesca\t$%i",
							FaccionData[LICENCIEROS][precio_licencias][1],
							FaccionData[LICENCIEROS][precio_licencias][2],
							FaccionData[LICENCIEROS][precio_licencias][3],
							FaccionData[LICENCIEROS][precio_licencias][4],
							FaccionData[LICENCIEROS][precio_licencias][5],
							FaccionData[LICENCIEROS][precio_licencias][6],
							FaccionData[LICENCIEROS][precio_licencias][7]);

							ShowPlayerDialogEx(playerid, 192, DIALOG_STYLE_TABLIST_HEADERS, "Licencias", MsgDialogLicencias, "Adquirir", "Cancelar");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "1457", "No te encuentras en el punto de compra de licencias!");
					}
				}
				// COMANDO: /Contratos
				else if (strcmp("/Contratos", cmdtext, true, 10) == 0 && strlen(cmdtext) == 10)
				{
					if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, 0xE74C3CFF, "ERROR: {FFFFFF}No puede usar el comando en un vehículo.");
					if(!IsPlayerNearAPayphone(playerid)) return SendClientMessage(playerid, 0xE74C3CFF, "ERROR: {FFFFFF}No está cerca de un teléfono público.");
					ShowHitMarketMenu(playerid);
				}
				// COMANDO: /Servicio
				//else if (strcmp("/EP", cmdtext, true, 9) == 0 && strlen(cmdtext) == 9)
				else if (strfind(cmdtext, "/ep", true) == 0)
				{
				    if (PlayersData[playerid][Faccion] == SAPD || PlayersData[playerid][Faccion] == SAPD)
				    {
                        if(!ServicioPolicias[playerid])
						{
      						for(new i = 0; i < MAX_PLAYERS; i++)
							{
								if(IsPlayerConnected(i))
								{
									if(PlayersData[i][Faccion] == SAPD || PlayersData[i][Faccion] == SAPD)
									{
										SetPlayerMarkerForPlayer(i, playerid, 0x14FF00FF);
									}
								}
							}
				            ServicioPolicias[playerid] = 1;
				            SendInfoMessage(playerid, 2, "0", "Le has mostrado tu ubicación a todos los Policias.");
						}
						else
						{
      						for (new i = 0; i < MAX_PLAYERS; i++)
							{
								if(IsPlayerConnected(i))
								{
									if (PlayersData[i][Faccion] == SAPD || PlayersData[i][Faccion] == SAPD)
									{
										SetPlayerMarkerForPlayer(i, playerid, 0xFFFFFF00);
									}
								}
							}
							SetPlayerColor(playerid, (PlayersData[playerid][VIP]) ? COLOR_PLAYERS_VIP : PLAYERS_COLOR);
							ServicioPolicias[playerid] = 0;
					   		SendInfoMessage(playerid, 2, "0", "Le has ocultado tu localización a todos los policias.");
      					}
					}
					else
			        {
						SendInfoMessage(playerid, 0, "1088", "Usted no es SAPD ni SAPD!");
					}
				}
				// COMANDO: /Factura [ID] [Precio] [Razón]
				else if (strfind(cmdtext, "/Factura ", true) == 0)
				{
					if (PlayersData[playerid][Faccion] == TALLER_LS || PlayersData[playerid][Faccion] == TALLER_LS)
				    {
				        new playerid_factura = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
				        new dinero_factura = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
					    if (IsPlayerNear(playerid, playerid_factura,
							 "685",
							 "686",
							 "687",
							 "El jugador que desea darle una factura no se encuentra conectado",
							 "El jugador que desea darle una factura no se encuentra logueado",
							 "El jugador que desea darle una factura no se encuentra cerca de tí"))
					    {
					        if (dinero_factura > 0 && dinero_factura <= 20000)
					        {
								new MsgFactura[MAX_TEXT_CHAT];
								new MsgFacturaToPlayer[MAX_TEXT_CHAT];
								format(MsgFactura, sizeof(MsgFactura), "Le has dado una factura de $%i a %s; Razón: %s", dinero_factura, PlayersDataOnline[playerid_factura][NameOnlineFix], cmdtext[GetPosSpace(cmdtext, 3)]);
								format(MsgFacturaToPlayer, sizeof(MsgFacturaToPlayer), "%s te ha dado una factura $%i usa (/Aceptar Factura); Razón: %s", PlayersDataOnline[playerid][NameOnlineFix], dinero_factura, cmdtext[GetPosSpace(cmdtext, 3)]);
	                            SendInfoMessage(playerid, 3, "0", MsgFactura);
	                            SendInfoMessage(playerid_factura, 3, "0", MsgFacturaToPlayer);

								PlayersDataOnline[playerid_factura][VFactura][0] = playerid;
								PlayersDataOnline[playerid_factura][VFactura][1] = dinero_factura;
							}
							else
							{
								SendInfoMessage(playerid, 0, "688", "El monto mínimo de una factura es $1 y máximo $20000");
							}
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "689", "Usted no es mecánico");
					}
				}
				// COMANDO: /Servicio [ID] [Precio] [Razón]
				else if (strfind(cmdtext, "/Servicio ", true) == 0)
				{
					if (PlayersData[playerid][Faccion] == ADP)
				    {
				        new playerid_factura = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
				        new dinero_factura = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
					    if (IsPlayerNear(playerid, playerid_factura,
							 "1354",
							 "1355",
							 "1356",
							 "El jugador que desea darle un servicio no se encuentra conectado",
							 "El jugador que desea darle un servicio no se encuentra logueado",
							 "El jugador que desea darle un servicio no se encuentra cerca de tí"))
					    {
					        if (dinero_factura > 100 && dinero_factura <= 20000)
					        {
								new MsgFactura[MAX_TEXT_CHAT];
								new MsgFacturaToPlayer[MAX_TEXT_CHAT];
								format(MsgFactura, sizeof(MsgFactura), "Le ofreciste servicios por $%i a %s; Razón: %s", dinero_factura, PlayersDataOnline[playerid_factura][NameOnlineFix], cmdtext[GetPosSpace(cmdtext, 3)]);
								format(MsgFacturaToPlayer, sizeof(MsgFacturaToPlayer), "%s te ofrece sus servicios por $%i usa (/Aceptar Servicios); Razón: %s", PlayersDataOnline[playerid][NameOnlineFix], dinero_factura, cmdtext[GetPosSpace(cmdtext, 3)]);
	                            SendInfoMessage(playerid, 3, "0", MsgFactura);
	                            SendInfoMessage(playerid_factura, 3, "0", MsgFacturaToPlayer);

								PlayersDataOnline[playerid_factura][VServicio][0] = playerid;
								PlayersDataOnline[playerid_factura][VServicio][1] = dinero_factura;
							}
							else
							{
								SendInfoMessage(playerid, 0, "1357", "El monto mínimo de un servicio es $100 y máximo $20000");
							}
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "1353", "Usted no es ADP");
					}
				}
				// COMANDO: /Pistas
			  	else if (strcmp("/Pistas", cmdtext, true, 7) == 0 && strlen(cmdtext) == 7)
	  			{
				    MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Faccion] == TALLER_LS && PlayersData[playerid][Rango] == 0 ||
						 PlayersData[playerid][Faccion] == TALLER_LS && PlayersData[playerid][Rango] == 0 ||
						 PlayersData[playerid][Admin] >= 4)
				    {
                        ShowPistas(playerid);
			        }
			        else
			        {
						SendInfoMessage(playerid, 0, "1432", "Usted no puede organizar carreras!");
					}
	  			}
				// COMANDO: /Taller
      			else if (strcmp("/Taller", cmdtext, true, 7) == 0 && strlen(cmdtext) == 7)
	  			{
					if (PlayersData[playerid][Faccion] == TALLER_LS || PlayersData[playerid][Faccion] == TALLER_LS || PlayersData[playerid][Admin] >= 8)
				    {
					    new MyNearVehicle = IsPlayerInNearVehicle(playerid);
				        if (MyNearVehicle)
				        {
				            if (IsPlayerInTaller(playerid))
				            {
								TogglePlayerControllableEx(playerid, false);
								ShowMenuForPlayer(TallerPrincipal, playerid);
								PlayersDataOnline[playerid][InMenu] = GetPlayerMenu(playerid);
								PlayersDataOnline[playerid][MyIDVehicleTunning] = MyNearVehicle;
							}
						}
			        }
			        else
			        {
						SendInfoMessage(playerid, 0, "681", "Usted no es mecánico");
					}
	  			}
				// COMANDO: /Dropear
			  	else if (strcmp("/Dropear", cmdtext, true, 8) == 0 && strlen(cmdtext) == 8)
	  			{
				    if (PlayersData[playerid][Faccion] == NFS && PlayersData[playerid][Rango] <= 1 ||
						 PlayersData[playerid][Faccion] == NFS && PlayersData[playerid][Rango] == 3) // Anteriores Rango <=0 y Rango == 3
				    {
						if (PlayersDataOnline[playerid][PistaIDp] == -1)
						{
					        new IsDrop = GetMyNearCity(playerid);
							// San Fierro
							if (IsDrop)
							{
								SetPlayerRaceCheckpoint(playerid, 1, -1720.5479,1018.1831,17.2422, 0,0,0,10);
							}
							// Los Santos
							else
							{
								SetPlayerRaceCheckpoint(playerid, 1, 2804.9290,-1432.0378,39.7068, 0,0,0,10);
							}
							SendInfoMessage(playerid, 2, "0", "Se le ha marcado en el mapa un \"CheckPoint\" que es donde debe dropear el vehículo");
						}
						else
						{
							SendInfoMessage(playerid, 0, "1446", "No puede dropear vehículos en una carrera");
						}
				    }
			        else
			        {
						SendInfoMessage(playerid, 0, "717", "Usted no es NFS");
					}
			    }
				// COMANDO: /Alarmas
				else if (strcmp("/Alarmas", cmdtext, true, 8) == 0 && strlen(cmdtext) == 8)
				{
					if (PlayersData[playerid][Faccion] == SAPD ||
						 PlayersData[playerid][Faccion] == SAPD)
				    {
						ShowAlarmas(playerid);
			        }
			        else
			        {
						SendInfoMessage(playerid, 0, "1501", "Usted no es SAPD ni SAPD!");
					}
				}
				// COMANDO: /Sirena
				else if (strcmp("/Sirena", cmdtext, true, 7) == 0 && strlen(cmdtext) == 7)
				{
					if (PlayersData[playerid][Faccion] == SAPD ||
						 PlayersData[playerid][Faccion] == SAPD)
				    {
				        if (PlayersDataOnline[playerid][InCarId] && PlayersDataOnline[playerid][InCarId] > MAX_CAR_DUENO && PlayersDataOnline[playerid][InCarId] <= MAX_CAR_FACCION && DataCars[PlayersDataOnline[playerid][InCarId]][Modelo] == 405 && (DataCars[PlayersDataOnline[playerid][InCarId]][Time] == SAPD && PlayersData[playerid][Faccion] == SAPD || DataCars[PlayersDataOnline[playerid][InCarId]][Time] == SAPD && PlayersData[playerid][Faccion] == SAPD)|| // sentinel
				        	 PlayersDataOnline[playerid][InCarId] && PlayersDataOnline[playerid][InCarId] > MAX_CAR_DUENO && PlayersDataOnline[playerid][InCarId] <= MAX_CAR_FACCION && DataCars[PlayersDataOnline[playerid][InCarId]][Modelo] == 560 && (DataCars[PlayersDataOnline[playerid][InCarId]][Time] == SAPD && PlayersData[playerid][Faccion] == SAPD || DataCars[PlayersDataOnline[playerid][InCarId]][Time] == SAPD && PlayersData[playerid][Faccion] == SAPD)|| // sultán
				        	 PlayersDataOnline[playerid][InCarId] && PlayersDataOnline[playerid][InCarId] > MAX_CAR_DUENO && PlayersDataOnline[playerid][InCarId] <= MAX_CAR_FACCION && DataCars[PlayersDataOnline[playerid][InCarId]][Modelo] == 402 && (DataCars[PlayersDataOnline[playerid][InCarId]][Time] == SAPD && PlayersData[playerid][Faccion] == SAPD || DataCars[PlayersDataOnline[playerid][InCarId]][Time] == SAPD && PlayersData[playerid][Faccion] == SAPD)|| // buffalo
							 PlayersDataOnline[playerid][InCarId] && PlayersDataOnline[playerid][InCarId] > MAX_CAR_DUENO && PlayersDataOnline[playerid][InCarId] <= MAX_CAR_FACCION && DataCars[PlayersDataOnline[playerid][InCarId]][Modelo] == 541 && (DataCars[PlayersDataOnline[playerid][InCarId]][Time] == SAPD && PlayersData[playerid][Faccion] == SAPD || DataCars[PlayersDataOnline[playerid][InCarId]][Time] == SAPD && PlayersData[playerid][Faccion] == SAPD)) // bullet
				        {
							ShowAndHideSirena(playerid, PlayersDataOnline[playerid][InCarId]);
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "1556", "Suba como conductor al Sentinel, Bullet, Buffalo o Sultán de su jurisdicción y luego use /Sirena!");
				        }
			        }
			        else
			        {
						SendInfoMessage(playerid, 0, "1557", "Usted no es SAPD ni SAPD!");
					}
				}
				// COMANDO: /Táser / Taser / Ta
				else if(strcmp("/Táser", cmdtext, true, 6) == 0 && strlen(cmdtext) == 6 || strcmp("/Taser", cmdtext, true, 6) == 0 && strlen(cmdtext) == 6 || strcmp("/Ta", cmdtext, true, 3) == 0 && strlen(cmdtext) == 3)
				{
				    if (PlayersData[playerid][Faccion] == SAPD || PlayersData[playerid][Faccion] == ADP || PlayersData[playerid][Faccion] == SAPD)
				    {
						if(GetObjectByType(playerid, TYPE_TASER) != -1)
						{
						    ReverseEx(PlayersData[playerid][ObjetosVision][GetObjectByType(playerid, TYPE_TASER)]);
							if (!PlayersData[playerid][ObjetosVision][GetObjectByType(playerid, TYPE_TASER)])
							{
							    Acciones_ROL(playerid, ACCION_ME, "saca su táser del cinturón táctico");
                                SetObjectHoldToPlayer(playerid, GetModelObjectByType(TYPE_TASER), GetObjectByType(playerid, TYPE_TASER));
							}
							else
							{
							    Acciones_ROL(playerid, ACCION_ME, "guarda su táser en su cinturón táctico");
                                RemovePlayerAttachedObject(playerid, GetObjectByType(playerid, TYPE_TASER));
							}
						}
						else
						{
						    SendInfoMessage(playerid, 0, "", "¡No tienes ningún táser!");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "", "Usted no es SAPD, SAPD ni ADP!");
					}
				}
				// COMANDO: /Esposar [ID]
				else if (strfind(cmdtext, "/Esposar ", true) == 0)
				{
					if (PlayersData[playerid][Faccion] == SAPD ||
						 PlayersData[playerid][Faccion] == SAPD)
				    {
					    if (IsPlayerNear(playerid, strval(cmdtext[9]),
							 "743",
							 "744",
							 "745",
							 "El jugador que le deseas esposar no se encuentra conectado",
							 "El jugador que le deseas esposar no se ha logueado",
							 "El jugador que le deseas esposar no se encuentra cerca de tí"))
					    {
					        new MsgEsposarIntentar[MAX_TEXT_CHAT];
					        if (!PlayersDataOnline[strval(cmdtext[9])][IsEsposas])
					        {
						        format(MsgEsposarIntentar, sizeof(MsgEsposarIntentar), "esposar a %s", PlayersDataOnline[strval(cmdtext[9])][NameOnlineFix]);
								if (IntentarAccion(playerid, MsgEsposarIntentar, random(3)))

								{
									TogglePlayerControllableEx(strval(cmdtext[9]), false);
									PlayersDataOnline[strval(cmdtext[9])][IsEsposas] = true;
								}
							}
							else
							{
								format(MsgEsposarIntentar, sizeof(MsgEsposarIntentar), "le quitó las esposas a %s", PlayersDataOnline[strval(cmdtext[9])][NameOnlineFix]);
								Acciones_ROL(playerid, ACCION_ME, MsgEsposarIntentar);
							    PlayersDataOnline[strval(cmdtext[9])][IsEsposas] = false;
								TogglePlayerControllableEx(strval(cmdtext[9]), true);
							}
						}
			        }
			        else
			        {
						SendInfoMessage(playerid, 0, "742", "Usted no es SAPD ni SAPD!");
					}
				}
				// COMANDO: /Atar [ID]
				else if (strfind(cmdtext, "/Atar ", true) == 0)
				{
					if (PlayersData[playerid][Faccion] == LCN ||
						 PlayersData[playerid][Faccion] == YKZ ||
						 PlayersData[playerid][Faccion] == SICARIOS ||
						 PlayersData[playerid][Rango] <= 2 && (
						 PlayersData[playerid][Faccion] == COLTS 	 ||
						 PlayersData[playerid][Faccion] == HAMPA 	 ||
						 PlayersData[playerid][Faccion] == TRAFICANTES 	 ||
						 PlayersData[playerid][Faccion] == TheAngelsMC 	 ||
						 PlayersData[playerid][Faccion] == ADP && PlayersData[playerid][Rango] == 6 ||
						 PlayersData[playerid][Faccion] == CONTRABANDISTAS ||
						 PlayersData[playerid][Faccion] == HEORS
						))
				    {
					    if (IsPlayerNear(playerid, strval(cmdtext[6]),
							 "738",
							 "739",
							 "740",
							 "El jugador que le deseas atar no se encuentra conectado",
							 "El jugador que le deseas atar no se ha logueado",
							 "El jugador que le deseas atar no se encuentra cerca de tí"))
					    {
					        new MsgAtarIntentar[MAX_TEXT_CHAT];
					        if (!PlayersDataOnline[strval(cmdtext[6])][IsAtado])
					        {
						        format(MsgAtarIntentar, sizeof(MsgAtarIntentar), "atar a %s", PlayersDataOnline[strval(cmdtext[6])][NameOnlineFix]);
								if (IntentarAccion(playerid, MsgAtarIntentar, random(3)))
								{
									TogglePlayerControllableEx(strval(cmdtext[6]), false);
									PlayersDataOnline[strval(cmdtext[6])][IsAtado] = true;
								}
							}
							else
							{
								format(MsgAtarIntentar, sizeof(MsgAtarIntentar), "desató a %s", PlayersDataOnline[strval(cmdtext[6])][NameOnlineFix]);
								Acciones_ROL(playerid, ACCION_ME, MsgAtarIntentar);
							    PlayersDataOnline[strval(cmdtext[6])][IsAtado] = false;
								TogglePlayerControllableEx(strval(cmdtext[6]), true);
							}
						}
			        }
			        else
			        {
						SendInfoMessage(playerid, 0, "741", "Usted no es Sicario ni Mafioso!");
					}
				}
				// COMANDO: /Recoger
				else if (strfind(cmdtext, "/Recoger", true) == 0)
				{
					// COMANDO: /Recoger
					if (strcmp("/Recoger", cmdtext, true, 8) == 0 && strlen(cmdtext) == 8)
				  	{
						if (PlayersData[playerid][Faccion] == SAPD ||
							 PlayersData[playerid][Faccion] == SAPD ||
							 PlayersData[playerid][Faccion] == CAMIONEROS ||
							 PlayersData[playerid][Faccion] == ADP ||
							 PlayersData[playerid][Faccion] == LSMD ||
							 PlayersData[playerid][Faccion] == LSMD)
					    {
					        new MyNearVCP = IsNearVCP(playerid);
					        if (MyNearVCP != -1)
					        {
					            if (PlayersData[playerid][Faccion] == CAMIONEROS && VCP[MyNearVCP][objectmodel] == CONO ||
						             PlayersData[playerid][Faccion] == CAMIONEROS && VCP[MyNearVCP][objectmodel] == VALLA ||
						             PlayersData[playerid][Faccion] == ADP && VCP[MyNearVCP][objectmodel] == CONO ||
									 PlayersData[playerid][Faccion] == SAPD || PlayersData[playerid][Faccion] == SAPD ||
									 PlayersData[playerid][Faccion] == LSMD && PlayersData[playerid][Rango] <= 2 && VCP[MyNearVCP][objectmodel] == CONO ||
									 PlayersData[playerid][Faccion] == LSMD && PlayersData[playerid][Rango] <= 2 && VCP[MyNearVCP][objectmodel] == VALLA ||
						 	 		 PlayersData[playerid][Faccion] == LSMD && PlayersData[playerid][Rango] == 5 && VCP[MyNearVCP][objectmodel] == CONO ||
						 	 		 PlayersData[playerid][Faccion] == LSMD && PlayersData[playerid][Rango] == 5 && VCP[MyNearVCP][objectmodel] == VALLA ||
									 PlayersData[playerid][Faccion] == LSMD && PlayersData[playerid][Rango] <= 2 && VCP[MyNearVCP][objectmodel] == CONO ||
									 PlayersData[playerid][Faccion] == LSMD && PlayersData[playerid][Rango] <= 2 && VCP[MyNearVCP][objectmodel] == VALLA ||
						 	 		 PlayersData[playerid][Faccion] == LSMD && PlayersData[playerid][Rango] == 5 && VCP[MyNearVCP][objectmodel] == CONO ||
						 	 		 PlayersData[playerid][Faccion] == LSMD && PlayersData[playerid][Rango] == 5 && VCP[MyNearVCP][objectmodel] == VALLA 			  )
					            {
									RemoveVCP(MyNearVCP);
								}
							    else
							    {
							        if (PlayersData[playerid][Faccion] != LSMD || PlayersData[playerid][Faccion] != LSMD)
							        {
										SendInfoMessage(playerid, 0, "887", "Los camioneros solo pueden recoger conos!");
									}
									else
									{
										SendInfoMessage(playerid, 0, "1288", "Los bomberos solo pueden recoger vallas y conos!");
									}
								}
							}
						    else
						    {
								SendInfoMessage(playerid, 0, "834", "Aquí no hay ningún Cono, Valla ni Pincho!");
							}
					    }
					    else
					    {
							SendInfoMessage(playerid, 0, "835", "Usted no es SAPD, SAPD, Camionero ni Bombero");
						}
				  	}
				  	// COMANDO: /Recoger Arma
				  	else if (strcmp("/Recoger Arma", cmdtext, true, 13) == 0 && strlen(cmdtext) == 13)
                    {
                        if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_DUCK ||
						    PlayersDataOnline[playerid][AdminOn])
                        {
							if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
							{
								new f = MAX_OBJ+1;
		    	           		for(new a = 0; a < MAX_OBJ; a++)
			               		{
			                   		if(IsPlayerInRangeOfPoint(playerid, 5.0, dGunData[a][ObjPos][0], dGunData[a][ObjPos][1], dGunData[a][ObjPos][2]))
			                   		{
										f = a;
										break;
			                   		}
    	   	           			}
			               		if(f < MAX_OBJ)
			               		{
			               		    DestroyDynamicObject(dGunData[f][ObjID]);
			               			GivePlayerWeaponEx(playerid, dGunData[f][ObjData][0], dGunData[f][ObjData][1]);
			               			dGunData[f][ObjPos][0] = 0.0;
			               			dGunData[f][ObjPos][1] = 0.0;
			               			dGunData[f][ObjPos][2] = 0.0;
			               			dGunData[f][ObjID] = -1;
       	                			dGunData[f][ObjData][1] = 0;
	   	            				new string[50];
	   	                			format(string, sizeof(string), "recoge %s", GunNames[dGunData[f][ObjData][0]]);
	   	                			Acciones_ROL(playerid, ACCION_ME, string);
								}
								else
								{
								    SendInfoMessage(playerid, 0, "213", "Tú no tienes un arma cerca que puedas recoger!");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "214", "No puedes recoger un arma desde el interior de un vehículo");
							}
						}
						else
						{
						    SendInfoMessage(playerid, 0, "215", "Debes estar agachado para poder recoger un arma.");
						}
					}
					// COMANDO: /Recoger BBX
				  	else if (strcmp("/Recoger BBX", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
                    {
                        if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_DUCK)
                        {
							if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
							{
								if(!GetPVarInt(playerid, "PlacedBB"))
							    {
							        SendInfoMessage(playerid, 2, "0", "Tu no has colocado ningun estéreo portátil");
							    }
								if(IsPlayerInRangeOfPoint(playerid, 3.0, GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ")))
							    {
									PickUpBoombox(playerid);
									Acciones_ROL(playerid, ACCION_ME, "recoge su estéreo portátil del suelo");
									SendInfoMessage(playerid, 2, "0", "Has recogido tu estéreo portátil");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "214", "No puedes recoger un estéreo portátil desde el interior de un vehículo");
							}
						}
						else
						{
						    SendInfoMessage(playerid, 0, "215", "Debes estar agachado para poder recoger un estéreo portátil.");
						}
					}
					// COMANDO: /Recoger Todos
				  	else if (strcmp("/Recoger Todos", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
		  			{
					    MsgAdminUseCommands(8, playerid, cmdtext);
						if (PlayersData[playerid][Admin] >= 4)
						{
			             	for (new i=0; i < MAX_OBJECTS_VALLAS_CONOS_PINCHOS; i++)
			             	{
							    if (VCP[i][objectid_vcp] != -1)
							    {
								    RemoveVCP(i);
							    }
						    }
							new StringFormat[MAX_TEXT_CHAT];
							format(StringFormat, sizeof(StringFormat), "%s Has recogido todos los objetos puestos por SAPD, SAPD y Camioneros",LOGO_STAFF);
		            		SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, StringFormat);
						}
						else
						{
							SendInfoMessage(playerid, 0, "890", "Tú no tienes acceso al comando /Recoger Todos.");
					        return 1;
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "836", "Quizás quiso decir: /Recoger {Arma, BBX}");
					}
			  	}
				// COMANDO: /Chequear [ID]
				else if (strfind(cmdtext, "/Chequear ", true) == 0)
				{
					if (PlayersData[playerid][Faccion] == SAPD ||
						 PlayersData[playerid][Faccion] == SAPD ||
						 PlayersData[playerid][Faccion] == LCN ||
						 PlayersData[playerid][Faccion] == YKZ ||
						 PlayersData[playerid][Faccion] == COLTS ||
						 PlayersData[playerid][Faccion] == HEORS ||
						 PlayersData[playerid][Faccion] == HAMPA ||
						 PlayersData[playerid][Faccion] == GOBIERNO ||
						 PlayersData[playerid][Faccion] == TheAngelsMC ||
						 PlayersData[playerid][Faccion] == ADP ||
						 PlayersData[playerid][Faccion] == PODERJUDICIAL ||
						 PlayersData[playerid][Faccion] == TRAFICANTES ||
						 PlayersData[playerid][Faccion] == CONTRABANDISTAS ||
						 PlayersData[playerid][Faccion] == SICARIOS)
				    {
					    if (playerid == strval(cmdtext[10]) || IsPlayerNear(playerid, strval(cmdtext[10]),
							 "852",
							 "853",
							 "854",
							 "El jugador que le deseas chequear no se encuentra conectado",
							 "El jugador que le deseas chequear no se ha logueado",
							 "El jugador que le deseas chequear no se encuentra cerca de tí"))
					    {
					        if (playerid == strval(cmdtext[10]))
					        {
								Acciones_ROL(playerid, ACCION_ME, "se revisa el mismo");
							}
							else
							{
								new MsgCheckMe[MAX_TEXT_CHAT];
								format(MsgCheckMe, sizeof(MsgCheckMe), "revisa a %s en busca de algo ilegal", PlayersDataOnline[strval(cmdtext[10])][NameOnlineFix]);
								Acciones_ROL(playerid, ACCION_ME, MsgCheckMe);
							}

							new YourWeaponAndaAmmo[2];
							new IsWeapon = false;
					        new MsgCheckWeapon[MAX_TEXT_CHAT];
							for (new i = 0; i < 13; i++)
							{
							    GetPlayerWeaponData(strval(cmdtext[10]), i, YourWeaponAndaAmmo[0], YourWeaponAndaAmmo[1]);
							    if (YourWeaponAndaAmmo[0] != 0)
							    {
									format(MsgCheckWeapon, sizeof(MsgCheckWeapon), "Arma: %s || Munición: %i", SlotNameWeapon[YourWeaponAndaAmmo[0]], YourWeaponAndaAmmo[1]);
								    SendClientMessage(playerid, COLOR_MESSAGES[2], MsgCheckWeapon);
								    IsWeapon = true;
								}
							}
							if (!IsWeapon)
							{
							    SendClientMessage(playerid, COLOR_MESSAGES[2], " No se encontraron armas");
							}
							format(MsgCheckWeapon, sizeof(MsgCheckWeapon), "Ganzúas: %i | Drogas: %i | Materiales: %i | Bombas: %i | Dinero: %i",
								PlayersData[strval(cmdtext[10])][Ganzuas],
								PlayersData[strval(cmdtext[10])][Drogas],
								PlayersData[strval(cmdtext[10])][Materiales],
								PlayersData[strval(cmdtext[10])][Bombas],
								PlayersData[strval(cmdtext[10])][Dinero]);
						    SendClientMessage(playerid, COLOR_MESSAGES[2], MsgCheckWeapon);
						}
				    }
				    else
				    {
						SendInfoMessage(playerid, 0, "851", "Usted no tiene acceso a este comando.");
					}
				}
				// COMANDO: /Desasignar [ID]
				else if (strfind(cmdtext, "/Desasignar ", true) == 0)
				{
				    if(PlayersData[playerid][Faccion] != CIVIL && PlayersData[playerid][Rango] <= 1)
				    {
					    new playeridDesasignar = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
					    new AsignarID = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
					    if (IsPlayerNear(playerid, playeridDesasignar,
							 "1009",
							 "1010",
							 "1011",
							 "El jugador que le deseas desasignarle un vehículo no se encuentra conectado",
							 "El jugador que le deseas desasignarle un vehículo no se ha logueado",
							 "El jugador que le deseas desasignarle un vehículo no se encuentra cerca de tí"))
					    {
					        if(PlayersData[playerid][Faccion] == PlayersData[playeridDesasignar][Faccion])
							{
							    if (PlayersData[playeridDesasignar][Rango] > 1)
							    {
							        if (AsignarID >= 1 && AsignarID <= 4)
							        {
										new ReturnRemoveAsignados = RemoveAsignados(playeridDesasignar, AsignarID - 1);
								        if (ReturnRemoveAsignados)
								        {
											new MsgAsignarMe[MAX_TEXT_CHAT];
											new MsgAsignarYou[MAX_TEXT_CHAT];

											format(MsgAsignarMe, sizeof(MsgAsignarMe), "Le has desasignado a %s el vehículo con matrícula %i", PlayersDataOnline[playeridDesasignar][NameOnlineFix], DataCars[ReturnRemoveAsignados][Matricula]);
											format(MsgAsignarYou, sizeof(MsgAsignarYou), "%s te ha desasignado el vehículo con matrícula %i", PlayersDataOnline[playerid][NameOnlineFix], DataCars[ReturnRemoveAsignados][Matricula]);
											SendInfoMessage(playerid, 3, "0", MsgAsignarMe);
											SendInfoMessage(playeridDesasignar, 3, "0", MsgAsignarYou);
		                                }
		                                else
		                                {
		                                    new MsgAsignarFail[MAX_TEXT_CHAT];
											format(MsgAsignarFail, sizeof(MsgAsignarFail), "%s no tiene ningún vehículo asignado en el Vehículo número %i!", PlayersDataOnline[playeridDesasignar][NameOnlineFix], AsignarID);
											SendInfoMessage(playerid, 0, "1012", MsgAsignarFail);
										}
									}
									else
									{
										SendInfoMessage(playerid, 0, "1201", "El número del Slot de vehículos asignados tiene que estar comprendido entre 1 y 4");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1013", "El jugador que desea desasignarle este vehículo, es Líder o Sub-Líder, no necesita desasignación");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "1013", "El jugador que desea desasignarle este vehículo, no pertenece a su facción");
							}
					    }
					}
					else
					{
						SendInfoMessage(playerid, 0, "1014", "Usted no es Líder ni Sub-Líder!");
					}
				}
				// COMANDO: /Asignar [ID]
				else if (strfind(cmdtext, "/Asignar ", true) == 0)
				{
				    if(PlayersData[playerid][Faccion] != CIVIL && PlayersData[playerid][Rango] <= 1)
				    {
						new MyNearCar = IsPlayerInNearVehicle(playerid);
						if (MyNearCar)
						{
							if (IsVehicleMyFaccion(playerid, MyNearCar))
							{
							    if (IsPlayerNear(playerid, strval(cmdtext[9]),
									 "992",
									 "993",
									 "994",
									 "El jugador que le deseas asignarle un vehículo no se encuentra conectado",
									 "El jugador que le deseas asignarle un vehículo no se ha logueado",
									 "El jugador que le deseas asignarle un vehículo no se encuentra cerca de tí"))
							    {
							        if(PlayersData[playerid][Faccion] == PlayersData[strval(cmdtext[9])][Faccion])
									{
									    if (PlayersData[strval(cmdtext[9])][Rango] > 1)
									    {
											new ResponseAddA = AddAsignados(strval(cmdtext[9]), MyNearCar);
									        if (ResponseAddA == 1)
									        {
												new MsgAsignarMe[MAX_TEXT_CHAT];
												new MsgAsignarYou[MAX_TEXT_CHAT];

												format(MsgAsignarMe, sizeof(MsgAsignarMe), "Le has asignado a %s el vehículo con matrícula %i.", PlayersDataOnline[strval(cmdtext[9])][NameOnlineFix], DataCars[MyNearCar][Matricula]);
												format(MsgAsignarYou, sizeof(MsgAsignarYou), "%s te ha asignado el vehículo con matrícula %i", PlayersDataOnline[playerid][NameOnlineFix], DataCars[MyNearCar][Matricula]);
												SendInfoMessage(playerid, 3, "0", MsgAsignarMe);
												SendInfoMessage(strval(cmdtext[9]), 3, "0", MsgAsignarYou);
		                                    }
		                                    else
		                                    {

		                                        new MsgAsignarFail[MAX_TEXT_CHAT];
		                                        if (ResponseAddA == 2)
		                                        {
													format(MsgAsignarFail, sizeof(MsgAsignarFail), "%s ya tiene asignado este vehículo!", PlayersDataOnline[strval(cmdtext[9])][NameOnlineFix]);
													SendInfoMessage(playerid, 0, "147", MsgAsignarFail);
												}
												else
												{
													format(MsgAsignarFail, sizeof(MsgAsignarFail), "Al jugador %s ya no se le puede asignar más vehículos!", PlayersDataOnline[strval(cmdtext[9])][NameOnlineFix]);
													SendInfoMessage(playerid, 0, "1200", MsgAsignarFail);
												}
											}
										}
										else
										{
											SendInfoMessage(playerid, 0, "246", "El jugador que desea asignarle este vehículo, es Líder o Sub-Líder, no necesita asignación");
										}
									}
									else
									{
										SendInfoMessage(playerid, 0, "995", "El jugador que desea asignarle este vehículo, no pertenece a su facción");
									}
							    }
							}
							else
							{
								SendInfoMessage(playerid, 0, "996", "Este vehículo no pertenece a su facción!");
							}
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "997", "Usted no es Líder ni Sub-Líder!");
					}
				}
				// COMANDO: /Meter [ID]
				else if (strfind(cmdtext, "/Meter ", true) == 0)
				{
					if (PlayersData[playerid][Faccion] == SAPD ||
					     PlayersData[playerid][Faccion] == SICARIOS ||
					     PlayersData[playerid][Faccion] == CONTRABANDISTAS ||
					     PlayersData[playerid][Faccion] == TRAFICANTES ||
						 PlayersData[playerid][Faccion] == SAPD)
				    {
					    if (IsPlayerNear(playerid, strval(cmdtext[7]),
							 "945",
							 "946",
							 "947",
							 "El jugador que le deseas meter o sacar de un vehículo no se encuentra conectado",
							 "El jugador que le deseas meter o sacar de un vehículo no se ha logueado",
							 "El jugador que le deseas meter o sacar de un vehículo no se encuentra cerca de tí"))
					    {
							new MsgMeter[MAX_TEXT_CHAT];
					        if (IsPlayerInAnyVehicle(strval(cmdtext[7])))
					        {
						        if (!IsPlayerInAnyVehicle(playerid))
						        {
						            format(MsgMeter, sizeof(MsgMeter), "sacar del vehículo a %s", PlayersDataOnline[strval(cmdtext[7])][NameOnlineFix]);
									if (IntentarAccion(playerid, MsgMeter, random(3)))
									{
									    RemovePlayerFromVehicle(strval(cmdtext[7]));
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "944", "Desde adentro del vehículo no puedes sacar a nadie que esté dentro del mismo");
								}
							}
							else
							{
						        if (!IsPlayerInAnyVehicle(playerid))
						        {
							  	    new MyNearVehicle = IsPlayerInNearVehicle(playerid);
							  	    if (MyNearVehicle)
							  	    {
									    new MySeatFree = -1;
									    new MySeatSave[4];

										for (new i = 0; i < MAX_PLAYERS; i++)
										{
											if (IsPlayerConnected(i) && PlayersDataOnline[i][State] == 3 && IsPlayerInAnyVehicle(playerid) && GetPlayerVehicleID(playerid) == MyNearVehicle && GetPlayerVehicleSeat(playerid) != 0)
											{
		                                        MySeatSave[GetPlayerVehicleSeat(playerid)] = true;
											}
										}
										if (!MySeatSave[3])
										{
	                                        MySeatFree = 3;
										}
										else if (!MySeatSave[2])
										{
	                                        MySeatFree = 2;
										}
										else if (!MySeatSave[1])
										{
	                                        MySeatFree = 1;
										}

										if (MySeatFree != -1)
										{
								            format(MsgMeter, sizeof(MsgMeter), "meter al vehículo a %s", PlayersDataOnline[strval(cmdtext[7])][NameOnlineFix]);
											if (IntentarAccion(playerid, MsgMeter, random(3)))
											{
											    PutPlayerInVehicle(strval(cmdtext[7]), MyNearVehicle, MySeatFree);
											}
										}
										else
										{
											SendInfoMessage(playerid, 0, "948", "No hay acientos vacíos para meter a este jugador en el vehículo y en el asiento de conductor no puede ir!");
										}
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "949", "Desde adentro del vehículo no puedes meter a nadie que esté afuera del mismo");
								}
							}

					    }
				    }
				    else
				    {
						SendInfoMessage(playerid, 0, "950", "Usted no es SAPD ni SAPD!");
					}
				}
				// COMANDO: /Equipo
				else if (strcmp("/Equipo", cmdtext, true, 7) == 0 && strlen(cmdtext) == 7)
				{
					if (PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] != 8 ||
						 PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] != 8)
				    {

						if (CheckWeapondCheat(playerid) && (
							 PlayersData[playerid][Faccion] == SAPD && IsPlayerInRangeOfPoint(playerid, 10.0, 225.2609,121.4485,999.0762) ||
							 PlayersData[playerid][Faccion] == SAPD && IsPlayerInRangeOfPoint(playerid, 10.0, 254.7378,77.8969,1003.6406)))
					    {
					        ShowPlayerEquipo(playerid);
					    }
					    else
					    {
							SendInfoMessage(playerid, 0, "842", "Aquí no está el armario de equipos");
						}

				    }
				    else
				    {
						if (PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] == 8)
						{
							SendInfoMessage(playerid, 0, "1555", "Usted no puede ponerse equipos todavía!");
						}
						else
						{
							SendInfoMessage(playerid, 0, "844", "Usted no es SAPD ni SAPD");
						}
					}
			  	}
				// COMANDO: /Bombas
			  	else if (strcmp("/Bombas", cmdtext, true, 7) == 0 && strlen(cmdtext) == 7)
			  	{
				    MsgAdminUseCommands(8, playerid, cmdtext);
				    ShowBombas(playerid);
			  	}
				// COMANDO: /Detonar Todas
			  	else if (strcmp("/Detonar Todas", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
				{
				    MsgAdminUseCommands(8, playerid, cmdtext);
			        new Found;
					for (new i = 0; i < MAX_BOMBAS_COUNT; i++)
				  	{
					    if (BombasO[i][TypeBomba] != BOMBA_TYPE_NONE &&
							strfind(BombasO[i][owner], PlayersDataOnline[playerid][NameOnline], true) == 0 &&
							strlen(BombasO[i][owner]) == strlen(PlayersDataOnline[playerid][NameOnline]))
					    {
							ActivarBomba(i, 1);
							Found++;
						}
					}
					if (Found)
					{
						new StringFormat[MAX_TEXT_CHAT];
						format(StringFormat, sizeof(StringFormat), "Detonaste todas las bombas actuales en total eran %i.", Found);
						SendInfoMessage(playerid, 2, "0", StringFormat);
					}
					else
					{
						SendInfoMessage(playerid, 0, "1306", "No tienes control de bombas actualmente!");
					}
				}
				// COMANDO: /Desactivar
				else if (strfind(cmdtext, "/Desactivar ", true) == 0)
				{
     			// COMANDO: /Desactivar Bomba
				  	if (strcmp("/Desactivar Bomba", cmdtext, true, 17) == 0 && strlen(cmdtext) == 17)
				  	{
						if (PlayersData[playerid][Faccion] == SICARIOS && PlayersData[playerid][Rango] <= 4 ||
							 PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] <= 6 ||
							 PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] <= 6 )
					    {
				  	    	new IsBombNear = IsPlayerNearBomba(playerid, 1.5, -1);
			        		if (IsBombNear != -1)
				        	{
				            	if (PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] <= 6 ||
									 PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] <= 6)
					        	{
									if (IntentarAccion(playerid, "desactivar la bomba", random(3)))
									{
								    	DesactivarBomba(playerid, IsBombNear);
								    	Acciones_ROL(playerid, ACCION_AME, "Bomba: Desactivada...");
									}
									else
									{
										ActivarBomba(IsBombNear, 20);
								    	Acciones_ROL(playerid, ACCION_AME, "Bomba: Activada...");
									}
								}
								else if(strfind(BombasO[IsBombNear][owner], PlayersDataOnline[playerid][NameOnline], true) == 0 &&
										strlen(BombasO[IsBombNear][owner]) == strlen(PlayersDataOnline[playerid][NameOnline]) )
								{
				            		if (DesactivarBomba(playerid, IsBombNear))
				            		{
										SendInfoMessage(playerid, 2, "0", "Desactivaste está bomba!");
				            		}
				            		else
				            		{
										SendInfoMessage(playerid, 0, "1304", "Ocurrió un error al desactivar la bomba!");
									}
								}
								else
								{
							    	SendInfoMessage(playerid, 0, "1655", "No puedes desactivar esta bomba! llama al 911 o 912");
								}
		            		}
		            		else
		            		{
								SendInfoMessage(playerid, 0, "1301", "No te encuentras cerca de una bomba!");
							}
						}
					    else
					    {
							SendInfoMessage(playerid, 0, "1295", "Usted no tiene los conocimientos suficientes por lo tanto no puede desactivar bombas!");
						}
				  	}
					// COMANDO: /Desactivar Bomba
				  	else if (strcmp("/Desactivar Bomba Todos", cmdtext, true, 23) == 0 && strlen(cmdtext) == 23)
				  	{
					    MsgAdminUseCommands(8, playerid, cmdtext);
						if (PlayersData[playerid][Admin] >= 7)
					    {
							for (new i = 0; i < MAX_BOMBAS_COUNT; i++)
							{
								RemoveBomba(i);
							}
							new StringFormat[MAX_TEXT_CHAT];
							format(StringFormat, sizeof(StringFormat), "%s Has desactivado todas las bombas",LOGO_STAFF);
		            		SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, StringFormat);
					    }
					    else
					    {
							SendInfoMessage(playerid, 0, "1299", "Tú no tienes acceso al comando /Desactivar Bomba Todos.");
						}
				  	}
				  	else
				  	{
						SendInfoMessage(playerid, 0, "1296", "Quizás quiso decir: /Desactivar Bomba");
					}
			  	}
				// COMANDO: /Poner
				else if (strfind(cmdtext, "/Poner ", true) == 0)
				{
					// COMANDO: /Poner Cono
				  	if (strcmp("/Poner Cono", cmdtext, true, 11) == 0 && strlen(cmdtext) == 11)
				  	{
						if (PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] <= 6 ||
							 PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] <= 6 ||
							 PlayersData[playerid][Faccion] == CAMIONEROS && PlayersData[playerid][Rango] <= 3 ||
							 PlayersData[playerid][Faccion] == ADP && PlayersData[playerid][Rango] <= 2 ||
							 PlayersData[playerid][Faccion] == LSMD && PlayersData[playerid][Rango] <= 2 ||
						 	 PlayersData[playerid][Faccion] == LSMD && PlayersData[playerid][Rango] == 5 ||
					  		 PlayersData[playerid][Faccion] == LSMD && PlayersData[playerid][Rango] <= 2 ||
						 	 PlayersData[playerid][Faccion] == LSMD && PlayersData[playerid][Rango] == 5 )
					    {
					        AddVCP(playerid, CONO, 0.0,0.0,0.0,0.0);
					    }
					    else if (PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] >= 7 ||
							 	  PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] >= 7)
					    {
							SendInfoMessage(playerid, 0, "837", "Usted no es tiene los permisos necesarios de SAPD, ni SAPD");
						}
						else
						{
						    SendInfoMessage(playerid, 0, "837", "Usted no es Camionero ni Bombero!");
						}
       				}
					// COMANDO: /Poner Uniforme
				  	else if (strcmp("/Poner Uniforme", cmdtext, true, 15) == 0 && strlen(cmdtext) == 15)
				  	{
				  	    new MyNearFaccion = GetNearFaccionUniforme(playerid);

						if (PlayersData[playerid][Faccion] == SAPD ||
							 PlayersData[playerid][Faccion] == SAPD)
					    {
							if 	(PlayersData[playerid][Faccion] == SAPD && IsPlayerInRangeOfPoint(playerid, 10.0, 4035.248,2941.2097,800.387) || // Alcatraz
								  PlayersData[playerid][Faccion] == SAPD && IsPlayerInRangeOfPoint(playerid, 10.0, 225.2609,121.4485,999.0762) ||
 								  PlayersData[playerid][Faccion] == SAPD && IsPlayerInRangeOfPoint(playerid, 10.0, 256.1825,77.9571,1003.6406)) //267.2060,319.3440,1004.617
						    {
								SetPlayerSelectedTypeSkin(playerid, true);
							}
							else
							{
								SendInfoMessage(playerid, 0, "1513", "No te encuentras en el vestuario!");
							}
					    }
					    else if (PlayersData[playerid][Faccion] != CIVIL ||
						 		  PlayersData[playerid][Faccion] != CIVIL )
					    {
					        if (PlayersData[playerid][Faccion] != SAPD ||
								 PlayersData[playerid][Faccion] != SAPD)
							{
							    if (MyNearFaccion == PlayersData[playerid][Faccion])
							    {
							        SetPlayerSelectedTypeSkin(playerid, true);
							    }
							    else
							    {
		       						SendInfoMessage(playerid, 0, "1514", "Verifica donde se ubica la entrada principal de tu facción e intenta nuevamente");
								}
							}
						}
						else
					    {
       						SendInfoMessage(playerid, 0, "1514", "Tú no tienes facción!");
						}
				  	}
					// COMANDO: /Poner Bomba
					else if (strfind(cmdtext, "/Poner Bomba", true) == 0)
				  	{
					    MsgAdminUseCommands(8, playerid, cmdtext);
						if (PlayersData[playerid][bomberman] > 0 ||
							 PlayersData[playerid][Admin] >= 8 && PlayersDataOnline[playerid][AdminOn])
					    {
					        if (PlayersData[playerid][bomberman] > 0 || PlayersData[playerid][Admin] >= 8 && PlayersDataOnline[playerid][AdminOn])
					        {
					            if(PlayersData[playerid][Bombas] >= 1)
								{
	       					        new ObjectIDBomb = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
						            new ResultadoPlanted;
									new Float:PosPlayer[3]; GetPlayerPos(playerid, PosPlayer[0], PosPlayer[1], PosPlayer[2]);
									if (PlayersDataOnline[playerid][InCarId] && IsPlayerInAnyVehicle(playerid) ||
										 PlayersDataOnline[playerid][InVehicle] && IsPlayerInAnyVehicle(playerid))
									{
							            ResultadoPlanted = AddBomba(playerid, BOMBA_TYPE_CAR, GetPlayerVehicleID(playerid), PosPlayer[0], PosPlayer[1], PosPlayer[2], 0);
										ApplyPlayerAnimCustom(playerid,
										"CAR_CHAT",
										CARCHAT_ANIMATIONS[15], false);
									}
									else
									{
									    if (ObjectIDBomb >= 0 && ObjectIDBomb < 8)
									    {
								            ResultadoPlanted = AddBomba(playerid, BOMBA_TYPE_FOOT, false, PosPlayer[0], PosPlayer[1], PosPlayer[2], BombasOjectsID[ObjectIDBomb]);
											ApplyPlayerAnimCustom(playerid,
											"BOMBER",
											BOMBER_ANIMATIONS[0], false);
										}
										else
										{
											SendInfoMessage(playerid, 0, "1303", "El tipo de bomba debe estar comprendido entre 0 y 7!");
										}
									}
								    if (ResultadoPlanted)
									{
									    if (PlayersData[playerid][Admin] >= 8 && PlayersDataOnline[playerid][AdminOn])
									    {

										}
										else
										{
											PlayersData[playerid][Bombas]--;
											PlayersData[playerid][bomberman]--;
										}
									}
								}
								else
								{
								    SendInfoMessage(playerid, 0, "1303", "No tienes una bomba para poner!");
								}
						    }
						    else
						    {
								SendInfoMessage(playerid, 0, "1302", "No tienes permiso para poner bombas!");
							}
					    }
					    else
					    {
							SendInfoMessage(playerid, 0, "1294", "Usted no es no puede poner bombas!");
						}
				  	}
					// COMANDO: /Poner Candado [Razón]
				  	else if (strfind(cmdtext, "/Poner Candado ", true) == 0)
				  	{
						if (PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] <= 5 ||
							 PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] <= 5 ||
							 PlayersData[playerid][Admin] >= 8 && PlayersDataOnline[playerid][AdminOn])
					    {
		          			new MyNearCar = IsPlayerInNearVehicle(playerid);
		          			if (MyNearCar)
		          			{
							    if (!IsPlayerInAnyVehicle(playerid))
							    {
							  	    if (!DataCars[MyNearCar][LockPolice])
							  	    {
										if (strlen(cmdtext[15]) >= 3 && strlen(cmdtext[15]) <= 50)
										{
								  	        if (IsValidStringServer(playerid, cmdtext[15]))
								  	        {
												if (IntentarAccion(playerid, "ponerle un candado policial al vehículo", random(3)))
												{
												    DataCars[MyNearCar][LockPolice] = true;
										    		format(DataCars[MyNearCar][ReasonLock], 50, "%s %s: %s", FaccionData[PlayersData[playerid][Faccion]][NameFaccion], PlayersDataOnline[playerid][NameOnlineFix], cmdtext[15]);

										    		DataCars[MyNearCar][Candado] = CreateObject(2422, 0, 0, -1000, 0, 0, 0, 100);
													AttachObjectToVehicle(DataCars[MyNearCar][Candado], MyNearCar, -1.275000, 1.500000, -0.449999, 2.700000, 0.0, -180.899887);
													SetObjectMaterialText(DataCars[MyNearCar][Candado], "SAPD", 0, 140, "Arial", 100, 1, -65536, -2987776, 1);
													SetObjectMaterialText(DataCars[MyNearCar][Candado], ".", 1, 140, "Arial", 100, 1, -65536, 0, 1);
													SetObjectMaterialText(DataCars[MyNearCar][Candado], ".", 2, 140, "Arial", 100, 1, -65536, 0, 1);
													DataCars[MyNearCar][CandadoID] = 2422;
												}
											}
										}
										else
										{
											SendInfoMessage(playerid, 0, "943", "La razón del candado debe ser mayor de 3 caracteres y menor de 50");
										}
							  	    }
							  	    else
							  	    {
										Acciones_ROL(playerid, ACCION_ME, "le quitó el candado al vehículo");
									    DataCars[MyNearCar][LockPolice] = false;
							    		format(DataCars[MyNearCar][ReasonLock], 50, "0");
							    		DestroyObject(DataCars[MyNearCar][Candado]);
						     			DataCars[MyNearCar][Candado] = false;
						     			DataCars[MyNearCar][CandadoID] = 0;


									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "879", "Desde adentro del vehículo no puedes ponerle candado");
								}
					  	    }
					    }
					    else
					    {
							SendInfoMessage(playerid, 0, "878", "Usted no es SAPD ni SAPD no puede poner candados!");
						}

				  	}
					// COMANDO: /Poner Pincho
				  	else if (strcmp("/Poner Pincho", cmdtext, true, 13) == 0 && strlen(cmdtext) == 13)
				  	{
						if (PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] <= 6 ||
							 PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] <= 6)
					    {
					        AddVCP(playerid, PINCHO, 0.0,0.0,0.0,0.0);
					    }
					    else
					    {
							SendInfoMessage(playerid, 0, "838", "Usted no es SAPD ni SAPD");
						}
				  	}
					// COMANDO: /Poner Valla
				  	else if (strcmp("/Poner Valla", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
				  	{
						if (PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] <= 6 ||
							 PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] <= 6 ||
							 PlayersData[playerid][Faccion] == CAMIONEROS && PlayersData[playerid][Rango] <= 3 ||
							 PlayersData[playerid][Faccion] == LSMD && PlayersData[playerid][Rango] <= 2 ||
						 	 PlayersData[playerid][Faccion] == LSMD && PlayersData[playerid][Rango] == 5 ||
							 PlayersData[playerid][Faccion] == LSMD && PlayersData[playerid][Rango] <= 2 ||
						 	 PlayersData[playerid][Faccion] == LSMD && PlayersData[playerid][Rango] == 5							 )
					    {
					        AddVCP(playerid, VALLA, 0.0,0.0,0.0,0.0);
					    }
					    else
					    {
							SendInfoMessage(playerid, 0, "838", "Usted no puede poner vallas!");
						}
				  	}
					// COMANDO: /Poner BBX
				  	else if (strcmp("/Poner BBX", cmdtext, true, 10) == 0 && strlen(cmdtext) == 10)
				  	{
						if (PlayersData[playerid][HaveBBX])
					    {
         					new string[128], LabelBBX[128], LabelBBXVIP[128], Float:BBCoord[4];
							GetPlayerPos(playerid, BBCoord[0], BBCoord[1], BBCoord[2]);
						    GetPlayerFacingAngle(playerid, BBCoord[3]);
							SetPVarFloat(playerid, "BBX", BBCoord[0]);
						    SetPVarFloat(playerid, "BBY", BBCoord[1]);
						    SetPVarFloat(playerid, "BBZ", BBCoord[2]);

						    BBCoord[0] += (2 * floatsin(-BBCoord[3], degrees));
						   	BBCoord[1] += (2 * floatcos(-BBCoord[3], degrees));
						   	BBCoord[2] -= 1.0;

							if(GetPVarInt(playerid, "PlacedBB"))
							{
								for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
								{
 									if(GetPVarType(i, "PlacedBB"))
   									{
  										if(IsPlayerInRangeOfPoint(playerid, 30.0, GetPVarFloat(i, "BBX"), GetPVarFloat(i, "BBY"), GetPVarFloat(i, "BBZ")))
										{
										    SendInfoMessage(playerid, 2, "0", "No puedes colocar una boombox en un área en la que ya hay una.");
										}
									}
								}
							}
							else
							{
							    SendInfoMessage(playerid, 2, "0", "Tu ya has puesto un estéreo portátil. Usa /Recoger BBX");
							}

							Acciones_ROL(playerid, ACCION_ME, "ha colocado un estéreo portátil");
							SetPVarInt(playerid, "PlacedBB", CreateDynamicObject(BoomboxObjects[PlayersData[playerid][TypeBoombox]], BBCoord[0], BBCoord[1], BBCoord[2], 0.0, 0.0, BBCoord[3], .worldid = GetPlayerVirtualWorld(playerid), .interiorid = GetPlayerInterior(playerid)));
							format(LabelBBX, sizeof(LabelBBX), "Dueño: %s\nMini Hi-Fi System\nDenver Estéreo Portable", PlayersDataOnline[playerid][NameOnlineFix]);
							format(LabelBBXVIP, sizeof(LabelBBXVIP), "Dueño: %s\nSONY Portable 420 Watts\nMega Bass Stereo Boombox", PlayersDataOnline[playerid][NameOnlineFix]);
                            format(string, sizeof(string), "Dueño: %s\nMini Hi-Fi System\nDenver Estéreo Portable", PlayersDataOnline[playerid][NameOnlineFix]);
							if(PlayersData[playerid][VIP])
							{
                                SetPVarInt(playerid, "BBLabel", _:CreateDynamic3DTextLabel(LabelBBXVIP, -1, BBCoord[0], BBCoord[1], BBCoord[2]+0.6, 5, .worldid = GetPlayerVirtualWorld(playerid), .interiorid = GetPlayerInterior(playerid)));
							}
							else
							{
							    SetPVarInt(playerid, "BBLabel", _:CreateDynamic3DTextLabel(LabelBBX, -1, BBCoord[0], BBCoord[1], BBCoord[2]+0.6, 5, .worldid = GetPlayerVirtualWorld(playerid), .interiorid = GetPlayerInterior(playerid)));
							}
							/*SetPVarInt(playerid, "BBLabel", _:CreateDynamic3DTextLabel(string, -1, BBCoord[0], BBCoord[1], BBCoord[2]+0.6, 5, .worldid = GetPlayerVirtualWorld(playerid), .interiorid = GetPlayerInterior(playerid))); */
							SetPVarInt(playerid, "BBArea", CreateDynamicSphere(BBCoord[0], BBCoord[1], BBCoord[2], 30.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid)));
							SetPVarInt(playerid, "BBInt", GetPlayerInterior(playerid));
							SetPVarInt(playerid, "BBVW", GetPlayerVirtualWorld(playerid));
							ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
    						ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
					    }
					    else
					    {
							SendInfoMessage(playerid, 0, "838", "Usted no tiene un estéreo portátil!");
						}
				  	}
					// COMANDO: /Poner Equipo [ID]
					else if (strfind(cmdtext, "/Poner Equipo ", true) == 0)
					{
						if (//PlayersData[playerid][Faccion] == SAPD ||
						     PlayersData[playerid][Faccion] == GOBIERNO && PlayersData[playerid][Rango] == 1 ||
						     PlayersData[playerid][Faccion] == GOBIERNO && PlayersData[playerid][Rango] == 2 ||
						     PlayersData[playerid][Faccion] == GOBIERNO && PlayersData[playerid][Rango] == 3 ||
						     PlayersData[playerid][Faccion] == GOBIERNO && PlayersData[playerid][Rango] == 5 ||
						      PlayersData[playerid][Faccion] == GOBIERNO ||
						     PlayersData[playerid][Faccion] == PODERJUDICIAL && PlayersData[playerid][Rango] == 1 ||
						     PlayersData[playerid][Faccion] == PODERJUDICIAL && PlayersData[playerid][Rango] == 2 ||
						     PlayersData[playerid][Faccion] == PODERJUDICIAL && PlayersData[playerid][Rango] == 3 ||
						     PlayersData[playerid][Faccion] == PODERJUDICIAL && PlayersData[playerid][Rango] == 4 ||
							 PlayersData[playerid][Faccion] == ADP)
				 			 //PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] != 7)
					    {
							if (PlayersData[playerid][TimeEquipo] <= gettime())
						    {
								if (CheckWeapondCheat(playerid) && (
									 PlayersData[playerid][Faccion] == GOBIERNO && IsPlayerInRangeOfPoint(playerid, 10.0, 366.4638,158.9179,1008.3828) ||
									 PlayersData[playerid][Faccion] == PODERJUDICIAL && IsPlayerInRangeOfPoint(playerid, 10.0, 366.4638,158.9179,1008.3828) ||
									 PlayersData[playerid][Faccion] == ADP && IsPlayerInRangeOfPoint(playerid, 10.0, 2550.8762,1338.9714,78.4764)))
									 //PlayersData[playerid][Faccion] == SAPD && IsPlayerInRangeOfPoint(playerid, 10.0, 256.1825,77.9571,1003.6406)))
							    {
							        if (strval(cmdtext[14]) >= 1 && strval(cmdtext[14]) <= 5)
							        {
										new equipoid = strval(cmdtext[14]);
										new NoAutirizado;
										PlayersData[playerid][TimeEquipo] = gettime() + 10;
	        							switch (equipoid)
								        {
								            case 1:
								            {
								                GivePlayerWeaponEx(playerid, 3, 1);
												GivePlayerWeaponEx(playerid, 41, 200);
											}
								            case 2:
								            {
												if (PlayersData[playerid][Rango] <= 6  || PlayersDataOnline[playerid][IsAutorizado])
												{
												    GivePlayerWeaponEx(playerid, 3, 1);
													GivePlayerWeaponEx(playerid, 41, 200);
													GivePlayerWeaponEx(playerid, 23, 30);
												}
												else
												{
	  												NoAutirizado = true;
												}
											}
								            case 3:
								            {
												if (PlayersData[playerid][Rango] <= 5 || PlayersDataOnline[playerid][IsAutorizado])
												{
												    GivePlayerWeaponEx(playerid, 43, 200);
													GivePlayerWeaponEx(playerid, 3, 1);
													GivePlayerWeaponEx(playerid, 41, 200);
													GivePlayerWeaponEx(playerid, 24, 60);
												}
												else
												{
	  												NoAutirizado = true;
												}
											}
								            case 4:
								            {
												if (PlayersData[playerid][Rango] <= 4 || PlayersDataOnline[playerid][IsAutorizado])
												{
												    GivePlayerWeaponEx(playerid, 3, 1);
													GivePlayerWeaponEx(playerid, 41, 200);
													GivePlayerWeaponEx(playerid, 24, 60);
													GivePlayerWeaponEx(playerid, 29, 100);
													GivePlayerWeaponEx(playerid, 17, 5);
													GivePlayerWeaponEx(playerid, 25, 20);
												}
												else
												{
	  												NoAutirizado = true;
												}
											}
								            case 5:
								            {
												if (PlayersData[playerid][Rango] <= 3 || PlayersDataOnline[playerid][IsAutorizado])
												{
												    GivePlayerWeaponEx(playerid, 3, 1);
													GivePlayerWeaponEx(playerid, 41, 200);
													GivePlayerWeaponEx(playerid, 24, 60);
													GivePlayerWeaponEx(playerid, 29, 100);
													GivePlayerWeaponEx(playerid, 31, 100);
													GivePlayerWeaponEx(playerid, 34, 10);
													GivePlayerWeaponEx(playerid, 17, 5);
												}
												else
												{
	  												NoAutirizado = true;
												}
											}
	          							}
	          							if (!NoAutirizado)
	          							{
											SetPlayerArmourEx(playerid, 100);
											new MsgEquipoMe[MAX_TEXT_CHAT];
											format(MsgEquipoMe, sizeof(MsgEquipoMe), "coge un equipo número %i del armario", strval(cmdtext[14]));
											Acciones_ROL(playerid, ACCION_ME, MsgEquipoMe);
											PlayersDataOnline[playerid][IsAutorizado] = false;
										}
										else
										{
											SendInfoMessage(playerid, 0, "1033", "Usted no está autorizado a coger ese equipo");
										}
								    }
								    else
								    {
										SendInfoMessage(playerid, 0, "841", "El ID del equipo tiene que estar entre 1 y 5");
									}
							    }
							    else
							    {
									SendInfoMessage(playerid, 0, "842", "Aquí no está el armario de equipos");
								}
						    }
						    else
						    {
								new MsgPersonalizado[MAX_TEXT_CHAT];
								format(MsgPersonalizado, sizeof(MsgPersonalizado), "Debe esperar %i minutos con %i segundos para volver a usar otro equipo", (PlayersData[playerid][TimeEquipo] - gettime()) / 60, ((PlayersData[playerid][TimeEquipo] - gettime()) % 60));
								SendInfoMessage(playerid, 0, "843", MsgPersonalizado);
							}
					    }
					    else
					    {
							if (PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] == 7)
							{
								SendInfoMessage(playerid, 0, "1555", "Usted no puede ponerse equipos todavía!");
							}
							else
							{
								SendInfoMessage(playerid, 0, "844", "Usted no forma parte de ADP");
							}
						}
				  	}
					else
					{
						SendInfoMessage(playerid, 0, "839", "Quizás quiso decir: /Poner {Candado [Razón], Cono, Pincho, Valla, Equipo [ID_EQUIPO], Bomba, Uniforme}");
					}
			  	}
				// COMANDO: /Callsign [Razón]
				else if (strfind(cmdtext, "/Callsign ", true) == 0)
				{
				    if (PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] <= 4 ||
						 PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] <= 5 ||
						 PlayersData[playerid][Admin] >= 8 && PlayersDataOnline[playerid][AdminOn])
					{
						if (PlayersDataOnline[playerid][InCarId] && PlayersDataOnline[playerid][InCarId] > MAX_CAR_DUENO && PlayersDataOnline[playerid][InCarId] <= MAX_CAR_FACCION && (DataCars[PlayersDataOnline[playerid][InCarId]][Time] == SAPD && PlayersData[playerid][Faccion] == SAPD || DataCars[PlayersDataOnline[playerid][InCarId]][Time] == SAPD && PlayersData[playerid][Faccion] == SAPD))
						{
							new MyVehicleID = GetPlayerVehicleID(playerid);
							if(!VehiculoIdentidad[MyVehicleID])
							{
								if (strlen(cmdtext[10]) > 3 && strlen(cmdtext[10]) <= 32)
								{
									if (IsValidStringServer(playerid, cmdtext[10]))
									{

										new IdentidadCoche[33];
										format(IdentidadCoche, sizeof(IdentidadCoche), "%s", cmdtext[10]);
										TextoCallsign[MyVehicleID] = Create3DTextLabel(IdentidadCoche, 0xFFFFFFFF, 0.0, 0.0, 0.0, 50.0, 0, 1);
										Attach3DTextLabelToVehicle(TextoCallsign[MyVehicleID], MyVehicleID, -0.7, -1.9, -0.3);
										VehiculoIdentidad[MyVehicleID] = true;

									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "943", "La división de la patrulla debe ser mayor de 3 caracteres y menor de 30");
								}
							}
							else
							{
								Delete3DTextLabel(TextoCallsign[MyVehicleID]);
								VehiculoIdentidad[MyVehicleID] = false;
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1556", "Suba a un vehiculo de su cuerpo policíal como conductor y luego use /Callsign [IDENTIFICACIÓN]!");
						}
				    }
				    else
				    {
						SendInfoMessage(playerid, 0, "878", "Usted no es SAPD ni SAPD o no tiene el rango necesario por lo cual no puede poner identificacion a patrullas!");
				    }
				}
				// COMANDO: /Mir
				else if (strcmp("/Mir", cmdtext, true, 4) == 0 && strlen(cmdtext) == 4)
				{
				    if (PlayersData[playerid][Faccion] == SAPD  || PlayersData[playerid][Faccion] == SAPD  || PlayersData[playerid][Admin] >= 8 && PlayersDataOnline[playerid][AdminOn])
					{
						new String[145];
                        format(String, sizeof(String), "%s dice: Tiene el derecho a guardar silencio. Cualquier cosa que diga puede y será usada en su contra en un tribunal de justicia.", PlayersDataOnline[playerid][NameOnlineFix]);
                        ProxDetector(AccionesRadios[0], playerid, String, SendChatStreamColors[0], SendChatStreamColors[0], SendChatStreamColors[0], SendChatStreamColors[0], SendChatStreamColors[0]);

						format(String, sizeof(String), "%s dice: Tiene el derecho de hablar con un abogado y que un abogado esté presente durante cualquier interrogatorio.", PlayersDataOnline[playerid][NameOnlineFix]);
                        ProxDetector(AccionesRadios[0], playerid, String, SendChatStreamColors[0], SendChatStreamColors[0], SendChatStreamColors[0], SendChatStreamColors[0], SendChatStreamColors[0]);

						format(String, sizeof(String), "%s dice: Si no puede pagar un abogado, se le asignará uno pagado por el gobierno. ¿Le han quedado claro los derechos mencionados?", PlayersDataOnline[playerid][NameOnlineFix]);
                        ProxDetector(AccionesRadios[0], playerid, String, SendChatStreamColors[0], SendChatStreamColors[0], SendChatStreamColors[0], SendChatStreamColors[0], SendChatStreamColors[0]);
     				}
				    else
				    {
						SendInfoMessage(playerid, 0, "878", "Usted no es SAPD ni SAPD o no tiene la facultad para leerle los derechos a alguien!");
				    }
				}
				// COMANDO: /Debilitar Incendio
			  	else if (strcmp("/Debilitar Incendio", cmdtext, true, 19) == 0 && strlen(cmdtext) == 19)
				{
					if (PlayersData[playerid][Faccion] == LSMD && PlayersData[playerid][Rango] <= 2 ||
						 PlayersData[playerid][Faccion] == LSMD && PlayersData[playerid][Rango] == 5 ||
						 PlayersData[playerid][Faccion] == LSMD && PlayersData[playerid][Rango] <= 2 ||
						 PlayersData[playerid][Faccion] == LSMD && PlayersData[playerid][Rango] == 5						)
				    {
				        new FireID = IsPlayerNearFire(playerid);
				        if (FireID != -1)
				        {
					        if (IntentarAccion(playerid, "debilitar el incendio", random(5)))
					        {
                                DestroyParticleFire(FireID);
                                GivePlayerMoneyEx(playerid, 25);
							}
						}
				    }
			        else
			        {
						SendInfoMessage(playerid, 0, "1281", "Usted no es bombero!");
					}
			    }
				// COMANDO: /Examinar Enfermedad [ID]
				else if (strfind(cmdtext, "/Examinar Enfermedad ", true) == 0)
				{
					if ((PlayersData[playerid][Faccion] == LSMD || PlayersData[playerid][Faccion] == LSMD) && PlayersData[playerid][Rango] <= 3)
				    {
					    if (PlayersData[playerid][Faccion] == LSMD && (IsPlayerInRangeOfPoint(playerid, 10.0, 2800.7007,2518.0408,10.8770) ||
																    	IsPlayerInRangeOfPoint(playerid, 10.0, 2794.0745,2509.6274,17.6810)) ||
							 PlayersData[playerid][Faccion] == LSMD && (IsPlayerInRangeOfPoint(playerid, 10.0, 303.2898,1904.9742,17.7344) ||
																    	IsPlayerInRangeOfPoint(playerid, 10.0, 293.0114,1874.8575,17.6406))
																		)
					    {
	   				        new PlayerIDEnfermo = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
						    if (IsPlayerNear(playerid, PlayerIDEnfermo,
								 "1515",
								 "1516",
								 "1517",
								 "El jugador que le deseas examinar no se encuentra conectado",
								 "El jugador que le deseas examinar no se ha logueado",
								 "El jugador que le deseas examinar no se encuentra cerca de tí"))
						    {
						        new MsgCurarIntentar[MAX_TEXT_CHAT];
						        format(MsgCurarIntentar, sizeof(MsgCurarIntentar), "examinar a %s", PlayersDataOnline[PlayerIDEnfermo][NameOnlineFix]);
	    						if (IntentarAccion(playerid, MsgCurarIntentar, random(5)))
	    						{
									if (PlayersData[PlayerIDEnfermo][Enfermedad] != 0)
									{
								        format(MsgCurarIntentar, sizeof(MsgCurarIntentar), "Se le ha detectado %s a %s con el examen", PlayersDataOnline[PlayerIDEnfermo][NameOnlineFix], EnfermedadName[PlayersData[PlayerIDEnfermo][Enfermedad]]);
									}
									else
									{
								        format(MsgCurarIntentar, sizeof(MsgCurarIntentar), "No se le ha detectado ninguna enfermedad a %s", PlayersDataOnline[PlayerIDEnfermo][NameOnlineFix]);
									}
									SendInfoMessage(playerid, 3, "0", MsgCurarIntentar);
	 							}
						    }
					    }
						else
						{
							SendInfoMessage(playerid, 0, "1518", "No te encuentras en el salón de operaciones ni en la consulta");
						}
			        }
			        else
			        {
						SendInfoMessage(playerid, 0, "1519", "Usted no es médico");
					}
				}
				// COMANDO: /Curar Enfermedad [ID]
				else if (strfind(cmdtext, "/Curar Enfermedad ", true) == 0)
				{
					if ((PlayersData[playerid][Faccion] == LSMD || PlayersData[playerid][Faccion] == LSMD) && PlayersData[playerid][Rango] <= 3)
				    {
					    if (PlayersData[playerid][Faccion] == LSMD && (IsPlayerInRangeOfPoint(playerid, 10.0, 2800.7007,2518.0408,10.8770) ||
																    	IsPlayerInRangeOfPoint(playerid, 10.0, 2794.0745,2509.6274,17.6810)) ||
							 PlayersData[playerid][Faccion] == LSMD && (IsPlayerInRangeOfPoint(playerid, 10.0, 303.2898,1904.9742,17.7344) ||
																    	IsPlayerInRangeOfPoint(playerid, 10.0, 293.0114,1874.8575,17.6406))
																		)
					    {
	   				        new PlayerIDEnfermo = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
						    if (IsPlayerNear(playerid, PlayerIDEnfermo,
								 "1416",
								 "1415",
								 "1414",
								 "El jugador que le deseas curar una enfermedad no se encuentra conectado",
								 "El jugador que le deseas curar una enfermedad no se ha logueado",
								 "El jugador que le deseas curar una enfermedad no se encuentra cerca de tí"))
						    {
								if (PlayersData[PlayerIDEnfermo][Enfermedad])
								{
							        new MsgCurarIntentar[MAX_TEXT_CHAT];
							        format(MsgCurarIntentar, sizeof(MsgCurarIntentar), "curarle la enfermedad a %s", PlayersDataOnline[PlayerIDEnfermo][NameOnlineFix]);
		    						if (IntentarAccion(playerid, MsgCurarIntentar, random(5)))
		    						{

										SetPlayerHealthEx(PlayerIDEnfermo, 70);

										GivePlayerMoneyEx(playerid, 50);

										ChangeEnfermedad(PlayerIDEnfermo, 0);

										FaccionData[PlayersData[playerid][Faccion]][Deposito] = FaccionData[PlayersData[playerid][Faccion]][Deposito] + 50;
		 							}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1412", "Este jugador no necesitan que lo curen");
								}
						    }
					    }
						else
						{
							SendInfoMessage(playerid, 0, "1413", "No te encuentras en el salón de operaciones ni en la consulta");
						}
			        }
			        else
			        {
						SendInfoMessage(playerid, 0, "1417", "Usted no es médico");
					}
				}
				// COMANDO: /Curar
				else if (strfind(cmdtext, "/Curar ", true) == 0)
				{
					if (PlayersData[playerid][Faccion] == LSMD || PlayersData[playerid][Faccion] == LSMD || PlayersData[playerid][Admin] >= 7 && PlayersDataOnline[playerid][AdminOn])
				    {
					    if (IsPlayerNear(playerid, strval(cmdtext[7]),
							 "414",
							 "415",
							 "416",
							 "El jugador que le deseas curar no se encuentra conectado",
							 "El jugador que le deseas curar no se ha logueado",
							 "El jugador que le deseas curar no se encuentra cerca de tí"))
					    {
							new Float:Vida1;
							GetPlayerHealth(strval(cmdtext[7]), Vida1);
							if (Vida1 <= VIDA_CRACK || PlayersData[strval(cmdtext[7])][Cansansio] <= 1)
							{
								ApplyPlayerAnimCustom(playerid,
								"MEDIC",
								MEDIC_ANIMATIONS[0], false);
								ApplyPlayerAnimCustom(playerid,
								"MEDIC",
								MEDIC_ANIMATIONS[0], false);

						        new MsgCurarIntentar[MAX_TEXT_CHAT];
						        format(MsgCurarIntentar, sizeof(MsgCurarIntentar), "reanimar a %s", PlayersDataOnline[strval(cmdtext[7])][NameOnlineFix]);
	    						if (IntentarAccion(playerid, MsgCurarIntentar, random(3)))
	    						{
									if (PlayersData[strval(cmdtext[7])][Cansansio] == 1)
									{
										TextDrawHideForPlayer(strval(cmdtext[7]), BarsCansansio[PlayersData[strval(cmdtext[7])][Cansansio]]);
										PlayersData[strval(cmdtext[7])][Cansansio] = 5;
										ShowPlayerTextDrawCansansio(strval(cmdtext[7]));
									}

									SetPlayerHealthEx(strval(cmdtext[7]), 70);

									GivePlayerMoneyEx(playerid, 50);

									FaccionData[PlayersData[playerid][Faccion]][Deposito] = FaccionData[PlayersData[playerid][Faccion]][Deposito] + 10;

									ApplyAnimation(strval(cmdtext[7]),"PED",PED_ANIMATIONS[ModeWalkID[PlayersData[playerid][MyStyleWalk]]], 4.0, 0, 1, 1, 0, 1, 1);
	 							}
							}
							else
							{
								SendInfoMessage(playerid, 0, "417", "Este jugador no necesitan que lo curen");
							}
					    }
			        }
			        else
			        {
						SendInfoMessage(playerid, 0, "418", "Usted no es médico");
					}
				}
				/*
				// COMANDO: /tomarcuerpo
				else if (strfind(cmdtext, "/tomarcuerpo ", true) == 0)
				{
					if (PlayersData[playerid][Faccion] == LSMD || PlayersData[playerid][Faccion] == LSMD || PlayersData[playerid][Admin] >= 7 && PlayersDataOnline[playerid][AdminOn])
				    {
						if(PlayersData[playerid][CuerpoEnmanos] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "No puedes tener otra bolsa en la mano.");
					    if(IsPlayerInRangeOfPoint(playerid, 2.0, Deadx[playerid], Deady[playerid], Deadz[playerid]))
					    {
							new id = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
							if(Actors[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "* no tienes ningún cadaver con esa id.");
							DestroyActor(Actors[id]);
							PlayersData[playerid][CuerpoEnmanos] = 1;
							Actors[id] = -1;
							Delete3DTextLabel(Text3D:CamaraCadaver[id]);
							SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
							SetPlayerAttachedObject(playerid, 5, 1265,  1, 0.217000, 0.339000, -0.054999, 0.000000,  83.600128, 0.000000,0.573999,0.474999,0.585000); //- Bolsa de basura
							return 1;
						}
						else
						{
							SendInfoMessage(playerid, 0, "417", "No te encuentras frente a un cuerpo");return 1;
						}
			        }
			        else
			        {
						SendInfoMessage(playerid, 0, "418", "Usted no es médico");return 1;
					}
				}
				// COMANDO: /dejarcuerpo
				else if (strcmp("/dejarcuerpo", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
				{
					if (PlayersData[playerid][Faccion] == LSMD || PlayersData[playerid][Faccion] == LSMD || PlayersData[playerid][Admin] >= 7 && PlayersDataOnline[playerid][AdminOn])
				    {
							// if(CantCuerpoRecolectada[playerid] <= 0){CantCuerpoRecolectada[playerid] = 0;}
							if(PlayersData[playerid][CuerpoEnmanos] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "No tienes ninguna bolsa en la mano.");
					        if(PlayersData[playerid][Cuerpototales] >= 2)
							{
								SendInfoMessage(playerid, 0, "417", "Tu no puedes guardar mas cuerpo dentro de la ambulancia");
								SetPlayerCheckpoint(playerid, 1175.7966, -1308.5237, 13.7718, 2);
								SendClientMessage(CallCNN, COLOR_COLGAR_DESCOLGAR, "Debes dirigirte a la central para dejar los cuerpos (coloca /descacuerpo en el lugar).");
								return 1;
							}
							new car, Float:distancia = 6.0, Float:vX, Float:vY, Float:vZ;
							for(new x=0; x <= MAX_VEHICLES; x++)
							{
								 GetVehiclePos(x, vX, vY, vZ);
								 if(_enPos(playerid, 6.0, vX, vY, vZ))
								 {
								  if(GetPlayerDistanceFromPoint(playerid, vX, vY, vZ) <= distancia)distancia = GetPlayerDistanceFromPoint(playerid, vX, vY, vZ), car = x;
								 }
							}
							if(car == 0)
							{
								SendClientMessage(playerid, COLOR_GRAD1, "Debes estar cerca de la ambulancia para usar este comando.");
								return 1;
							}
							if(Recolector_Veh(car))
							{
								PlayersData[playerid][CuerpoEnmanos] = 0;
								PlayersData[playerid][CuerpoEnambulancia] += 1;
								PlayersData[playerid][Cuerpototales] = 1;
								SendInfoMessage(playerid, 1, "El cuerpo se guardo en la ambulancia", "»");
								GivePlayerMoneyEx(playerid, 200);
								SendInfoMessage(playerid, 1, "Haz recibido 200 dolares por entregar el cuerpo", "»");
								SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
								TogglePlayerControllable(playerid, 1);
								RemovePlayerAttachedObject(playerid, 5);
								return 1;
								//AccionesRol(playerid, 0, "introduce la bolsa de basura dentro del camión de recolección.");
							}
							else
							{
								SendInfoMessage(playerid, 0, "417", "No te encuentras frente a una ambulancia");return 1;
							}
			        }
			        else
			        {
						SendInfoMessage(playerid, 0, "418", "Usted no es médico");return 1;
					}
				}
				// COMANDO: /descambulancia
				else if (strfind(cmdtext, "/descambulancia", true) == 0)
				{
					if (PlayersData[playerid][Faccion] == LSMD || PlayersData[playerid][Faccion] == LSMD || PlayersData[playerid][Admin] >= 7 && PlayersDataOnline[playerid][AdminOn])
				    {
						if(!IsPlayerInAnyVehicle(playerid))	{SendClientMessage(playerid, -1, "* Debés estar en un vehículo.");return 1;}
						if(!IsPlayerInRangeOfPoint(playerid, 2.2, 1175.7966, -1308.5237, 13.7718)){SendInfoMessage(playerid, 0, "418", "No esta en el lugar adecuado");return 1;}
						if(PlayersData[playerid][Cuerpototales] == 1)
						{


							new Mensaje_Pagar[128];
							new tpagar = 500 * PlayersData[playerid][CuerpoEnambulancia];
							// FORMATEO DEL MENSAJE MENSAJES
                            format(Mensaje_Pagar, sizeof(Mensaje_Pagar), "%s Has recibido $%i del hospital por esta labor.",PlayersDataOnline[playerid][NameOnline], tpagar);

							// ENVIO DEL MENSAJE
							GivePlayerMoneyEx(playerid, tpagar);
							SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, Mensaje_Pagar);
							PlayersData[playerid][CuerpoEnmanos] = 0;
							PlayersData[playerid][Cuerpototales] = 0;
							PlayersData[playerid][CuerpoEnambulancia] = 0;
							SendInfoMessage(playerid, 1, "Ambulancia decargada..", "»");return 1;
					    }
						else
						{
							SendInfoMessage(playerid, 0, "417", "No tienes cuerpos guardados en la ambulancia"); return 1;
						}
			        }
			        else
			        {
						SendInfoMessage(playerid, 0, "418", "Usted no es médico");return 1;
					}
				}
				*/
			    // COMANDO: /Bailar [ID]
	  			else if (strfind(cmdtext, "/Bailar ", true) == 0)
			    {
				    new IDDance[3];
					strmid(IDDance, cmdtext, 8, strlen(cmdtext), sizeof(IDDance));
					if (strval(IDDance) >= 1 && strval(IDDance) <=4)
					{
						SetPlayerSpecialAction(playerid, strval(IDDance) + 4);
						PlayersDataOnline[playerid][InAnim] = true;
					}
					else
					{
						SendInfoMessage(playerid, 0, "363", "El ID a bailar tiene que estar comprendida entre 1 y 4.");
					}
			    }
			    /*// /Salir
			  	else if (strcmp("/Salir", cmdtext, true, 6) == 0 && strlen(cmdtext) == 6)
	  			{
					if (IsPlayerInAnyVehicle(playerid))
					{
						if (GetPlayerVehicleSeat(playerid) == 0)
						{
							RemovePlayerFromVehicle(playerid);
						}
						else
						{
							SendInfoMessage(playerid, 0, "520", "Tiene que estar en el puesto del conductor para utilizar /Salir");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "521", "No se encuentra en ningún vehículo");
					}
				}*/
			    // COMANDO: /Desconectar
			  	else if (strcmp("/Desconectar", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
	  			{
				    if (PlayersData[playerid][Faccion] == CNN && PlayersData[playerid][Rango] <= 5)
			        {

						if (CallCNN != -1)
					    {
							PayCall(CallCNN);
			    			SendClientMessageToAll(0x0FFF00FF, "* CNN: Conexión telefónica finalizada.");
							Acciones_ROL(CallCNN, ACCION_ME, "guarda su móvil");
							SendClientMessage(CallCNN, COLOR_COLGAR_DESCOLGAR, " Han colgado!");
							SetPlayerColgar(CallCNN);
			                PlayersDataOnline[CallCNN][InCall] = -1;
			    			CallCNN = -1;
					    }
					    else
					    {
							SendInfoMessage(playerid, 0, "911", "No hay nadie en la línea de CNN");
						}
				    }
				    else
				    {
						SendInfoMessage(playerid, 0, "912", "Tú no eres reportero!");
					}
	  			}
				// COMANDO: /Conectar [Número]
				else if (strfind(cmdtext, "/Conectar ", true) == 0)
				{
				    if (PlayersData[playerid][Faccion] == CNN && PlayersData[playerid][Rango] <= 5)
				    {
						if (CallCNN == -1)
					    {
							new numberphoneCnn = strval(cmdtext[10]);
							new NotFoundNumber = true;
				            for (new i = 0; i < MAX_PLAYERS; i++)
				            {
								if (IsPlayerConnected(i) && PlayersDataOnline[i][State] == 3 && PlayersData[i][Phone] == numberphoneCnn && PlayersDataOnline[i][PhoneOnline])
								{
									NotFoundNumber = false;
									if (PlayersDataOnline[i][InCall] == 888)
									{
									    PlayersDataOnline[i][TimeCall] = gettime();
										SendClientMessageToAll(0x0FFF00FF, "* CNN: Conexión telefónica establecida.");
										CallCNN = i;
										SendClientMessage(CallCNN, COLOR_COLGAR_DESCOLGAR, " Han descolgado!");
									}
									else
									{
										SendInfoMessage(playerid, 0, "913", "El móvil que desea conectar no está en la lista de espera en línea!");
									}
								}
							}
							if (NotFoundNumber)
							{
								SendInfoMessage(playerid, 0, "914", "El móvil que desea conectar se encuentra apagado o no existe!");
							}
					    }
					    else
					    {
							SendInfoMessage(playerid, 0, "915", "Ya la línea de CNN está ocupada");
						}
				    }
				    else
				    {
						SendInfoMessage(playerid, 0, "916", "Tú no eres reportero!");
					}
				}
			    // COMANDO: /Llamar 888
			  	else if (strcmp("/Llamar 888", cmdtext, true, 11) == 0 && strlen(cmdtext) == 11)
	  			{
				    if (PlayersData[playerid][Phone] != 0)
				    {
		                if (PlayersDataOnline[playerid][PhoneOnline])
		                {
							if (!IsPlayerInCall(playerid) && IsReadyCallPublic(playerid))
							{
								if (PlayersData[playerid][Saldo] >= 1)
								{
								    if (CallCNN == -1)
								    {
										Acciones_ROL(playerid, ACCION_ME, "saca su móvil y marca unos números");
										SendClientMessage(playerid, COLOR_INFO_MOVIL, " El número 888 está dando timbre!");
										PlayersDataOnline[playerid][IsDescolgado] 	= true;
										PlayersDataOnline[playerid][InCall] = 888;
										SetPlayerDescolgar(playerid);
										SendMessageToCallCNN(playerid);
										PlayersDataOnline[playerid][ICall] = true;
									}
									else
									{
										SendInfoMessage(playerid, 0, "917", "El número al que llama se encuentra ocupado");
									}
								}
							    else
							    {
									SendInfoMessage(playerid, 0, "1019", "No tienes saldo para realizar una llamada!");
								}
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1506", "Tiene el móvil apagado, enciendalo si desea realizar una llamada!");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "918", "Tú no tienes móvil");
					}
				}
			    // COMANDO: /Llamar 912 - SAPD       	ID - 4
			  	else if (strcmp("/Llamar 912", cmdtext, true, 11) == 0 && strlen(cmdtext) == 11)
	  			{
				    if (PlayersData[playerid][Phone] != 0)
				    {
		                if (PlayersDataOnline[playerid][PhoneOnline])
		                {
							if (!IsPlayerInCall(playerid) && IsReadyCallPublic(playerid))
							{
								PlayersDataOnline[playerid][NumberCallPublic] = true;
								Acciones_ROL(playerid, ACCION_ME, "saca su móvil y marca unos números");
								ShowConnectedPolice(playerid);
								SetPlayerDescolgar(playerid);
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1507", "Tiene el móvil apagado, enciendalo si desea realizar una llamada!");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "869", "Tú no tienes móvil");
					}
				}
			    // COMANDO: /Llamar 911 - SAPD       	ID - 0
			  	else if (strcmp("/Llamar 911", cmdtext, true, 11) == 0 && strlen(cmdtext) == 11)
	  			{
				    if (PlayersData[playerid][Phone] != 0)
				    {
		                if (PlayersDataOnline[playerid][PhoneOnline])
		                {
							if (!IsPlayerInCall(playerid) && IsReadyCallPublic(playerid))
							{
								PlayersDataOnline[playerid][NumberCallPublic] = false;
								Acciones_ROL(playerid, ACCION_ME, "saca su móvil y marca unos números");
								ShowConnectedPolice(playerid);
								SetPlayerDescolgar(playerid);
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1508", "Tiene el móvil apagado, enciendalo si desea realizar una llamada!");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "771", "Tú no tienes móvil");
					}
				}
   			 // COMANDO: /Llamar 105 - LSMD
			  	else if (strcmp("/Llamar 105", cmdtext, true, 11) == 0 && strlen(cmdtext) == 11)
	  			{
				    if (PlayersData[playerid][Phone] != 0)
				    {
		                if (PlayersDataOnline[playerid][PhoneOnline])
		                {
							if (!IsPlayerInCall(playerid) && IsReadyCallPublic(playerid))
							{
                                PlayersDataOnline[playerid][SaveAfterAgenda][50] = false;
								Acciones_ROL(playerid, ACCION_ME, "saca su móvil y marca unos números");
								ShowConnectedSAMD(playerid);
								SetPlayerDescolgar(playerid);
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1509", "Tiene el móvil apagado, enciendelo si desea realizar una llamada!");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "770", "Tú no tienes móvil");
					}
				}
			 /*   // COMANDO: /Llamar 106 - LSMD
			  	else if (strcmp("/Llamar 106", cmdtext, true, 11) == 0 && strlen(cmdtext) == 11)
	  			{
				    if (PlayersData[playerid][Phone] != 0)
				    {
		                if (PlayersDataOnline[playerid][PhoneOnline])
		                {
							if (!IsPlayerInCall(playerid) && IsReadyCallPublic(playerid))
							{
                                PlayersDataOnline[playerid][SaveAfterAgenda][50] = true;
								Acciones_ROL(playerid, ACCION_ME, "saca su móvil y marca unos números");
								ShowConnectedSAMD(playerid);
								SetPlayerDescolgar(playerid);
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1515", "Tiene el móvil apagado, enciendelo si desea realizar una llamada!");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "1516", "Tú no tienes móvil");
					}
				}*/
// COMANDO: /Llamar 145 - Taxí      		ID - 0
			  	else if (strcmp("/Llamar 145", cmdtext, true, 11) == 0 && strlen(cmdtext) == 11)
	  			{
				    if (PlayersData[playerid][Phone] != 0)
				    {
		                if (PlayersDataOnline[playerid][PhoneOnline])
		                {
							if (IsFoundCall(PlayersData[playerid][Phone], 0) == -1)
							{
								if (!IsPlayerInCall(playerid) && IsReadyCallPublic(playerid))
								{
									new MsgLlamar[MAX_TEXT_CHAT];
									format(MsgLlamar, sizeof(MsgLlamar), "Un cliente ha llamado un taxí, Use (/Llamadas). Número: %i (%s).", PlayersData[playerid][Phone], Ciudades[GetMyNearCity(playerid)]);
									SendAlertCallRequest(TAXI, MsgLlamar);

									PlayersDataOnline[playerid][NumberCallPublic] = 0;
									AddCallPublics(playerid, PlayersData[playerid][Phone], 0);

									Acciones_ROL(playerid, ACCION_ME, "saca su móvil y marca unos números");
									SendInfoMessage(playerid, 2, "0", "Llamó a la estación de taxís, espere que venga un taxí y no se mueva del lugar");
									SetPlayerDescolgar(playerid);
									SetTimerEx("SetPlayerColgar", 5000, false, "d", playerid);
						        }
							}
							else
							{
								SendInfoMessage(playerid, 0, "1108", "Ya usted tiene regístrada una llamada en la central de taxís, espere que le contesten");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1510", "Tiene el móvil apagado, enciendelo si desea realizar una llamada!");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "769", "Tú no tienes móvil");
					}
				}
			    // COMANDO: /Llamar 555 - Mecánicos SF     ID - 1
			  	else if (strcmp("/Llamar 555", cmdtext, true, 11) == 0 && strlen(cmdtext) == 11)
	  			{
				    if (PlayersData[playerid][Phone] != 0)
				    {
		                if (PlayersDataOnline[playerid][PhoneOnline])
		                {
							if (IsFoundCall(PlayersData[playerid][Phone], 1) == -1)
							{
								if (!IsPlayerInCall(playerid) && IsReadyCallPublic(playerid))
								{
									new MsgLlamar[MAX_TEXT_CHAT];
									format(MsgLlamar, sizeof(MsgLlamar), "Han solicitado un mecánico, Use (/Llamadas). Número: %i (%s).", PlayersData[playerid][Phone], Ciudades[GetMyNearCity(playerid)]);
									SendAlertCallRequest(TALLER_LS, MsgLlamar);

									PlayersDataOnline[playerid][NumberCallPublic] = 1;
									AddCallPublics(playerid, PlayersData[playerid][Phone], 1);

									Acciones_ROL(playerid, ACCION_ME, "saca su móvil y marca unos números");
									SendInfoMessage(playerid, 2, "0", "Los mecánicos del taller en Los Santos vendrán atenderle lo más prontó posible, espere en esta posición");
									SetPlayerDescolgar(playerid);
									SetTimerEx("SetPlayerColgar", 5000, false, "d", playerid);
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "767", "Ya usted tiene regístrada una llamada en la central del taller en San Fierro, espere que le contesten");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1511", "Tiene el móvil apagado, enciendelo si desea realizar una llamada!");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "768", "Tú no tienes móvil");
					}
				}
			    // COMANDO: /Llamar 777 - Mecánicos LS       ID - 1
			  	else if (strcmp("/Llamar 777", cmdtext, true, 11) == 0 && strlen(cmdtext) == 11)
	  			{
				    if (PlayersData[playerid][Phone] != 0)
				    {
		                if (PlayersDataOnline[playerid][PhoneOnline])
		                {
							if (IsFoundCall(PlayersData[playerid][Phone], 2) == -1)
							{
								if (!IsPlayerInCall(playerid) && IsReadyCallPublic(playerid))
								{
									new MsgLlamar[MAX_TEXT_CHAT];
									format(MsgLlamar, sizeof(MsgLlamar), "Han solicitado un mecánico, Use (/Llamadas). Número: %i (%s).", PlayersData[playerid][Phone], Ciudades[GetMyNearCity(playerid)]);
									SendAlertCallRequest(TALLER_LS, MsgLlamar);

									PlayersDataOnline[playerid][NumberCallPublic] = 2;
									AddCallPublics(playerid, PlayersData[playerid][Phone], 2);

									Acciones_ROL(playerid, ACCION_ME, "saca su móvil y marca unos números");
									SendInfoMessage(playerid, 2, "0", "Los mecánicos del taller en Los Santos vendrán atenderle lo más prontó posible, espere en esta posición");
									SetPlayerDescolgar(playerid);
									SetTimerEx("SetPlayerColgar", 5000, false, "d", playerid);
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "1290", "Ya usted tiene regístrada una llamada en la central del taller en Los Santos, espere que le contesten");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1512", "Tiene el móvil apagado, enciendelo si desea realizar una llamada!");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "734", "Tú no tienes móvil");
					}
				}
			    // COMANDO: /Cámaras
			  	else if (strcmp("/Cámaras", cmdtext, true, 8) == 0 && strlen(cmdtext) == 8 ||
				  		 strcmp("/Camaras", cmdtext, true, 8) == 0 && strlen(cmdtext) == 8)
	  			{
					if (PlayersData[playerid][Faccion] == SAPD ||
						 PlayersData[playerid][Faccion] == SAPD)
				    {
						if (PlayersData[playerid][Faccion] == SAPD && IsPlayerInRangeOfPoint(playerid, 2.0, 2365.8909,1559.6465,27.9562) ||
							 PlayersData[playerid][Faccion] == SAPD && IsPlayerInRangeOfPoint(playerid, 2.0, 1961.4952,973.3851,21.8714))
						{
					     	PlayersDataOnline[playerid][InCamera] = true;
							ShowMenuForPlayer(CamerasM[0], playerid);
							PlayersDataOnline[playerid][InMenu] = GetPlayerMenu(playerid);

					        PlayersDataOnline[playerid][Spawn]      = false;
				            GetSpawnInfo(playerid);
							PlayersDataOnline[playerid][StateDeath] = true;
							TogglePlayerSpectating(playerid, 1);

							SetPlayerCameraPos(playerid, Cameras[0][PosXLook], Cameras[0][PosYLook], Cameras[0][PosZLook]);
							SetPlayerCameraLookAt(playerid, Cameras[0][PosXAt], Cameras[0][PosYAt], Cameras[0][PosZAt]);
						    SetPlayerInteriorEx(playerid, Cameras[0][Interior]);
					     	SetPlayerVirtualWorldEx(playerid, Cameras[0][World]);
						}
						else
						{
							SendInfoMessage(playerid, 0, "1089", "No se encuentra en el sistema de cámaras!");
						}
				    }
			        else
			        {
						SendInfoMessage(playerid, 0, "1088", "Usted no es SAPD ni SAPD!");
					}
			    }
			    // COMANDO: /Llamadas Bomberos
			  	else if (strcmp("/Llamadas Bomberos", cmdtext, true, 18) == 0 && strlen(cmdtext) == 18)
	  			{
					if (PlayersData[playerid][Faccion] == LSMD && PlayersData[playerid][Rango] <= 2 ||
                         PlayersData[playerid][Faccion] == LSMD && PlayersData[playerid][Rango] == 5 ||
						 PlayersData[playerid][Faccion] == LSMD && PlayersData[playerid][Rango] <= 2 ||
                         PlayersData[playerid][Faccion] == LSMD && PlayersData[playerid][Rango] == 5)

					{
						PlayersDataOnline[playerid][NumberCallPublic] = 0;
					    if (PlayersData[playerid][Faccion] == LSMD)
					    {
							PlayersDataOnline[playerid][SaveAfterAgenda][50] = false;
						}
						else
						{
							PlayersDataOnline[playerid][SaveAfterAgenda][50] = true;
						}
						ShowCallSAMD(playerid);
	  				}
	  				else
	  				{
						SendInfoMessage(playerid, 0, "1285", "Usted no es bombero!");
					}
	  			}
			    // COMANDO: /Llamadas General
			  	else if (strcmp("/Llamadas", cmdtext, true, 9) == 0 && strlen(cmdtext) == 9)
	  			{
					if (PlayersData[playerid][Faccion] == SAPD ||
						 PlayersData[playerid][Faccion] == SAPD)
				    {
				        if (PlayersData[playerid][Faccion] == SAPD)
				        {
							PlayersDataOnline[playerid][NumberCallPublic] = false;
						}
						else
						{
							PlayersDataOnline[playerid][NumberCallPublic] = true;
						}
						ShowCallPolice(playerid);
				    }
					else if (PlayersData[playerid][Faccion] == TAXI ||
						 	  PlayersData[playerid][Faccion] == TALLER_LS ||
						 	  PlayersData[playerid][Faccion] == TALLER_LS)
				    {
						if (PlayersData[playerid][Faccion] == TAXI)
						{
							PlayersDataOnline[playerid][NumberCallPublic] = 0;
						}
						else if (PlayersData[playerid][Faccion] == TALLER_LS)
						{
							PlayersDataOnline[playerid][NumberCallPublic] = 1;
						}
						else if (PlayersData[playerid][Faccion] == TALLER_LS)
						{
							PlayersDataOnline[playerid][NumberCallPublic] = 2;
						}
						ShowCallPublics(playerid);
				    }
					else if (PlayersData[playerid][Faccion] == LSMD || PlayersData[playerid][Faccion] == LSMD)
				    {
				        if (PlayersData[playerid][Faccion] == LSMD)
				        {
                                PlayersDataOnline[playerid][SaveAfterAgenda][50] = false;
				        }
				        else
				        {
                                PlayersDataOnline[playerid][SaveAfterAgenda][50] = true;
				        }
				        if (PlayersData[playerid][Rango] == 5)
				        {
							PlayersDataOnline[playerid][NumberCallPublic] = false;
				        }
				        else
				        {
							PlayersDataOnline[playerid][NumberCallPublic] = true;
						}
						ShowCallSAMD(playerid);
				    }
				    else
				    {
						SendInfoMessage(playerid, 0, "772", "Usted no es médico, bombero, policía, taxísta ni mecánico!");
					}
	  			}
				// COMANDO: /Dormir
			  	else if (strcmp("/Dormir", cmdtext, true, 7) == 0 && strlen(cmdtext) == 7)
	  			{
					if (PlayersData[playerid][IsPlayerInHouse] || PlayersDataOnline[playerid][IsPlayerInHotel])
					{
						if (PlayersData[playerid][Cansansio] < MAX_CANSANSIO)
						{
						    if (!PlayersDataOnline[playerid][InSleep])
						    {
								PlayersDataOnline[playerid][InSleep] = true;
								SetPlayerSleep(playerid);
								TogglePlayerControllableEx(playerid, false);
								ApplyPlayerAnimCustom(playerid,
								"PARACHUTE",
								PARA_ANIMATIONS[2], false);
							}
							else
						  	{
								SendInfoMessage(playerid, 0, "1121", "Ya usted está durmiendo, presione ENTER si desea terminar de dormir");
						   	}
						}
						else
						{
							SendInfoMessage(playerid, 0, "845", "No te encuentras lo suficietemente cansado como para dormir");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "846", "No se encuentra dentro de una casa");
					}
				}
				// COMANDO: /Timbre
			  	else if (strcmp("/Timbre", cmdtext, true, 7) == 0 && strlen(cmdtext) == 7)
	  			{
					if (PlayersDataOnline[playerid][InPickup] >= HouseData[1][PickupId] &&
					     PlayersDataOnline[playerid][InPickup] <= HouseData[MAX_HOUSE][PickupId])
					{
	                    if (gettime() - HouseData[PlayersDataOnline[playerid][MyPickupWorld]][RingHouseTime] >= 20)
	                    {
							for (new i = 0; i < MAX_PLAYERS; i++)
							{
							    if (i != playerid && IsPlayerConnected(i) && PlayersDataOnline[i][State] == 3 && PlayersData[i][IsPlayerInHouse] == PlayersDataOnline[playerid][MyPickupWorld])
							    {
							        SendClientMessage(i, COLOR_DE_WISPEO, "** TIMBRE: RING RING!!!");
							    }
						    }
					        Acciones_ROL(playerid, ACCION_ME, "tocó el timbre de la casa");
					        HouseData[PlayersDataOnline[playerid][MyPickupWorld]][RingHouseTime] = gettime();
						}
						else
						{
						    new MsgRingHouse[MAX_TEXT_CHAT];
						    format(MsgRingHouse, sizeof(MsgRingHouse), "El timbre de está casa ha sido tocado recientemente, tiene que esperar %i segundos para volver a usarlo", 20 - (gettime() - HouseData[PlayersDataOnline[playerid][MyPickupWorld]][RingHouseTime]));
						    SendInfoMessage(playerid, 0, "886", MsgRingHouse);
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "885", "No te encuentras en la puerta de ninguna casa");
					}
				}
				// COMANDO: /Online
			  	else if (strcmp("/Online DM", cmdtext, true, 10) == 0 && strlen(cmdtext) == 10)
	  			{
	  			    if (PlayersDataOnline[playerid][ModeDM])
	  			    {
						new MsgOnline[MAX_TEXT_CHAT];
						for (new i = 0; i < MAX_PLAYERS; i++)
						{
							if (IsPlayerConnected(i) && PlayersDataOnline[i][ModeDM] && PlayersDataOnline[i][State] == 3)
							{
								format(MsgOnline, sizeof(MsgOnline), "** {E6E6E6}%s [ID: %i] está en modo {00F50A}DeathMatch {E6E6E6}pertenece al equipo número [%i] Tiene {F50000}%i {E6E6E6}muertes!", PlayersDataOnline[i][NameOnlineFix], i,PlayersDataOnline[i][TeamDM] + 1,PlayersDataOnline[i][PointDm]);
								SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, MsgOnline);
							}
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "1117", "No te encuentas en modo DeathMatch!");
					}
	  			}
				// COMANDO: /Online
			  	else if (strcmp("/Online", cmdtext, true, 7) == 0 && strlen(cmdtext) == 7)
	  			{
	  			    if (PlayersData[playerid][Faccion] != CIVIL)
	  			    {
						new MsgOnline[MAX_TEXT_CHAT];
						for (new i = 0; i < MAX_PLAYERS; i++)
						{
							if (IsPlayerConnected(i) && PlayersData[i][Faccion] == PlayersData[playerid][Faccion] && PlayersDataOnline[i][State] == 3)
							{
								format(MsgOnline, sizeof(MsgOnline), "* %s %s Conectado! [ID: %i]", FaccionesRangos[PlayersData[i][Faccion]][PlayersData[i][Rango]], PlayersDataOnline[i][NameOnlineFix], i);
								SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, MsgOnline);
							}
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "952", "No tienes facción!");
					}
	  			}
				// COMANDO: /Caminar
			  	else if (strcmp("/Caminar", cmdtext, true, 8) == 0 && strlen(cmdtext) == 8)
	  			{
					ShowPlayerMenuSelectWalk(playerid);
	  			}
				// COMANDO: /Hablar
			  	else if (strcmp("/Hablar", cmdtext, true, 7) == 0 && strlen(cmdtext) == 7)
	  			{
					ShowPlayerMenuSelectTalk(playerid);
	  			}
				// COMANDO: /Acento
			  	else if (strcmp("/Acento", cmdtext, true, 7) == 0 && strlen(cmdtext) == 7)
	  			{
					if (PlayersData[playerid][HoursPlaying] >= 24 || PlayersData[playerid][Admin] >= 8 || PlayersData[playerid][VIP])
				    {
				        ShowAcentos(playerid);
					}
					else
					{
						SendInfoMessage(playerid, 0, "373", "Tienes que ser mayor a nivel 3 ó tener 24 horas de juego para cambiar tu acento");
						SendInfoMessage(playerid, 2, "0", "Si quieres realizar acciones sin restricciones conviértete en VIP. Usa /Ayuda VIP");
					}
	  			}
/*				// COMANDO: /Correr
			  	else if (strcmp("/Correr", cmdtext, true, 7) == 0 && strlen(cmdtext) == 7)
	  			{
					ShowPlayerMenuSelectSprint(playerid);
	  			}*/
	  			/*
			  	else if (strcmp("/GPS", cmdtext, true, 4) == 0 && strlen(cmdtext) == 4)
	  			{
	  			    if (PlayersData[playerid][Phone] != 0)
				    {
						ShowPlayerDialogEx(playerid, 171, DIALOG_STYLE_LIST, "GPS","Los Santos\nSan Fierro","Aceptar","Cancelar");
					}
                    else
					{
						SendInfoMessage(playerid, 0, "918", "Tú no tienes móvil y por tal motivo no puedes usar el GPS");
					}
	  			} */
				// COMANDO: /GPS
				else if (strcmp("/GPS", cmdtext, true, 4) == 0 && strlen(cmdtext) == 4)
				{
				    if (PlayersData[playerid][Phone] != 0)
				    {
				        Acciones_ROL(playerid, ACCION_ME, "saca su GPS");
				        ShowHomeGPS(playerid);
					}
					else
					{
						SendInfoMessage(playerid, 0, "893", "Tú no tienes GPS, compra un móvil para poder utilizar el GPS");
					}
				}
				// COMANDO: /Copiar dirección
				else if (strcmp("/Copiar Dirección", cmdtext, true, 17) == 0 && strlen(cmdtext) == 17 ||
						 strcmp("/Copiar Direccion", cmdtext, true, 17) == 0 && strlen(cmdtext) == 17)
				{
				    if (PlayersData[playerid][Phone] != 0)
				    {
						if (GetPlayerVirtualWorld(playerid) == WORLD_NORMAL)
      					{
							// CA - info casa
							if (PlayersDataOnline[playerid][InPickup] >= HouseData[1][PickupId] &&
						         PlayersDataOnline[playerid][InPickup] <= HouseData[MAX_HOUSE][PickupId])
					        {
				                Acciones_ROL(playerid, ACCION_ME, "saca su GPS y mira la dirección del lugar para copiarla");

				                new MsgInfoCasa[MAX_TEXT_CHAT];
				                format(MsgInfoCasa, MAX_TEXT_CHAT, "Dirección: RC-%i (Casa)",PlayersDataOnline[playerid][MyPickupWorld]);

				    			SendInfoMessage(playerid, 2, "0", MsgInfoCasa);

								new FormatID[12];
								format(FormatID, sizeof(FormatID), "CA-%i", PlayersDataOnline[playerid][MyPickupWorld]);

								format(PlayersDataOnline[playerid][SaveNameAdress], MAX_GPS_NAME, "%s", FormatID);
								ShowAgregarDireccion(playerid, 1);
					        }
							// NE - info negocio
							else if (PlayersDataOnline[playerid][InPickup] >= NegociosData[1][PickupOutId] &&
					             PlayersDataOnline[playerid][InPickup] <= NegociosData[MAX_BIZZ][PickupOutId])
					        {
				                Acciones_ROL(playerid, ACCION_ME, "saca su GPS y mira la dirección del lugar para copiarla");
				                new MsgInfoNegocio[MAX_TEXT_CHAT];
				                format(MsgInfoNegocio, MAX_TEXT_CHAT, "Dirección: NE-%i (Negocio)",PlayersDataOnline[playerid][MyPickupWorld]);

				    			//SendInfoMessage(playerid, 1, MsgInfoNegocio, "Negocio:");
	                            SendInfoMessage(playerid, 2, "0", MsgInfoNegocio);

	                            new FormatID[12];
								format(FormatID, sizeof(FormatID), "NE-%i", PlayersDataOnline[playerid][MyPickupWorld]);

								format(PlayersDataOnline[playerid][SaveNameAdress], MAX_GPS_NAME, "%s", FormatID);
								ShowAgregarDireccion(playerid, 1);
					        }

							// GC - info garage
							else if (PlayersDataOnline[playerid][InPickup] >= MIN_GARAGE_PICKUP &&
								 PlayersDataOnline[playerid][InPickup] <= MAX_GARAGE_PICKUP)
							{
								new GarageID, HouseID;

								HouseID = PlayersDataOnline[playerid][InPickupTele];
								GarageID = (PlayersData[playerid][IsPlayerInGarage] + 50);

	                            Acciones_ROL(playerid, ACCION_ME, "saca su GPS y mira la dirección del lugar para copiarla");
								new MsgChangeType[MAX_TEXT_CHAT];
								format(MsgChangeType, sizeof(MsgChangeType), "Dirección: GC-%i-%i (Garage de casa)",HouseID, GarageID);
								//SendInfoMessage(playerid, 1, MsgChangeType, "Garage de casa:");
								SendInfoMessage(playerid, 2, "0", MsgChangeType);

								new FormatID[12];
								format(FormatID, sizeof(FormatID), "GC-%i-%i", HouseID, GarageID);

								format(PlayersDataOnline[playerid][SaveNameAdress], MAX_GPS_NAME, "%s", FormatID);
								ShowAgregarDireccion(playerid, 1);
							}
							// TP - info puertaex
							else if (PlayersDataOnline[playerid][InPickup] >= Teles[0][PickupID] &&
		 							  PlayersDataOnline[playerid][InPickup] <= Teles[MAX_TELE][PickupID])
					        {
					            for(new i=0;i<=MAX_TELE;i++)
					            {
					                if (Teles[i][PickupID] == PlayersDataOnline[playerid][InPickup])
					                {
										new GarageID;

										GarageID = i;

                                        Acciones_ROL(playerid, ACCION_ME, "saca su GPS y mira la dirección del lugar para copiarla");
										new MsgChangeType[MAX_TEXT_CHAT];
										format(MsgChangeType, sizeof(MsgChangeType), "Dirección: TP-%i (Lugar)",GarageID);
										//SendInfoMessage(playerid, 1, MsgChangeType, "RT:");
                                        SendInfoMessage(playerid, 2, "0", MsgChangeType);

                                        new FormatID[12];
										format(FormatID, sizeof(FormatID), "RT-%i", GarageID);

										format(PlayersDataOnline[playerid][SaveNameAdress], MAX_GPS_NAME, "%s", FormatID);
										ShowAgregarDireccion(playerid, 1);

										break;
					                }
				                }
			                }
					        // F - info faccion
							else if (PlayersDataOnline[playerid][InPickup] >= FaccionData[GOBIERNO][PickupidOutF] &&
		   	  					 PlayersDataOnline[playerid][InPickup] <= FaccionData[MAX_FACCION][PickupidOutF])
			    	        {
							    //new MyNearFaccion = GetNearFaccion(playerid);
							    for(new i=GOBIERNO;i<=MAX_FACCION;i++)
								{
									if (FaccionData[i][PickupidOutF] == PlayersDataOnline[playerid][InPickup])
									{
										new FaccionID;
										FaccionID = i;

	                                    Acciones_ROL(playerid, ACCION_ME, "saca su GPS y mira la dirección del lugar para copiarla");
										new MsgChangeType[MAX_TEXT_CHAT];
										format(MsgChangeType, sizeof(MsgChangeType), "Dirección: F-%i (Facción)",FaccionID);
										//SendInfoMessage(playerid, 1, MsgChangeType, "Facción:");
										SendInfoMessage(playerid, 2, "0", MsgChangeType);

										new FormatID[12];
										format(FormatID, sizeof(FormatID), "RF-%i", FaccionID);

										format(PlayersDataOnline[playerid][SaveNameAdress], MAX_GPS_NAME, "%s", FormatID);
										ShowAgregarDireccion(playerid, 1);

										break;
									}
								}
							}
							// GP - info garageex
							else if (PlayersDataOnline[playerid][InPickup] >= GaragesEx[0][PickupIDTwoP] &&
									  PlayersDataOnline[playerid][InPickup] <= GaragesEx[MAX_GARAGES_EX][PickupIDTwoP])
					        {
								for (new i = 0; i <= MAX_GARAGES_EX; i++)
								{
									if (GaragesEx[i][PickupIDTwoP] == PlayersDataOnline[playerid][InPickup])
									{
										new GarageID = i;

										Acciones_ROL(playerid, ACCION_ME, "saca su GPS y mira la dirección del lugar para copiarla");
										new MsgChangeType[MAX_TEXT_CHAT];
										format(MsgChangeType, sizeof(MsgChangeType), "Dirección: GP-%i (Garage privado)",GarageID);
										//SendInfoMessage(playerid, 1, MsgChangeType, "Garage privado:");
										SendInfoMessage(playerid, 2, "0", MsgChangeType);

										new FormatID[12];
										format(FormatID, sizeof(FormatID), "GP-%i", GarageID);

										format(PlayersDataOnline[playerid][SaveNameAdress], MAX_GPS_NAME, "%s", FormatID);
										ShowAgregarDireccion(playerid, 1);
										break;
									}
								}
							}
							else
							{
								SendInfoMessage(playerid, 1, "No se logró localizar la dirección actual, intente en entradas de: Casas, Negocios, Garages y Lugares.", "GPS:");
							}
						}
						else
						{
							SendInfoMessage(playerid, 1, "No se logró localizar la dirección actual, intente en entradas de: Casas, Negocios, Garages y Lugares.", "GPS:");
						}

					}
					else
					{
						SendInfoMessage(playerid, 0, "893", "Tú no tienes GPS, compra un móvil para poder utilizar el GPS");
					}
				}
				// COMANDO: /Trabajar
			  	else if (strcmp("/Trabajar", cmdtext, true, 9) == 0 && strlen(cmdtext) == 9)
	  			{
	  			    new FoundJob;
		            for(new i=1;i<MAX_JOB;i++)
		            {
		                if (Jobs[i][pickupidGet] == PlayersDataOnline[playerid][InPickup])
		                {
		                    FoundJob = true;
				            if (PlayersData[playerid][Job] == NINGUNO || PlayersData[playerid][Job] == i || PlayersData[playerid][VIP])
				            {
				                if (PlayersData[playerid][Job] == i)
				                {
		                            PlayersData[playerid][Job] = NINGUNO;
		                            SendInfoMessage(playerid, 3, "0", "Has dejado el trabajo, ahora no desempeñarás ninguna labor.");
		                            PlayersDataOnline[playerid][JobBonus] = false;
				                }
				                else
				                {
				                    if (i == VENDEDOR_MOVIL && GetPlayerScore(playerid) <= 1)
				                    {
				       					SendInfoMessage(playerid, 0, "967", "Debes ser mayor de nivel 1 para ser vendedor de móviles.");
				       					return 1;
									}
									else if (i == VENDEDOR_MOVIL && PlayersData[playerid][Faccion] != CIVIL)
									{
				       					SendInfoMessage(playerid, 0, "1287", "Debes ser civil para poder trabajar como vendedor de teléfonos.");
				       					return 1;
									}
									else if (i == TRANSPORTISTA)
									{
									    //VACIO
									}
									else if (i == MERCADER)
									{
									    //VACIO
									}
									else if (i == CONDUCTOR)
									{
									    //VACIO
									}
									else if (i == MINERO)
									{
									    //VACIO
									}
									else if (i == RECOLECTOR)
									{
									    //VACIO
									}
									else if (i == FOTOGRAFO)
									{
									    //VACIO
									}
		                            PlayersData[playerid][Job] = i;
		                            new MsgJob[MAX_TEXT_CHAT];
		                            format(MsgJob, sizeof(MsgJob), "Ahora tienes un nuevo trabajo, serás: %s.", Jobs[i][NameJob]);
		                            SendInfoMessage(playerid, 3, "0", MsgJob);
	                            }
				            }
				            else
				            {
		       					SendInfoMessage(playerid, 0, "967", "Ya tienes un trabajo, debes dejarlo antes de tener otro.");
		       					SendInfoMessage(playerid, 0, "967", "Con VIP podrás cambiar de trabajo sin tener que ir a renunciar al anterior.");
							}
	      					break;
			            }
		            }
		            if (!FoundJob)
		            {
	 					SendInfoMessage(playerid, 0, "968", "No te encuetras en ningún trabajo!");
					}
				}
				// COMANDO: /Bar
			  	else if (strcmp("/Bar", cmdtext, true, 4) == 0 && strlen(cmdtext) == 4)
	  			{
					if (PlayersData[playerid][IsPlayerInBizz] && IsBizzBar(playerid, NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]))
					{
						if (IsPlayerInRangeOfPoint(playerid, 2.0, NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInX_PC], NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInY_PC], NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInZ_PC]))
						{
							ShowPlayerDialogEx(playerid,29,DIALOG_STYLE_LIST,"{00A5FF}Bar", "{E6E6E6}Agua          {00F50A}$10\r\n{E6E6E6}Refresco     {00F50A}$20\r\n{E6E6E6}Cerveza      {00F50A}$30\r\n{E6E6E6}Vodka        {00F50A}$40", "Comprar", "Salir");
						}
						else
						{
							SendInfoMessage(playerid, 0, "998", "No te encuentras cerca de la barra");
						}
					}
					else if (IsBizzBarra(playerid))
					{
						ShowPlayerDialogEx(playerid,76,DIALOG_STYLE_LIST,"{00A5FF}Barra", "{E6E6E6}Agua          {00F50A}$5\r\n{E6E6E6}Refresco     {00F50A}$10\r\n{E6E6E6}Cerveza      {00F50A}$15\r\n{E6E6E6}Vodka        {00F50A}$20", "Comprar", "Salir");
					}
					else
					{
						SendInfoMessage(playerid, 0, "999", "No estás en un bar");
					}
				}
				// COMANDO: /Tren [Anuncio]
				else if (strfind(cmdtext, "/Tren ", true) == 0)
		    	{
		    	    if (PlayersData[playerid][Faccion] == TAXI && PlayersData[playerid][Rango] == 5 ||
						 PlayersData[playerid][Faccion] == TAXI && PlayersData[playerid][Rango] <= 2)
		    	    {
						if (IsPlayerInAnyVehicle(playerid) && GetVehicleModel(GetPlayerVehicleID(playerid)) == 538)
						{
			    	        if (strlen(cmdtext) > 7)
			    	        {
				    	        if (TimeTren <= gettime())
				    	        {
				    	            TimeTren = gettime() + 180;
	       		    	            new MensajeAD[MAX_TEXT_CHAT];
				    	            new MensajeADA[MAX_TEXT_CHAT];
									format(MensajeADA, sizeof(MensajeADA), "* Anuncio Tren: %s. ([%i]))", cmdtext[6], playerid);
									format(MensajeAD, sizeof(MensajeAD), "* Anuncio Tren: %s.", cmdtext[6]);

									for (new i = 0; i < MAX_PLAYERS; i++)
									{
										if (IsPlayerConnected(i) && PlayersDataOnline[i][State] == 3)
										{
										    if (PlayersData[i][Admin] >= 1)
										    {
										        SendClientMessage(i, 0x0FFF00FF, MensajeADA);
										    }
										    else
										    {
										        SendClientMessage(i, 0x0FFF00FF, MensajeAD);
											}
										}
									}
								}
								else
								{
									new MsgPersonalizado[MAX_TEXT_CHAT];
									format(MsgPersonalizado, sizeof(MsgPersonalizado), "Debe esperar %i minutos con %i segundos para volver a poner un anuncio del Tren", (TimeTren - gettime()) / 60, ((TimeTren - gettime()) % 60));
									SendInfoMessage(playerid, 0, "1165", MsgPersonalizado);
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "1166", "Debe colocar un texto para el anuncio del tren");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1168", "Sólo puede poner anuncios desde el tren!");
						}
		    	    }
		    	    else
		    	    {
						SendInfoMessage(playerid, 0, "1167", "Usted no es Trensísta!");
					}
	    	    }
				// COMANDO: /Informar [Informe]
				else if (strfind(cmdtext, "/Informar ", true) == 0)
		    	{
		    	    if (PlayersData[playerid][Faccion] == TAXI && PlayersData[playerid][Rango] == 5 ||
						 PlayersData[playerid][Faccion] == TAXI && PlayersData[playerid][Rango] <= 2)
		    	    {
						if (IsPlayerInAnyVehicle(playerid) && GetVehicleModel(GetPlayerVehicleID(playerid)) == 538)
						{
			    	        if (strlen(cmdtext) > 11)
			    	        {
			    	            new MensajeADA[MAX_TEXT_CHAT];
			    	            new Float:PlayerPos[3]; GetPlayerPos(playerid, PlayerPos[0], PlayerPos[1], PlayerPos[2]);
								format(MensajeADA, sizeof(MensajeADA), "* %s [Audio del Tren]: %s", PlayersDataOnline[playerid][NameOnlineFix], cmdtext[10]);

								for (new i = 0; i < MAX_PLAYERS; i++)
								{
									if (IsPlayerConnected(i) && PlayersDataOnline[i][State] == 3)
									{
									    if (IsPlayerInRangeOfPoint(i, 70.0,
											 PlayerPos[0], PlayerPos[1], PlayerPos[2]) ||
											 PlayersData[i][IsPlayerInVehInt] && coches_Todos_Type[GetVehicleModel(PlayersData[i][IsPlayerInVehInt]) - 400] == TREN)
										{
								        	SendClientMessage(i, 0xFFFF00FF, MensajeADA);
							        	}
									}
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "1293", "Debe colocar un texto de información para los pasajeros del tren");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1292", "Sólo puede informar desde el tren!");
						}
		    	    }
		    	    else
		    	    {
						SendInfoMessage(playerid, 0, "1291", "Usted no es Trensísta!");
					}
	    	    }
					// COMANDO: /Copyright
			  	else if (strcmp("/Creditos", cmdtext, true, 9) == 0 && strlen(cmdtext) == 9)
		    	{
		    	    //
					new MsgDialogCopyright[512];
		    	    format(MsgDialogCopyright, sizeof(MsgDialogCopyright),
					"{00F50A}Específicaciones:\n\n{00A5FF}Versión: {F0F0F0}%s\n",
					GAMEMODE_VERSION);
					strcat(MsgDialogCopyright, "{00A5FF}Nuevos Sistemas y Edición:{F0F0F0} PlayerLifeRP y Colaboradores\n\n");
                    strcat(MsgDialogCopyright, "{00A5FF}Mapeos y Diseño:{F0F0F0} PlayerLiferp y Colaboradores\n\n");
//                  strcat(MsgDialogCopyright, "{00A5FF}Mapeos(nuevos):{F0F0F0} Lucas Borda, Unu Alex\n\n");
		    	    strcat(MsgDialogCopyright, "{F5FF00}Agradecimientos: \n{F0F0F0}San Andrea Multiplayer (SA-MP)\n{F0F0F0}Rockstar Games\n{F0F0F0}PlayerLiferp\n{F0F0F0}El equipo de PlayerLiferp RolePlay");
		    	    strcat(MsgDialogCopyright, "{F5FF00}Amigos, gracias por formar parte del equipo y por ser siempre de apoyo, la amistad permanece.\n\n");
		    	    strcat(MsgDialogCopyright, "\n\n\n\n{F5FF00}Copyright © | 2022 |  RolePlay | Todos los derechos reservados.");
					ShowPlayerDialogEx(playerid, 999, DIALOG_STYLE_MSGBOX, "{00A5FF}Copyright © | RP | PL:RP ", MsgDialogCopyright, "Aceptar", "");
				}
				// COMANDO: /Primeros Pasos
				else if (strcmp("/Primeros Pasos", cmdtext, true, 15) == 0 && strlen(cmdtext) == 15)
		    	{
		    	    //
					new MsgDialogFirstSteps[1250];
		    	    format(MsgDialogFirstSteps, sizeof(MsgDialogFirstSteps),
					"{00F50A}Hola %s, bienvenido.\n\n{00A5FF}Ayuda: {F0F0F0}Te ayudaremos con ciertas recomendaciones para que comiences a darle vida a tu personaje.\n",
					PlayersDataOnline[playerid][NameOnlineFix]);
					strcat(MsgDialogFirstSteps, "{00A5FF}Ropa:{F0F0F0} Dirigete a un ProLaps, Victim, SubUrban, Zip, Didier Sachs o Binco para adquirir nueva ropa.\n");
                    strcat(MsgDialogFirstSteps, "{00A5FF}24/7:{F0F0F0} Ahora es turno de comprar un móvil, una agenda y una bolsa, en un 24/7 (Símbolo de helado).\n");
                    strcat(MsgDialogFirstSteps, "{00A5FF}Banco:{F0F0F0} Ahora es turno de ir al banco y hacer las operaciones necesarias.\n");
					strcat(MsgDialogFirstSteps, "{00A5FF}Trabajo:{F0F0F0} Bien, es hora de conseguir tu primer trabajo, usá /Trabajos.\n");
					strcat(MsgDialogFirstSteps, "{00A5FF}Licencias:{F0F0F0} Te recomendamos conseguir con un licenciado, las licencias que creas necesarias.\n");
					strcat(MsgDialogFirstSteps, "{00A5FF}Vehículos:{F0F0F0} Finalmente te invitamos a que si ya tienes más de $15,000, contactes con un NFS y compres tu primer vehículo.\n\n");
		    	    strcat(MsgDialogFirstSteps, "{F5FF00}Seguir creciendo:{F0F0F0} \nJusto ahora que ya juntaste dinero, y estás estableciendo tu rol, te invitamos a que te puedas integrar a una facción.\n\n");
		    	    strcat(MsgDialogFirstSteps, "{00A5FF}Comandos de utilidad:{F0F0F0} /Ayuda | /Ayuda Básicos | /Duda | /Trabajos | /Ayuda Trabajo.");
		    	    strcat(MsgDialogFirstSteps, "\n\n{F5FF00}Copyright © | 2021/2022 | PlayerLifeRP RolePlay | Todos los derechos reservados.");
					ShowPlayerDialogEx(playerid, 998, DIALOG_STYLE_MSGBOX, "{00A5FF}Primeros Pasos | PlayerLifeRP RolePlay", MsgDialogFirstSteps, "Aceptar", "");
				}
				// COMANDO: /Grúa
			  	else if (strcmp("/Grúa", cmdtext, true, 5) == 0 && strlen(cmdtext) == 5 ||
				  		 strcmp("/Grua", cmdtext, true, 5) == 0 && strlen(cmdtext) == 5)
		    	{
			    	GetMyNearDoor(playerid, true, true);
				}
				// COMANDO: /Sexo [ID]
		  		else if (strfind(cmdtext, "/Sexo ", true) == 0) //20
			    {
					new PlayerIDSexo = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
				    if (IsPlayerNear(playerid, PlayerIDSexo,
						 "1422",
						 "1423",
						 "1424",
						 "El jugador que le deseas tener sexo con el no se encuentra conectado",
						 "El jugador que le deseas tener sexo con el no se ha logueado",
						 "El jugador que le deseas tener sexo con el no se encuentra cerca de tí"))
				    {
						new MsgSexoMe[MAX_TEXT_CHAT];
						new MsgSexoYou[MAX_TEXT_CHAT];
						format(MsgSexoMe, sizeof(MsgSexoMe), "Ofreciste tener sexo a %s", PlayersDataOnline[PlayerIDSexo][NameOnlineFix]);
						format(MsgSexoYou, sizeof(MsgSexoYou), "%s quiere tener sexo contigo use (/Aceptar Sexo)", PlayersDataOnline[playerid][NameOnlineFix]);

						SendInfoMessage(playerid, 3, "0", MsgSexoMe);
						SendInfoMessage(PlayerIDSexo, 3, "0", MsgSexoYou);

						PlayersDataOnline[PlayerIDSexo][PlayerSexo][0] = playerid;
				    }
			    }
			    // COMANDO: /SALUDAR [ID]
				else if (strfind(cmdtext, "/Saludar ", true) == 0) //20
			    {
					new PlayerIDSaludar = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
				    if (IsPlayerNear(playerid, PlayerIDSaludar,
						 "1422",
						 "1423",
						 "1424",
						 "El jugador al que deseas saludar no se encuentra conectado",
						 "El jugador al que deseas saludar no se ha logueado",
						 "El jugador al que deseas saludar no se encuentra cerca de tí"))
				    {
						new MsgSaludarMe[MAX_TEXT_CHAT];
						new MsgSaludarYou[MAX_TEXT_CHAT];
						format(MsgSaludarMe, sizeof(MsgSaludarMe), "Ofreciste saludar a %s", PlayersDataOnline[PlayerIDSaludar][NameOnlineFix]);
						format(MsgSaludarYou, sizeof(MsgSaludarYou), "%s quiere saludarse con ústed. Use (/Aceptar Saludo)", PlayersDataOnline[playerid][NameOnlineFix]);

						SendInfoMessage(playerid, 3, "0", MsgSaludarMe);
						SendInfoMessage(PlayerIDSaludar, 3, "0", MsgSaludarYou);

						PlayersDataOnline[PlayerIDSaludar][PlayerSexo][0] = playerid;
				    }
			    }
			    // COMANDO: /Besar [Tipo] [ID]
				else if (strfind(cmdtext, "/Besar ", true) == 0) //20
			    {
					new TipoDeBeso = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
					new PlayerIDBesar = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
				    if (IsPlayerNear(playerid, PlayerIDBesar,
						 "1422",
						 "1423",
						 "1424",
						 "El jugador al que deseas besar no se encuentra conectado",
						 "El jugador al que deseas besar no se ha logueado",
						 "El jugador al que deseas besar no se encuentra cerca de tí"))
				    {
						if (TipoDeBeso > 0 && TipoDeBeso < 3)
						{
							new MsgBesarMe[MAX_TEXT_CHAT];
							new MsgBesarYou[MAX_TEXT_CHAT];
							format(MsgBesarMe, sizeof(MsgBesarMe), "Ofreciste besar a %s", PlayersDataOnline[PlayerIDBesar][NameOnlineFix]);
							format(MsgBesarYou, sizeof(MsgBesarYou), "%s quiere besarse con ústed. Use (/Aceptar Beso)", PlayersDataOnline[playerid][NameOnlineFix]);

							SendInfoMessage(playerid, 3, "0", MsgBesarMe);
							SendInfoMessage(PlayerIDBesar, 3, "0", MsgBesarYou);

							PlayersDataOnline[PlayerIDBesar][PlayerSexo][0] = playerid;
							PlayersDataOnline[PlayerIDBesar][PlayerSexo][1] = TipoDeBeso;
						}
						else
						{
							SendInfoMessage(playerid, 0, "1421", "Solo puedes dar o recibir el beso (1-2) Utiliza: /Besar [1-2] [ID]");
						}
				    }
			    }
				// COMANDO: /Carreras
			  	else if (strcmp("/Carreras", cmdtext, true, 9) == 0 && strlen(cmdtext) == 9)
	  			{
		  			ShowPistaPlayerPublics(playerid);
				}
				// COMANDO: /Salir Carrera
			  	else if (strcmp("/Salir Carrera", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
	  			{
	  			    if (PlayersDataOnline[playerid][PistaIDp] == -1)
		  			{
						ShowPlayerDialogEx(playerid,999,DIALOG_STYLE_MSGBOX,"{00A5FF}Carreras - Error", "{E6E6E6}No te encuentras en ninguna carrera", "Ok", "");
	  				}
	  				else
	  				{
				        new PistasDialogText[MAX_TEXT_CHAT];
					    format(PistasDialogText, sizeof(PistasDialogText), "{F5FF00}%s{00F50A} ha salido de la carrera ((Voluntariamente)).", PlayersDataOnline[playerid][NameOnlineFix]);
						SendMessageToRaceChat(PlayersDataOnline[playerid][PistaIDp], PistasDialogText, true);
						ShowPlayerDialogEx(playerid,999,DIALOG_STYLE_MSGBOX,"{00A5FF}Carreras - Salir de la Carrra", "{00F50A}Saliste de la carrera correctamente!", "Ok", "");
						RemovePlayerToRace(playerid, true, true, STATE_RACE_EXIT_SALIDA);
					}
				}
				// COMANDO: /Música
			  	else if (strcmp("/Música", cmdtext, true, 7) == 0 && strlen(cmdtext) == 7 ||
				  		 strcmp("/Musica", cmdtext, true, 7) == 0 && strlen(cmdtext) == 7)
	  			{
			        if (PlayersData[playerid][IsPlayerInHouse])
			        {
						if (IsMyHouse(playerid, PlayersData[playerid][IsPlayerInHouse]) ||
							 PlayersData[playerid][Alquiler] == PlayersData[playerid][IsPlayerInHouse] ||
							 IsPlayerInHouseFriend(playerid, PlayersData[playerid][IsPlayerInHouse]) != -1 ||
							 PlayersData[playerid][Admin] >= 7 && PlayersDataOnline[playerid][AdminOn])
			            {
				            ShowStations(playerid, HouseData[PlayersData[playerid][IsPlayerInHouse]][StationID], true);
						}
						else
						{
							SendInfoMessage(playerid, 0, "1466", "Esta no es su casa");
						}
			        }
			        else
			        {
						SendInfoMessage(playerid, 0, "1467", "No te encuentras en ninguna casa");
					}
				}
				// COMANDO: /Estéreo
			  	else if (strcmp("/Estéreo", cmdtext, true, 8) == 0 && strlen(cmdtext) == 8 ||
				  		 strcmp("/Estereo", cmdtext, true, 8) == 0 && strlen(cmdtext) == 8)
	  			{
					if ( PlayersDataOnline[playerid][InCarId])
					{
			        	ShowStations(playerid, DataCars[PlayersDataOnline[playerid][InCarId]][StationID], false);
					}
					else
					{
						SendInfoMessage(playerid, 0, "1535", "Suba al vehículo al asiento de conductor y luego use /Estéreo");
					}
				}
				// COMANDO: /Duda
			  	else if (strcmp("/Duda", cmdtext, true, 5) == 0 && strlen(cmdtext) == 5)
	  			{
				    if (CanalDudas)
				    {
						if (AreAdminsOnline())
						{
							ShowDudasDialog(playerid);
						}
						else
						{
							SendInfoMessage(playerid, 0, "1483", "No hay administradores o ayudantes online para resolver dudas, inténtelo más tarde.");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "1484", "El canal /Duda se encuentra cerrado.");
					}
				}
				// COMANDO: /Terminar Robo
			    else if (strcmp("/Terminar Robo", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
			    {
					if (PlayersData[playerid][Faccion] == COLTS ||
						 PlayersData[playerid][Faccion] == HAMPA ||
						 PlayersData[playerid][Faccion] == TheAngelsMC ||
						 PlayersData[playerid][Faccion] == HEORS
					)
					 {
			  	        new fac;
			  	        if (PlayersData[playerid][Faccion] == COLTS)
			  	        {
			  	            fac = COLTS_R;
						}
						else if (PlayersData[playerid][Faccion] == HAMPA)
						{
						    fac = HAMPA_R;
						}
						else if (PlayersData[playerid][Faccion] == HEORS)
						{
						    fac = HEORS_R;
						}
			  	        if (RobosInfo[fac][BizzIDR])
			  	        {
                            if (RobosInfo[fac][RoboState])
                            {
						        if (PlayersDataOnline[playerid][InPickup] >= NegociosData[1][PickupOutId] &&
						             PlayersDataOnline[playerid][InPickup] <= NegociosData[MAX_BIZZ][PickupOutId]
									 && PlayersDataOnline[playerid][MyPickupWorld] == RobosInfo[fac][BizzIDR])
						        {
	                                new MSGRobo[MAX_TEXT_CHAT];
	                               	if (NegociosData[RobosInfo[fac][BizzIDR]][Deposito]      > 0)
	                               	{
	//                                	FaccionData[RobosInfo[fac][FaccionIDR]][Deposito] 		+= NegociosData[RobosInfo[fac][BizzIDR]][Deposito];
										GivePlayerMoneyEx(playerid, NegociosData[RobosInfo[fac][BizzIDR]][Deposito]);
		                                format(MSGRobo, sizeof(MSGRobo), "[Robo]: Robado $%i del deposito del negocio!", NegociosData[RobosInfo[fac][BizzIDR]][Deposito]);
										SendMessageRobosFaccion(RobosInfo[fac][FaccionIDR], MSGRobo);
		                                NegociosData[RobosInfo[fac][BizzIDR]][Deposito]          = 0;
	                               	}
	                                if (NegociosData[RobosInfo[fac][BizzIDR]][DepositoExtorsion] > 0)
	                                {
	//                                	FaccionData[RobosInfo[fac][FaccionIDR]][Deposito]		+= NegociosData[RobosInfo[fac][BizzIDR]][DepositoExtorsion];
		                                format(MSGRobo, sizeof(MSGRobo), "[Robo]: Robado $%i de la extorsión del negocio!", NegociosData[RobosInfo[fac][BizzIDR]][DepositoExtorsion]);
										GivePlayerMoneyEx(playerid, NegociosData[RobosInfo[fac][BizzIDR]][DepositoExtorsion]);
										SendMessageRobosFaccion(RobosInfo[fac][FaccionIDR], MSGRobo);
		                                NegociosData[RobosInfo[fac][BizzIDR]][DepositoExtorsion] = 0;
	                               	}
									if (NegociosData[RobosInfo[fac][BizzIDR]][Materiales] > 0)
									{
	//									FaccionData[RobosInfo[fac][FaccionIDR]][Almacen][0] 	+= NegociosData[RobosInfo[fac][BizzIDR]][Materiales];
	                                    PlayersData[playerid][Materiales]                       += NegociosData[RobosInfo[fac][BizzIDR]][Materiales];
										format(MSGRobo, sizeof(MSGRobo), "[Robo]: Robado %i de materiales del negocio!", NegociosData[RobosInfo[fac][BizzIDR]][Materiales]);
										SendMessageRobosFaccion(RobosInfo[fac][FaccionIDR], MSGRobo);
										NegociosData[RobosInfo[fac][BizzIDR]][Materiales]        = 0;
									}
									format(MSGRobo, sizeof(MSGRobo), "[Robo]: %s ha finalizado el robo! Vamonos!", PlayersDataOnline[playerid][NameOnlineFix]);
									SendMessageRobosFaccion(RobosInfo[fac][FaccionIDR], MSGRobo);
	                                CancelRobo(fac);
                                }
						        else
						        {
									SendInfoMessage(playerid, 0, "1488", "Debes estar en la puerta de un negocio para terminar el robo!");
								}
                            }
                            else
                            {
								SendInfoMessage(playerid, 0, "1489", "Todavía no puedes terminar de robar el local!");
							}
					  	}
					  	else
					  	{
							SendInfoMessage(playerid, 0, "1490", "No hay ningún robo en proceso en este momento!");
					    }
				  	}
				  	else
				  	{
						SendInfoMessage(playerid, 0, "1491", "Usted no puede robar locales!");
				    }
				}
				// COMANDO: /Id [Parte del Nombre]
				else if (strfind(cmdtext, "/Id ", true) == 0)
				{
				    new FoundName;
				    new MsgUsersFound[MAX_TEXT_CHAT];
                    for (new i = 0; i < MAX_PLAYERS; i++)
                    {
						if (i != playerid && IsPlayerConnected(i) && PlayersDataOnline[i][State] == 3)
						{
						    if (strfind(PlayersDataOnline[i][NameOnlineFix], cmdtext[4], true) != -1 || strfind(PlayersDataOnline[i][NameOnline], cmdtext[4], true) != -1)
						    {
								FoundName++;
						        format(MsgUsersFound, sizeof(MsgUsersFound), " [ID: %i] %s", i, PlayersDataOnline[i][NameOnlineFix]);
							    SendClientMessage(playerid, 0x969696FF, MsgUsersFound);
						    }
						}
					}
					if (!FoundName)
					{
					    SendClientMessage(playerid, 0x969696FF, " No se encontraron usuarios!");
					}
				}
				//		/Ip [Ip]				- Buscar usuarios por la IP
				else if (strfind(cmdtext, "/Ip ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 9)
					{
					    new FoundName;
					    new MsgUsersFound[MAX_TEXT_CHAT];
					    new IpGet[20];
	                    for (new i = 0; i < MAX_PLAYERS; i++)
	                    {
							if (IsPlayerConnected(i) && PlayersDataOnline[i][State] == 3)
							{
							    if (strfind(PlayersData[i][MyIP], cmdtext[4], true) != -1)
							    {
									FoundName++;
									if (FoundName == 1)
									{
								        format(MsgUsersFound, sizeof(MsgUsersFound), " Usuarios encontrados para la IP: {F50000}%s", cmdtext[4]);
									    SendClientMessage(playerid, 0x969696FF, MsgUsersFound);
									}
									GetPlayerIp(i, IpGet, sizeof(IpGet));
							        format(MsgUsersFound, sizeof(MsgUsersFound), " %s [ID: %i] - %s", PlayersDataOnline[i][NameOnlineFix], i, IpGet);
								    SendClientMessage(playerid, 0x969696FF, MsgUsersFound);
							    }
							}
						}
						if (!FoundName)
						{
						    SendClientMessage(playerid, 0x969696FF, " No se encontraron usuarios!");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "1577", "Tú no tienes acceso al comando /Ip.");
				        return 1;
					}
				}
				// COMANDO: /Mear
			  	else if (strcmp("/Mear", cmdtext, true, 5) == 0 && strlen(cmdtext) == 5)
	  			{
					SetPlayerSpecialAction(playerid, 68);
					PlayersDataOnline[playerid][InAnim] = true;
				}
				// COMANDO: /Anim
				else if (strfind(cmdtext, "/Anim ", true) == 0)
				{
		    	    new PosShearh; PosShearh = strfind(cmdtext, " ", false, 8);
		    	    new PosShearh2; PosShearh2 = strfind(cmdtext, " ", false, PosShearh + 1);
				    new MsgErrorAnimaciones[MAX_TEXT_CHAT];
				    new MAX_ID;
					if (strfind(cmdtext, "/Anim ATTRACTORS ", true) == 0)				// ATTRACTORS - 2
			    	{
			    	    MAX_ID = sizeof(ATTRACTORS_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"Attractors",
							ATTRACTORS_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim BAR ", true) == 0)				// BAR - 11
			    	{
			    	    MAX_ID = sizeof(BAR_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"BAR",
							BAR_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim BAT ", true) == 0)				// BAT - 10
			    	{
			    	    MAX_ID = sizeof(BAT_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"BASEBALL",
							BAT_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim FIRE ", true) == 0)				// FIRE - 12
			    	{
			    	    MAX_ID = sizeof(FIRE_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"BD_FIRE",
							FIRE_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim PLAYA ", true) == 0)				// PLAYA - 4
			    	{
			    	    MAX_ID = sizeof(PLAYA_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"BEACH",
							PLAYA_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim GYM ", true) == 0)					// GYM - 6
			    	{
			    	    MAX_ID = sizeof(GYM_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"benchpress",
							GYM_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim BFINJECT ", true) == 0)				// BFINJECT - 3
			    	{
			    	    MAX_ID = sizeof(BFINJECT_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"BF_injection",
							BFINJECT_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim BICID ", true) == 0)				// BICID - 18
			    	{
			    	    MAX_ID = sizeof(BICID_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"BIKED",
							BICID_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim BICIH ", true) == 0)				// BICIH - 17
			    	{
			    	    MAX_ID = sizeof(BICIH_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"BIKEH",
							BICIH_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim BICIL ", true) == 0)				// BICIL - 8
			    	{
			    	    MAX_ID = sizeof(BICIL_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"BIKELEAP",
							BICIL_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim BICIS ", true) == 0)				// BICIS - 19
			    	{
			    	    MAX_ID = sizeof(BICIS_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"BIKES",
							BICIS_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim BICIV ", true) == 0)				// BICIV - 17
			    	{
			    	    MAX_ID = sizeof(BICIV_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"BIKEV",
							BICIV_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim BICI ", true) == 0)				// BICI - 3
			    	{
			    	    MAX_ID = sizeof(BICI_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"BIKE_DBZ",
							BICI_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim GOLPE ", true) == 0)				// GOLPE - 11
			    	{
			    	    MAX_ID = sizeof(GOLPE_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"BLOWJOBZ",
							GOLPE_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim BMX ", true) == 0)				// BMX - 17
			    	{
			    	    MAX_ID = sizeof(BMX_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"BMX",
							BMX_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim BOMBER ", true) == 0)				// BOMBER - 5
			    	{
			    	    MAX_ID = sizeof(BOMBER_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"BOMBER",
							BOMBER_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim BOX ", true) == 0)				// BOX - 9
			    	{
			    	    MAX_ID = sizeof(BOX_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"BOX",
							BOX_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim BALL ", true) == 0)				// BALL - 40
			    	{
			    	    MAX_ID = sizeof(BALL_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"BSKTBALL",
							BALL_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim BUDDY ", true) == 0)				// BUDDY - 4
			    	{
			    	    MAX_ID = sizeof(BUDDY_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"BUDDY",
							BUDDY_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim BUS ", true) == 0)				// BUS - 8
			    	{
			    	    MAX_ID = sizeof(BUS_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"BUS",
							BUS_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim CAM ", true) == 0)				// CAM - 13
			    	{
			    	    MAX_ID = sizeof(CAM_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"CAMERA",
							CAM_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim CAR ", true) == 0)				// CAR - 10
			    	{
			    	    MAX_ID = sizeof(CAR_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"CAR",
							CAR_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim CARRY ", true) == 0)				// CARRY - 6
			    	{
			    	    MAX_ID = sizeof(CARRY_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"CARRY",
							CARRY_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim CARCHAT ", true) == 0)				// CARCHAT - 20
			    	{
			    	    MAX_ID = sizeof(CARCHAT_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"CAR_CHAT",
							CARCHAT_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim CASINO ", true) == 0)				// CASINO - 24
			    	{
			    	    MAX_ID = sizeof(CASINO_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"CASINO",
							CASINO_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim CHAINSAW ", true) == 0)				// CHAINSAW - 10
			    	{
			    	    MAX_ID = sizeof(CHAINSAW_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"CHAINSAW",
							CHAINSAW_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim CHOPA ", true) == 0)				// CHOPA - 17
			    	{
			    	    MAX_ID = sizeof(CHOPA_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"CHOPPA",
							CHOPA_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim CLOTHES ", true) == 0)				// CLOTHES - 12
			    	{
			    	    MAX_ID = sizeof(CLOTHES_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"CLOTHES",
							CLOTHES_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim COACH ", true) == 0)				// COACH - 5
			    	{
			    	    MAX_ID = sizeof(COACH_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"COACH",
							COACH_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim COLT ", true) == 0)				// COLT - 6
			    	{
			    	    MAX_ID = sizeof(COLT_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"COLT45",
							COLT_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim COP ", true) == 0)				// COP - 11
			    	{
			    	    MAX_ID = sizeof(COLT_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"COP_AMBIENT",
							COLT_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim COPD ", true) == 0)				// COPD - 3
			    	{
			    	    MAX_ID = sizeof(COPD_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"COP_DVBYZ",
							COPD_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim CRACK ", true) == 0)				// CRACK - 9
			    	{
			    	    MAX_ID = sizeof(CRACK_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"CRACK",
							CRACK_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim CRIB ", true) == 0)				// CRIB - 4
			    	{
			    	    MAX_ID = sizeof(CRIB_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"CRIB",
							CRIB_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim DAM ", true) == 0)				// DAM - 4
			    	{
			    	    MAX_ID = sizeof(DAM_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"DAM_JUMP",
							DAM_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim DANCE ", true) == 0)				// DANCE - 13
			    	{
			    	    MAX_ID = sizeof(DANCE_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"DANCING",
							DANCE_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim DEALER ", true) == 0)				// DEALER - 6
			    	{
			    	    MAX_ID = sizeof(DEALER_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"DEALER",
							DEALER_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim DILDO ", true) == 0)				// DILDO - 8
			    	{
			    	    MAX_ID = sizeof(DILDO_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"DILDO",
							DILDO_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim DODGE ", true) == 0)				// DODGE - 3
			    	{
			    	    MAX_ID = sizeof(DODGE_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"DODGE",
							DODGE_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim DOZER ", true) == 0)				// DOZER - 9
			    	{
			    	    MAX_ID = sizeof(DOZER_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"DOZER",
							DOZER_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim DRIVE ", true) == 0)				// DRIVE - 7
			    	{
			    	    MAX_ID = sizeof(DRIVE_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"DRIVEBYS",
							DRIVE_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim FAT ", true) == 0)				// FAT - 17
			    	{
			    	    MAX_ID = sizeof(FAT_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"FAT",
							FAT_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim FIGHTB ", true) == 0)				// FIGHTB - 9
			    	{
			    	    MAX_ID = sizeof(FIGHTB_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"FIGHT_B",
							FIGHTB_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim FIGHTC ", true) == 0)				// FIGHTC - 11
			    	{
			    	    MAX_ID = sizeof(FIGHTC_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"FIGHT_C",
							FIGHTC_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim FIGHTD ", true) == 0)				// FIGHTD - 9
			    	{
			    	    MAX_ID = sizeof(FIGHTD_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"FIGHT_D",
							FIGHTD_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim FIGHTE ", true) == 0)				// FIGHTE - 3
			    	{
			    	    MAX_ID = sizeof(FIGHTE_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"FIGHT_E",
							FIGHTE_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim FINALE ", true) == 0)				// FINALE - 15
			    	{
			    	    MAX_ID = sizeof(FINALE_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"FINALE",
							FINALE_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim FINALE2 ", true) == 0)				// FINALE2 - 7
			    	{
			    	    MAX_ID = sizeof(FINALE2_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"FINALE2",
							FINALE2_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim FLAME ", true) == 0)				// FLAME - 0
			    	{
			    	    MAX_ID = sizeof(FLAME_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"FLAME",
							FLAME_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim FLOWERS ", true) == 0)				// FLOWERS - 2
			    	{
			    	    MAX_ID = sizeof(FLOWERS_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"Flowers",
							FLOWERS_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim FOOD ", true) == 0)				// FOOD - 32
			    	{
			    	    MAX_ID = sizeof(FOOD_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"FOOD",
							FOOD_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim GYMA ", true) == 0)				// GYMA - 8
			    	{
			    	    MAX_ID = sizeof(GYMA_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"Freeweights",
							GYMA_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim GANGS ", true) == 0)				// GANGS - 32
			    	{
			    	    MAX_ID = sizeof(GANGS_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"GANGS",
							GANGS_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim GHANDS ", true) == 0)				// GHANDS - 19
			    	{
			    	    MAX_ID = sizeof(GHANDS_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"GHANDS",
							GHANDS_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim GHETTO ", true) == 0)				// GHETTO - 6
			    	{
			    	    MAX_ID = sizeof(GHETTO_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"GHETTO_DB",
							GHETTO_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim GOGGLES ", true) == 0)				// GOGGLES - 0
			    	{
			    	    MAX_ID = sizeof(GOGGLES_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"goggles",
							GOGGLES_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim GRAFFITI ", true) == 0)				// GRAFFITI - 1
			    	{
			    	    MAX_ID = sizeof(GRAFFITI_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"GRAFFITI",
							GRAFFITI_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim GRAVE ", true) == 0)				// GRAVE - 2
			    	{
			    	    MAX_ID = sizeof(GRAVE_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"GRAVEYARD",
							GRAVE_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim GRENADE ", true) == 0)				// GRENADE - 2
			    	{
			    	    MAX_ID = sizeof(GRENADE_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"GRENADE",
							GRENADE_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim GYMB ", true) == 0)				// GYMB - 23
			    	{
			    	    MAX_ID = sizeof(GYMB_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"GYMNASIUM",
							GYMB_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim HAIR ", true) == 0)				// HAIR - 12
			    	{
			    	    MAX_ID = sizeof(HAIR_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"HAIRCUTS",
							HAIR_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim HEIST ", true) == 0)				// HEIST - 9
			    	{
			    	    MAX_ID = sizeof(HEIST_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"HEIST9",
							HEIST_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim HOUSE ", true) == 0)				// HOUSE - 9
			    	{
			    	    MAX_ID = sizeof(HOUSE_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"INT_HOUSE",
							HOUSE_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim OFFICE ", true) == 0)				// OFFICE - 9
			    	{
			    	    MAX_ID = sizeof(OFFICE_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"INT_OFFICE",
							OFFICE_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim INTSHOP ", true) == 0)				// INTSHOP - 7
			    	{
			    	    MAX_ID = sizeof(INTSHOP_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"INT_SHOP",
							INTSHOP_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim BUISNESS ", true) == 0)				// BUISNESS - 3
			    	{
			    	    MAX_ID = sizeof(BUISNESS_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"JST_BUISNESS",
							BUISNESS_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim KART ", true) == 0)				// KART - 3
			    	{
			    	    MAX_ID = sizeof(KART_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"KART",
							KART_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim KISSING ", true) == 0)				// KISSING - 14
			    	{
			    	    MAX_ID = sizeof(KISSING_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"KISSING",
							KISSING_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim KNIFE ", true) == 0)				// KNIFE - 15
			    	{
			    	    MAX_ID = sizeof(KNIFE_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"KNIFE",
							KNIFE_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim LAPDAN ", true) == 0)				// LAPDAN - 1
			    	{
			    	    MAX_ID = sizeof(LAPDAN1_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"LAPDAN1",
							LAPDAN1_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim LAPDAN ", true) == 0)				// LAPDAN - 2
			    	{
			    	    MAX_ID = sizeof(LAPDAN2_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"LAPDAN2",
							LAPDAN2_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim LAPDAN ", true) == 0)				// LAPDAN - 3
			    	{
			    	    MAX_ID = sizeof(LAPDAN3_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"LAPDAN3",
							LAPDAN3_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim LOWRIDER ", true) == 0)				// LOWRIDER - 38
			    	{
			    	    MAX_ID = sizeof(LOWRIDER_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"LOWRIDER",
							LOWRIDER_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim CHASE ", true) == 0)				// CHASE - 24
			    	{
			    	    MAX_ID = sizeof(CHASE_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"MD_CHASE",
							CHASE_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim END ", true) == 0)				// END - 7
			    	{
			    	    MAX_ID = sizeof(END_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"MD_END",
							END_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim MEDIC ", true) == 0)				// MEDIC - 0
			    	{
			    	    MAX_ID = sizeof(MEDIC_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"MEDIC",
							MEDIC_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim MISC ", true) == 0)				// MISC - 40
			    	{
			    	    MAX_ID = sizeof(MISC_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
						    if (strval(cmdtext[PosShearh]) == 29)
						    {
								ApplyPlayerAnimCustom(playerid,
								"MISC",
								MISC_ANIMATIONS[28], strval(cmdtext[PosShearh2]));
							}
							else
							{
								ApplyPlayerAnimCustom(playerid,
								"MISC",
								MISC_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
							}
						}
					}
					else if (strfind(cmdtext, "/Anim MTB ", true) == 0)				// MTB - 17
			    	{
			    	    MAX_ID = sizeof(MTB_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"MTB",
							MTB_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
/*					else if (strfind(cmdtext, "/Anim MUSCULAR ", true) == 0)				// MUSCULAR - 16
			    	{
			    	    MAX_ID = sizeof(MUSCULAR_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"MUSCULAR",
							MUSCULAR_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}*/
	/*				else if (strfind(cmdtext, "/Anim NEVADA ", true) == 0)				// NEVADA - 1
			    	{
			    	    MAX_ID = sizeof(NEVADA_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"NEVADA",
							NEVADA_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}*/
					else if (strfind(cmdtext, "/Anim LOOKERS ", true) == 0)				// LOOKERS - 28
			    	{
			    	    MAX_ID = sizeof(LOOKERS_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"ON_LOOKERS",
							LOOKERS_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim OTB ", true) == 0)				// OTB - 10
			    	{
			    	    MAX_ID = sizeof(OTB_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"OTB",
							OTB_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim PARA ", true) == 0)				// PARA - 21
			    	{
			    	    MAX_ID = sizeof(PARA_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID + 1)
						{
							ApplyPlayerAnimCustom(playerid,
							"PARACHUTE",
							PARA_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim PARK ", true) == 0)				// PARK - 2
			    	{
			    	    MAX_ID = sizeof(PARK_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"PARK",
							PARK_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim PAUL ", true) == 0)				// PAUL - 11
			    	{
			    	    MAX_ID = sizeof(PAUL_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"PAULNMAC",
							PAUL_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim PED ", true) == 0)				// PED - 999
			    	{
			    	    MAX_ID = sizeof(PED_ANIMATIONS) - 1;

				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"PED",
							PED_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));

						}


					}
					else if (strfind(cmdtext, "/Anim PLAYER ", true) == 0)				// PLAYER - 3
			    	{
			    	    MAX_ID = sizeof(PLAYER_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"PLAYER_DVBYS",
							PLAYER_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim PLAYID ", true) == 0)				// PLAYID - 4
			    	{
			    	    MAX_ID = sizeof(PLAYID_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"PLAYIDLES",
							PLAYID_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim POLICE ", true) == 0)				// POLICE - 9
			    	{
			    	    MAX_ID = sizeof(POLICE_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"POLICE",
							POLICE_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim POOL ", true) == 0)				// POOL - 20
			    	{
			    	    MAX_ID = sizeof(POOL_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"POOL",
							POOL_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim POOR ", true) == 0)				// POOR - 1
			    	{
			    	    MAX_ID = sizeof(POOR_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"POOR",
							POOR_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim PYTHON ", true) == 0)				// PYTHON - 4
			    	{
			    	    MAX_ID = sizeof(PYTHON_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"PYTHON",
							PYTHON_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim QUAD ", true) == 0)				// QUAD - 16
			    	{
			    	    MAX_ID = sizeof(QUAD_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"QUAD",
							QUAD_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim QUADD ", true) == 0)				// QUADD - 3
			    	{
			    	    MAX_ID = sizeof(QUADD_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"QUAD_DBZ",
							QUADD_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim RAP ", true) == 0)				// RAP - 7
			    	{
			    	    MAX_ID = sizeof(RAP_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"RAPPING",
							RAP_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim RIFLE ", true) == 0)				// RIFLE - 4
			    	{
			    	    MAX_ID = sizeof(RIFLE_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"RIFLE",
							RIFLE_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim RIOT ", true) == 0)				// RIOT - 6
			    	{
			    	    MAX_ID = sizeof(RIOT_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"RIOT",
							RIOT_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim ROB ", true) == 0)				// ROB - 4
			    	{
			    	    MAX_ID = sizeof(ROB_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"ROB_BANK",
							ROB_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim ROCKET ", true) == 0)				// ROCKET - 4
			    	{
			    	    MAX_ID = sizeof(ROCKET_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"ROCKET",
							ROCKET_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim RUSTLER ", true) == 0)				// RUSTLER - 4
			    	{
			    	    MAX_ID = sizeof(RUSTLER_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"RUSTLER",
							RUSTLER_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim RYDER ", true) == 0)				// RYDER - 15
			    	{
			    	    MAX_ID = sizeof(RYDER_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"RYDER",
							RYDER_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim SCRAT ", true) == 0)				// SCRAT - 11
			    	{
			    	    MAX_ID = sizeof(SCRAT_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"SCRATCHING",
							SCRAT_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim SHAMAL ", true) == 0)				// SHAMAL - 4
			    	{
			    	    MAX_ID = sizeof(SHAMAL_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"SHAMAL",
							SHAMAL_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim SHOP ", true) == 0)				// SHOP - 24
			    	{
			    	    MAX_ID = sizeof(SHOP_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"SHOP",
							SHOP_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim SHOTGUN ", true) == 0)				// SHOTGUN - 2
			    	{
			    	    MAX_ID = sizeof(SHOTGUN_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"SHOTGUN",
							SHOTGUN_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim SILENCED ", true) == 0)				// SILENCED - 3
			    	{
			    	    MAX_ID = sizeof(SILENCED_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"SILENCED",
							SILENCED_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
/*					else if (strfind(cmdtext, "/Anim SKATE ", true) == 0)				// SKATE - 2
			    	{
			    	    MAX_ID = sizeof(SKATE_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"SKATE",
							SKATE_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}*/
					else if (strfind(cmdtext, "/Anim SMOK ", true) == 0)				// SMOK - 2
			    	{
			    	    MAX_ID = sizeof(SMOK_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"SMOKING",
							SMOK_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim SNIPER ", true) == 0)				// SNIPER - 0
			    	{
			    	    MAX_ID = sizeof(SNIPER_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"SNIPER",
							SNIPER_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim SPRAY ", true) == 0)				// SPRAY - 1
			    	{
			    	    MAX_ID = sizeof(SPRAY_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"SPRAYCAN",
							SPRAY_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim STRIP ", true) == 0)				// STRIP - 19
			    	{
			    	    MAX_ID = sizeof(STRIP_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"STRIP",
							STRIP_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim SUNBA ", true) == 0)				// SUNBA - 17
			    	{
			    	    MAX_ID = sizeof(SUNBA_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"SUNBATHE",
							SUNBA_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim SWAT ", true) == 0)				// SWAT - 22
			    	{
			    	    MAX_ID = sizeof(SWAT_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"SWAT",
							SWAT_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim SWEET ", true) == 0)				// SWEET - 6
			    	{
			    	    MAX_ID = sizeof(SWEET_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"SWEET",
							SWEET_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim SWIM ", true) == 0)				// SWIM - 6
			    	{
			    	    MAX_ID = sizeof(SWIM_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"SWIM",
							SWIM_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim SWORD ", true) == 0)				// SWORD - 9
			    	{
			    	    MAX_ID = sizeof(SWORD_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"SWORD",
							SWORD_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim TANK ", true) == 0)				// TANK - 5
			    	{
			    	    MAX_ID = sizeof(TANK_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"TANK",
							TANK_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim TATTOO ", true) == 0)				// TATTOO - 56
			    	{
			    	    MAX_ID = sizeof(TATTOO_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"TATTOOS",
							TATTOO_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim TEC ", true) == 0)				// TEC - 3
			    	{
			    	    MAX_ID = sizeof(TEC_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"TEC",
							TEC_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim TRAIN ", true) == 0)				// TRAIN - 3
			    	{
			    	    MAX_ID = sizeof(TRAIN_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"TRAIN",
							TRAIN_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim TRUCK ", true) == 0)				// TRUCK - 16
			    	{
			    	    MAX_ID = sizeof(TRUCK_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"TRUCK",
							TRUCK_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim UZI ", true) == 0)				// UZI - 4
			    	{
			    	    MAX_ID = sizeof(UZI_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"UZI",
							UZI_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim VAN ", true) == 0)				// VAN - 7
			    	{
			    	    MAX_ID = sizeof(VAN_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"VAN",
							VAN_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim VENDING ", true) == 0)				// VENDING - 5
			    	{
			    	    MAX_ID = sizeof(VENDING_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"VENDING",
							VENDING_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim VORTEX ", true) == 0)				// VORTEX - 3
			    	{
			    	    MAX_ID = sizeof(VORTEX_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"VORTEX",
							VORTEX_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim WAYFA ", true) == 0)				// WAYFA - 17
			    	{
			    	    MAX_ID = sizeof(WAYFA_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"WAYFARER",
							WAYFA_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim ARMA ", true) == 0)				// ARMA - 16
			    	{
			    	    MAX_ID = sizeof(ARMA_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"WEAPONS",
							ARMA_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
					else if (strfind(cmdtext, "/Anim WUZI ", true) == 0)				// WUZI - 11
			    	{
			    	    MAX_ID = sizeof(WUZI_ANIMATIONS) - 1;
				    	if (strval(cmdtext[PosShearh]) >= 0 &&
							strval(cmdtext[PosShearh]) <= MAX_ID)
						{
							ApplyPlayerAnimCustom(playerid,
							"WUZI",
							WUZI_ANIMATIONS[strval(cmdtext[PosShearh])], strval(cmdtext[PosShearh2]));
						}
					}
			    	else
					{
						SendInfoMessage(playerid, 0, "361", "Si no se sabe alguna ID o quiere ver más sobre animaciones consulte /Ayuda Animaciones");
						return 1;
					}
			    	if (strval(cmdtext[PosShearh]) < 0 ||
						strval(cmdtext[PosShearh]) > MAX_ID)
					{
					    format(MsgErrorAnimaciones, sizeof(MsgErrorAnimaciones), "En esta categoría de animaciones la ID máxima es \"%i\"",
						MAX_ID);
						SendInfoMessage(playerid, 0, "362", MsgErrorAnimaciones);
					}
				}
				// COMANDO: /Alquilar
			  	else if (strcmp("/Alquilar", cmdtext, true, 9) == 0 && strlen(cmdtext) == 9)
			    {
			        if (PlayersDataOnline[playerid][InPickup] >= HouseData[1][PickupId] &&
				         PlayersDataOnline[playerid][InPickup] <= HouseData[MAX_HOUSE][PickupId])
			        {
				        if(!GetPlayerHousesCount(playerid))
				        {
						    if (PlayersData[playerid][Alquiler] == -1)
						    {
								if (strlen(HouseData[PlayersDataOnline[playerid][MyPickupWorld]][Dueno]) != 2 && HouseData[PlayersDataOnline[playerid][MyPickupWorld]][PriceRent] != 0)
								{
									if (PlayersData[playerid][Dinero] >= HouseData[PlayersDataOnline[playerid][MyPickupWorld]][PriceRent])
									{
										new MsgRenta[MAX_TEXT_CHAT];
										format(MsgRenta, sizeof(MsgRenta), "Te has rentado en esta casa por $%i", HouseData[PlayersDataOnline[playerid][MyPickupWorld]][PriceRent]);
										SendInfoMessage(playerid, 3, "0", MsgRenta);
										PlayersData[playerid][Alquiler] = PlayersDataOnline[playerid][MyPickupWorld];
										GivePlayerMoneyEx(playerid, -HouseData[PlayersDataOnline[playerid][MyPickupWorld]][PriceRent]);
										HouseData[PlayersDataOnline[playerid][MyPickupWorld]][Deposito] = HouseData[PlayersDataOnline[playerid][MyPickupWorld]][Deposito] + HouseData[PlayersDataOnline[playerid][MyPickupWorld]][PriceRent];
									}
									else
									{
										SendInfoMessage(playerid, 0, "606", "No tienes suficiente dinero para alquilarte en esta Casa!");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "607", "Esta casa no esta en renta!");
								}
							}
							else if(PlayersData[playerid][Alquiler] == PlayersDataOnline[playerid][MyPickupWorld])
							{
								SendInfoMessage(playerid, 3, "0", "Has salido de este alquiler éxitosamente!");
								PlayersData[playerid][Alquiler] = -1;
							}
							else
							{
								SendInfoMessage(playerid, 0, "608", "Debe salir del alquiler de la casa donde vive, para poder alquilar esta");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "650", "Debe vender su casa, para poder alquilar esta");
						}
			        }
			        else
			        {
						SendInfoMessage(playerid, 0, "609", "No te encuentras en ninguna casa");
					}
				}
				else if (strfind(cmdtext, "/Nacer", true) == 0)
		    	{
					// COMANDO: /Nacer Amigo
				  	if (strcmp("/Nacer Amigo", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
			    	{
				        if (PlayersDataOnline[playerid][InPickup] >= HouseData[1][PickupId] &&
				             PlayersDataOnline[playerid][InPickup] <= HouseData[MAX_HOUSE][PickupId] ||
							 PlayersDataOnline[playerid][InPickup] >= TypeHouse[0][PickupId] &&
				             PlayersDataOnline[playerid][InPickup] <= TypeHouse[MAX_HOUSE_TYPE][PickupId])
				        {
							new houseid;
							if (PlayersDataOnline[playerid][InPickup] >= TypeHouse[0][PickupId] &&
				             PlayersDataOnline[playerid][InPickup] <= TypeHouse[MAX_HOUSE_TYPE][PickupId] && PlayersData[playerid][IsPlayerInHouse])
							{
						    	houseid = PlayersData[playerid][IsPlayerInHouse];
							}
							else
							{
							    houseid = PlayersDataOnline[playerid][MyPickupWorld];
							}

							if (IsPlayerInHouseFriend(playerid, houseid) != -1)
				            {
								SendInfoMessage(playerid, 2, "0", "Has asignado tu Spawn de Amigo en esta casa.");
								PlayersData[playerid][SpawnAmigo] = houseid;
							}
							else
							{
								SendInfoMessage(playerid, 0, "1372", "No tienes las llaves de amigo de está casa");
							}
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "1374", "No te encuentras en ninguna casa");
						}
			    	}
					// COMANDO: /Nacer
				  	else if (strcmp("/Nacer", cmdtext, true, 6) == 0 && strlen(cmdtext) == 6)
			    	{
			    	    if (PlayersData[playerid][Nacer] == 2)
			    	    {
							SendInfoMessage(playerid, 2, "0", "Ha cambiado su Spawn, ahora nacerá en su facción.");
				    	    PlayersData[playerid][Nacer] = 0;
						}
						else if (PlayersData[playerid][Nacer] == 0)
						{
							SendInfoMessage(playerid, 2, "0", "Ha cambiado su Spawn, ahora nacerá en su casa o alquiler si es que tiene uno.");
							PlayersData[playerid][Nacer] = 1;
						}
						else
						{
							SendInfoMessage(playerid, 2, "0", "Has cambiado su Spawn, ahora nacerá en la casa de amigo que tengas asignado si es que tiene uno.");
							PlayersData[playerid][Nacer] = 2;
						}
						UpdateSpawnPlayer(playerid);
			    	}
			    	else
			    	{
						SendInfoMessage(playerid, 0, "1373", "Quizás quiso decir: /Nacer - /Nacer Amigo");
					}
				}
				// COMANDO: /Decomisar [ID]
				else if (strfind(cmdtext, "/Decomisar ", true) == 0)
				{
					if (PlayersData[playerid][Faccion] == SAPD ||
						 PlayersData[playerid][Faccion] == SAPD)
				    {
				        new playeridRemove = strval(cmdtext[11]);
					    if (IsPlayerNear(playerid, playeridRemove,
							 "896",
							 "897",
							 "898",
							 "El jugador que le deseas decomisar no se encuentra conectado",
							 "El jugador que le deseas decomisar no se ha logueado",
							 "El jugador que le deseas decomisar no se encuentra cerca de tí"))
					    {
							new MsgCheckMe[MAX_TEXT_CHAT];
							format(MsgCheckMe, sizeof(MsgCheckMe), "descomisa todos los materiales ilegales a %s", PlayersDataOnline[playeridRemove][NameOnlineFix]);
							Acciones_ROL(playerid, ACCION_ME, MsgCheckMe);

							ResetPlayerWeaponsEx(playeridRemove);
							PlayersData[playeridRemove][Ganzuas]		= 0;
							PlayersData[playeridRemove][Drogas]        = 0;
							PlayersData[playeridRemove][Materiales]    = 0;
							PlayersData[playeridRemove][Bombas]        = 0;
							PlayersData[playeridRemove][Piezas]        = 0;

							new HaveTaser = GetObjectByType(playeridRemove, TYPE_TASER);
							if (HaveTaser != -1)
							{
								RemoveObjectHoldToPlayer(playeridRemove, -1, HaveTaser);
							}
						}
				    }
				    else
				    {
						SendInfoMessage(playerid, 0, "899", "Usted no es SAPD ni SAPD");
					}
				}
				// COMANDO: /Desalojar Todos
			  	else if (strcmp("/Desalojar Todos", cmdtext, true, 16) == 0 && strlen(cmdtext) == 16)
		    	{
                    if(GetPlayerHousesCount(playerid))
		            {
	                    for (new i = 0; i < MAX_PLAYERS; i++)
	                    {
                            if(i != playerid && IsPlayerConnected(i) && PlayersDataOnline[i][State] == 3 && PlayersData[i][Alquiler] != -1 && IsMyHouse(playerid, PlayersData[i][Alquiler]))
							{
                                PlayersData[i][Alquiler] = -1;
								SendInfoMessage(i, 3, "0", "Has sido desalojado de su alquiler!");
							}
						}
						SendInfoMessage(playerid, 3, "0", "Has desalojado a todos de su casa");
					}
					else
					{
						SendInfoMessage(playerid, 0, "585", "Usted no tiene casa!");
					}
		    	}
				// COMANDO: /Desalojar [ID]
				else if (strfind(cmdtext, "/Desalojar ", true) == 0)
				{
					if(GetPlayerHousesCount(playerid))
		            {
					    if (IsPlayerNear(playerid, strval(cmdtext[11]),
							 "594",
							 "595",
							 "596",
							 "El jugador que le deseas desalojarlo de su casa, no se encuentra conectado",
							 "El jugador que le deseas desalojarlo de su casa no se ha logueado",
							 "El jugador que le deseas desalojarlo de su casa no se encuentra cerca de tí"))
					    {
					        if (PlayersData[strval(cmdtext[11])][Alquiler] != 1 && IsMyHouse(playerid, PlayersData[strval(cmdtext[11])][Alquiler]))
					        {
								new MsgDesalojar[MAX_TEXT_CHAT];
								new MsgDesalojarToPlayer[MAX_TEXT_CHAT];
						        format(MsgDesalojar, sizeof(MsgDesalojar), "Has desalojado a %s.", PlayersDataOnline[strval(cmdtext[11])][NameOnlineFix]);
						        format(MsgDesalojarToPlayer, sizeof(MsgDesalojarToPlayer), "%s te ha desalojado de su casa", PlayersDataOnline[playerid][NameOnlineFix]);
						        SendInfoMessage(playerid, 3, "0", MsgDesalojar);
						        SendInfoMessage(strval(cmdtext[11]), 3, "0", MsgDesalojarToPlayer);
                             	PlayersData[strval(cmdtext[11])][Alquiler] = -1;
							}
							else
							{
								SendInfoMessage(playerid, 0, "597", "Este jugador no se encuentra alquilado en su casa!");
							}
					    }
					}
					else
					{
						SendInfoMessage(playerid, 0, "598", "Usted no tiene casa!");
					}
		    	}
				// COMANDO: /Llaves
				else if (strfind(cmdtext, "/Llaves ", true) == 0)
				{
					// COMANDO: /Llaves PuertaEx acá editar
				  	if (strcmp("/Llaves PuertaEx", cmdtext, true, 16) == 0 && strlen(cmdtext) == 16 ||
					    strcmp("/Llaves PuertaEx", cmdtext, true, 16) == 0 && strlen(cmdtext) == 16)
			    	{
						GetMyNearDoor(playerid, false, false);
			    	}
					// COMANDO: /Llaves Amigos
					// COMANDO: /Llaves Amigos Veh
				  	else if (strcmp("/Llaves Amigos Veh", cmdtext, true, 18) == 0 && strlen(cmdtext) == 18)
				    {
						new MyNearCar = IsPlayerInNearVehicle(playerid);
						if (MyNearCar)
						{
						    if(IsVehicleMyVehicle(playerid, MyNearCar) || PlayersData[playerid][Admin] >= 8)
						    {
						        ShowCarFriends(playerid, MyNearCar);
						    }
						    else
							{
								SendInfoMessage(playerid, 0, "1207", "Este no es su vehículo");
							}
						}
					}
					// COMANDO: /Llaves Amigos
				  	else if (strcmp("/Llaves Amigos", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
				    {
				        if (PlayersDataOnline[playerid][InPickup] >= HouseData[1][PickupId] &&
					         PlayersDataOnline[playerid][InPickup] <= HouseData[MAX_HOUSE][PickupId])
				        {
							new HouseId = PlayersDataOnline[playerid][MyPickupWorld];
							if (IsMyHouse(playerid, HouseId) || PlayersData[playerid][Admin] >= 8)
				            {
								ShowHouseFriends(playerid, HouseId);
							}
							else
							{
								SendInfoMessage(playerid, 0, "1207", "Esta no es su casa");
							}
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "1208", "No te encuentras en ninguna casa");
						}
					}
					// COMANDO: /Llaves Facción
				  	else if (strcmp("/Llaves Facción", cmdtext, true, 15) == 0 && strlen(cmdtext) == 15 ||
					    	 strcmp("/Llaves Faccion", cmdtext, true, 15) == 0 && strlen(cmdtext) == 15)
			    	{
						GetMyNearDoor(playerid, false, false);
			    	}
					// COMANDO: /Llaves Almacén
					else if (strcmp("/Llaves Almacén", cmdtext, true, 15) == 0 && strlen(cmdtext) == 15 ||
							 strcmp("/Llaves Almacen", cmdtext, true, 15) == 0 && strlen(cmdtext) == 15)
					{
					    new MyNearAlmacen = IsPlayerInAlmacen(playerid, true);
					    if (MyNearAlmacen != -1)
					    {
	        				if (PlayersData[playerid][Rango] <= 1)
	        				{
					            if (FaccionData[PlayersData[playerid][Faccion]][LockA][MyNearAlmacen])
					            {
						        	FaccionData[PlayersData[playerid][Faccion]][LockA][MyNearAlmacen] = false;
					                SendInfoMessage(playerid, 2, "0", "Cerró este Almacén");
					        	}
					        	else
					        	{
						        	FaccionData[PlayersData[playerid][Faccion]][LockA][MyNearAlmacen] = true;
					                SendInfoMessage(playerid, 2, "0", "Abrió este Almacén");
								}
		                  		PlayPlayerStreamSound(playerid, 1027);
	                  		}
							else
							{
								SendInfoMessage(playerid, 0, "905", "No tienes las llaves de este almacén");
							}
						}
			    	}
					// COMANDO: /Llaves Puerta
				  	else if (strcmp("/Llaves Puerta", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
			    	{
				    	GetMyNearDoor(playerid, false, false);
					}
					// COMANDO: /Llaves Coche
				  	else if (strcmp("/Llaves Coche", cmdtext, true, 13) == 0 && strlen(cmdtext) == 13)
			    	{
						LockVehicle(playerid);
			    	}
					// COMANDO: /Llaves Guantera
				  	else if (strcmp("/Llaves Guantera", cmdtext, true, 16) == 0 && strlen(cmdtext) == 16)
			    	{
						LockGuantera(playerid);
			    	}
					// COMANDO: /Llaves Guantera
				  	else if (strcmp("/Llaves Gaveta", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
			    	{
				        if (PlayersData[playerid][IsPlayerInHouse])
				        {
							if (IsMyHouse(playerid, PlayersData[playerid][IsPlayerInHouse]) ||
								 PlayersData[playerid][Alquiler] == PlayersData[playerid][IsPlayerInHouse] ||
								 IsPlayerInHouseFriend(playerid, PlayersData[playerid][IsPlayerInHouse]) != -1)
				            {
					            if (HouseData[PlayersData[playerid][IsPlayerInHouse]][GavetaLock])
					            {
					                HouseData[PlayersData[playerid][IsPlayerInHouse]][GavetaLock] = false;
	           						GameTextForPlayer(playerid, "~W~Gaveta ~G~Abierta!", 1000, 6);
				                }
				                else
				                {
									HouseData[PlayersData[playerid][IsPlayerInHouse]][GavetaLock] = true;
	           						GameTextForPlayer(playerid, "~W~Gaveta ~R~Cerrada!", 1000, 6);
				                }
								PlayPlayerStreamSound(playerid, 1002);
							}
							else
							{
								SendInfoMessage(playerid, 0, "750", "Esta no es su casa");
							}
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "749", "No te encuentras en ninguna casa");
						}
			    	}
					// COMANDO: /Llaves Maletero
				  	else if (strcmp("/Llaves Maletero", cmdtext, true, 16) == 0 && strlen(cmdtext) == 16)
			    	{
						LockMaletero(playerid);
			    	}
	 				// COMANDO: /Llaves Armario
				  	else if (strcmp("/Llaves Armario", cmdtext, true, 15) == 0 && strlen(cmdtext) == 15)
			    	{
				        if (PlayersData[playerid][IsPlayerInHouse])
				        {
							if (IsMyHouse(playerid, PlayersData[playerid][IsPlayerInHouse]) ||
								 PlayersData[playerid][Alquiler] == PlayersData[playerid][IsPlayerInHouse] ||
								 IsPlayerInHouseFriend(playerid, PlayersData[playerid][IsPlayerInHouse]) != -1)
				            {
					            if (HouseData[PlayersData[playerid][IsPlayerInHouse]][ArmarioLock])
					            {
					                HouseData[PlayersData[playerid][IsPlayerInHouse]][ArmarioLock] = false;
	           						GameTextForPlayer(playerid, "~W~Armario ~G~Abierto!", 1000, 6);
				                }
				                else
				                {
									HouseData[PlayersData[playerid][IsPlayerInHouse]][ArmarioLock] = true;
	           						GameTextForPlayer(playerid, "~W~Armario ~R~Cerrado!", 1000, 6);
				                }
								PlayPlayerStreamSound(playerid, 1027);
							}
							else
							{
								SendInfoMessage(playerid, 0, "1112", "Esta no es su casa");
							}
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "1113", "No te encuentras en ninguna casa");
						}
			    	}
	 				// COMANDO: /Llaves Refrigerador
				  	else if (strcmp("/Llaves Refrigerador", cmdtext, true, 20) == 0 && strlen(cmdtext) == 20)
			    	{
				        if (PlayersData[playerid][IsPlayerInHouse])
				        {
							if (IsMyHouse(playerid, PlayersData[playerid][IsPlayerInHouse]) ||
								 PlayersData[playerid][Alquiler] == PlayersData[playerid][IsPlayerInHouse] ||
								 IsPlayerInHouseFriend(playerid, PlayersData[playerid][IsPlayerInHouse]) != -1)
				            {
					            if (HouseData[PlayersData[playerid][IsPlayerInHouse]][RefrigeradorLock])
					            {
					                HouseData[PlayersData[playerid][IsPlayerInHouse]][RefrigeradorLock] = false;
	           						GameTextForPlayer(playerid, "~W~Refrigerador ~G~Abierto!", 1000, 6);
				                }
				                else
				                {
									HouseData[PlayersData[playerid][IsPlayerInHouse]][RefrigeradorLock] = true;
	           						GameTextForPlayer(playerid, "~W~Refrigerador ~R~Cerrado!", 1000, 6);
				                }
								PlayPlayerStreamSound(playerid, 1002);
							}
							else
							{
								SendInfoMessage(playerid, 0, "1220", "Esta no es su casa");
							}
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "1221", "No te encuentras en ninguna casa");
						}
			    	}
	 				// COMANDO: /Llaves GarageEx
				  	else if (strcmp("/Llaves GarageEx", cmdtext, true, 16) == 0 && strlen(cmdtext) == 16)
			    	{
				    	GetMyNearDoor(playerid, false, false);
			    	}
	 				// COMANDO: /Llaves Garage
				  	else if (strcmp("/Llaves Garage", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
			    	{
				    	GetMyNearDoor(playerid, false, false);
			    	}
	 				// COMANDO: /Llaves Casa
				  	else if (strcmp("/Llaves Casa", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
			    	{
				    	GetMyNearDoor(playerid, false, false);
			    	}
					// COMANDO: /Llaves Negocio
				  	else if (strcmp("/Llaves Negocio", cmdtext, true, 15) == 0 && strlen(cmdtext) == 15)
			    	{
			    	{
				    	GetMyNearDoor(playerid, false, false);
			    	}
			    	}
			    	else
			    	{
						SendInfoMessage(playerid, 0, "288", "Quizás quiso decir: /Llaves {Coche, Negocio, Casa, Armario, Puerta, PuertaEx, Facción, Almacén, Garage, Amigos, Amigos Veh}");
						SendInfoMessage(playerid, 0, "288", "Quizás quiso decir: /Llaves {Refrigerador, GarageEx, Guantera, Gaveta}");
					}
			    }
				// COMANDO: /Cambiar
				else if (strfind(cmdtext, "/Cambiar ", true) == 0)
				{
					// COMANDO: /Cambiar Frecuencia
					if (strcmp("/Cambiar Frecuencia", cmdtext, true, 19) == 0 && strlen(cmdtext) == 19)
					{
					    if (FaccionData[PlayersData[playerid][Faccion]][Radio])
					    {
							if (PlayersDataOnline[playerid][StateChannelRadio])
							{
						        new MsgFrecuencia[MAX_TEXT_CHAT];
			                    switch (PlayersDataOnline[playerid][Frecuencia])
			                    {
			                        case 0:
									{
										PlayersDataOnline[playerid][Frecuencia] = 1;
									}
									case 1:
									{
									    PlayersDataOnline[playerid][Frecuencia] = 2;
									}
									case 2:
									{
										PlayersDataOnline[playerid][Frecuencia] = 0;
									}
								}
								Acciones_ROL(playerid, ACCION_ME, "cambia de frecuencia su radio");
								format(MsgFrecuencia, sizeof(MsgFrecuencia), "Has cambiado a la frecuencia [N° %i]", PlayersDataOnline[playerid][Frecuencia]);
								SendInfoMessage(playerid, 2, "0", MsgFrecuencia);
					        }
					        else
					        {
								SendInfoMessage(playerid, 0, "112", "Tú tienes cerrado el canal Radio personal, abrelo con /Estado Radio y luego usa /Cambiar Frecuencia");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "113", "Su facción no tiene canal /R [Radio], no puedes usar /Cambiar Frecuencia");
						}
					}
					//////////--- /Cambiar Password [Nombre_Del_Jugador] [Nueva Password]              - Cambiar la password a un jugador
					else if (strfind(cmdtext, "/Cambiar Password ", true) == 0)
					{
					    MsgAdminUseCommands(8, playerid, cmdtext);
						if (PlayersData[playerid][Admin] >= 9)
						{
						    if (strlen(cmdtext[17]) >= 7)
						    {
						        new saveName[MAX_PLAYER_NAME];
						        strmid(saveName, cmdtext, GetPosSpace(cmdtext, 2)+1, GetPosSpace(cmdtext, 3), sizeof(saveName));
								ChangePasswordUser(playerid, saveName, cmdtext[GetPosSpace(cmdtext, 3) + 1]);
							}
					        else
					        {
								SendInfoMessage(playerid, 0, "1460", "El nombre tiene que contener entre 3 y 24 caracteres y la password mayor de 3");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1461", "No tienes acceso al comando /Cambiar Password");
						}
					}
					// COMANDO: /Cambiar Balas Tiempo [Nuevo Tiempo]
					else if (strfind(cmdtext, "/Cambiar Balas Tiempo ", true) == 0)
					{

						MsgAdminUseCommands(8, playerid, cmdtext);
						if (PlayersData[playerid][Admin] >= 8)
						{
							if (strval(cmdtext[22]) >= 0 &&  strval(cmdtext[22]) <= 90)
							{
								new TiempoBalas = strval(cmdtext[22]);
							    REMOVE_BULLET_TIME = TiempoBalas;
							    new MensajeBalas[120];
							    format(MensajeBalas, sizeof(MensajeBalas), "El nuevo tiempo para las balas es de: %i (Segs)", TiempoBalas);
							   	SendInfoMessage(playerid, 1, MensajeBalas, "Ayuda:");
							}
							else
							{
								SendInfoMessage(playerid, 0, "601", "El tiempo mínimo es de 5 segundos y máximo 90 segundos para mostrar balas");
							}
						}
				        else
				        {
							SendInfoMessage(playerid, 0, "600", "No tienes acceso a /Cambiar Balas Tiempo");
						}
					}
					// COMANDO: /Cambiar Balas Modelo [Nuevo Modelo]
					else if (strfind(cmdtext, "/Cambiar Balas Modelo ", true) == 0)
					{
						MsgAdminUseCommands(8, playerid, cmdtext);
						if (PlayersData[playerid][Admin] >= 8)
						{
							if (strval(cmdtext[22]) >= -30000 &&  strval(cmdtext[22]) <= -1000 ||
								 strval(cmdtext[22]) >= 0 &&  strval(cmdtext[22]) <= 19999)
							{
								new ModeloBalas = strval(cmdtext[22]);
							    OBJECT_BULLET = ModeloBalas;
							    new MensajeBalas[120];
							    format(MensajeBalas, sizeof(MensajeBalas), "El nuevo modelo para las balas es el: %i", ModeloBalas);
							   	SendInfoMessage(playerid, 1, MensajeBalas, "Ayuda:");
							}
							else
							{
								SendInfoMessage(playerid, 0, "601", "Solamente objetos validos entre 0 a 19999");
							}
						}
				        else
				        {
							SendInfoMessage(playerid, 0, "600", "No tienes acceso a /Cambiar Balas Modelo");
						}
					}
					// COMANDO: /Cambiar Nombre [Nuevo Nombre]
					else if (strfind(cmdtext, "/Cambiar Nombre ", true) == 0)
					{
				        if (PlayersDataOnline[playerid][InPickup] >= NegociosData[1][PickupOutId] &&
				             PlayersDataOnline[playerid][InPickup] <= NegociosData[MAX_BIZZ][PickupOutId])
				        {
				            if (PlayersData[playerid][Admin] >= 8 || IsMyBizz(playerid, PlayersDataOnline[playerid][MyPickupWorld], true) )
				            {
								if (!IsBizzOnRobo(playerid, PlayersDataOnline[playerid][MyPickupWorld]))
								{
						    	    if (strlen(cmdtext[16]) >= 2 && strlen(cmdtext[16]) <= 35)
						    	    {
						    	        if (IsValidStringServerOther(playerid, cmdtext))
						    	        {
				                            format(NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][NameBizz], 	MAX_BIIZ_NAME, "%s", cmdtext[16]);
				                            ActTextDrawBizz(PlayersDataOnline[playerid][MyPickupWorld]);
				                            SendInfoMessage(playerid, 2, "0", "Has modificado el nombre de tu negocio");
			                            }
									}
									else
									{
										SendInfoMessage(playerid, 0, "313", "El nombre de su negocio tiene que ser mayor de 2 y menos de 35 caracteres");
									}
								}
				            }
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "314", "No te encuentras en ningún negocio");
						}
			    	}
					// COMANDO: /Cambiar Precio Alquiler [Nuevo_Precio]
					else if (strfind(cmdtext, "/Cambiar Precio Alquiler ", true) == 0)
					{
				        if (PlayersDataOnline[playerid][InPickup] >= HouseData[1][PickupId] &&
				             PlayersDataOnline[playerid][InPickup] <= HouseData[MAX_HOUSE][PickupId])
				        {
							if (IsMyHouse(playerid, PlayersDataOnline[playerid][MyPickupWorld]))
				            {
				                if (strval(cmdtext[25]) >= 0 &&  strval(cmdtext[25]) <= 20000)
				                {
		                            HouseData[PlayersDataOnline[playerid][MyPickupWorld]][PriceRent] = strval(cmdtext[25]);
		                            ActTextDrawHouse(PlayersDataOnline[playerid][MyPickupWorld]);
		                            SendInfoMessage(playerid, 2, "0", "Has modificado el precio de alquiler de su casa");
									if (!strval(cmdtext[25]))
						            {
					                    for (new i = 0; i < MAX_PLAYERS; i++)
					                    {
				                            if(i != playerid && IsPlayerConnected(i) && PlayersDataOnline[i][State] == 3 && PlayersData[i][Alquiler] != -1 && IsMyHouse(playerid, PlayersData[i][Alquiler]))
											{
				                                PlayersData[i][Alquiler] = -1;
												SendInfoMessage(i, 3, "0", "Has sido desalojado de su alquiler!");
											}
										}
									}
	                            }
	                            else
	                            {
									SendInfoMessage(playerid, 0, "601", "El precio de alquiler mínimo es $1 y máximo $20000 (0 = No se renta)");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "599", "Esta no es su casa");
							}
						}
				        else
				        {
							SendInfoMessage(playerid, 0, "600", "No te encuentras en ninguna casa");
						}
					}

					// COMANDO: /Cambiar Precio Entrada [Nuevo_Precio]
					else if (strfind(cmdtext, "/Cambiar Precio Entrada ", true) == 0)
					{
				        if (PlayersDataOnline[playerid][InPickup] >= NegociosData[1][PickupOutId] &&
				             PlayersDataOnline[playerid][InPickup] <= NegociosData[MAX_BIZZ][PickupOutId])
				        {
				            if (IsMyBizz(playerid, PlayersDataOnline[playerid][MyPickupWorld], true) )
				            {
								if (!IsBizzOnRobo(playerid, PlayersDataOnline[playerid][MyPickupWorld]))
								{
					                if (strval(cmdtext[24]) >= 0 &&  strval(cmdtext[24]) <= 20000)
					                {
			                            NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][PriceJoin] = strval(cmdtext[24]);
			                            ActTextDrawBizz(PlayersDataOnline[playerid][MyPickupWorld]);
			                            SendInfoMessage(playerid, 2, "0", "Has modificado el precio de entrada del negocio");
		                            }
		                            else
		                            {
										SendInfoMessage(playerid, 0, "317", "El precio de entrada mínimo es $0 y máximo $20000");
									}
								}
				            }
						}
				        else
				        {
							SendInfoMessage(playerid, 0, "316", "No te encuentras en ningún negocio");
						}
					}
					// COMANDO: /Cambiar Precio Materiales [Nuevo Precio]
					else if (strfind(cmdtext, "/Cambiar Precio Materiales ", true) == 0)
					{
				        if (PlayersDataOnline[playerid][InPickup] >= NegociosData[1][PickupOutId] &&
				             PlayersDataOnline[playerid][InPickup] <= NegociosData[MAX_BIZZ][PickupOutId])
				        {
				            if (IsMyBizz(playerid, PlayersDataOnline[playerid][MyPickupWorld], true) )
				            {
				                if (strval(cmdtext[27]) >= 0 && strval(cmdtext[27]) <= 1000)
				                {
		                            NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][PricePiece] = strval(cmdtext[27]);
		                            ActTextDrawBizz(PlayersDataOnline[playerid][MyPickupWorld]);
		                            SendInfoMessage(playerid, 2, "0", "Has modificado el precio de los materiales");
	                            }
	                            else
	                            {
									SendInfoMessage(playerid, 0, "318", "El precio de compra de materiales mínimo es $0 y mayor $1000");
								}
				            }
						}
				        else
				        {
							SendInfoMessage(playerid, 0, "319", "No te encuentras en ningún negocio");
						}
					}
					// COMANDO: /Cambiar Ciudad [Nuevo_Precio]
					else if (strfind(cmdtext, "/Cambiar Ciudad ", true) == 0)
					{
						if (PlayersData[playerid][Faccion] == GOBIERNO && PlayersData[playerid][Rango] <= 3)
					    {
							new MsgCambioCiudad[MAX_TEXT_CHAT];
					        if (strval(cmdtext[16]) == playerid)
					        {
								if (PlayersData[playerid][Ciudad])
								{
								    PlayersData[playerid][Ciudad] = false;
								}
								else
								{
								    PlayersData[playerid][Ciudad] = true;
								}
								format(MsgCambioCiudad, sizeof(MsgCambioCiudad), "Ahora en su pasaporte radica como que vive en la ciudad de %s", Ciudades[PlayersData[playerid][Ciudad]]);
								SendInfoMessage(playerid, 3, "0", MsgCambioCiudad);
							}
						    else if (IsPlayerNear(playerid, strval(cmdtext[16]),
								 "873",
								 "874",
								 "875",
								 "El jugador que le desea cambiar de ciudad no se encuentra conectado",
								 "El jugador que le desea cambiar de ciudad no se ha logueado",
								 "El jugador que le desea cambiar de ciudad no se encuentra cerca de tí"))
						    {
								if (PlayersData[strval(cmdtext[16])][Ciudad])
								{
								    PlayersData[strval(cmdtext[16])][Ciudad] = false;
								}
								else
								{
								    PlayersData[strval(cmdtext[16])][Ciudad] = true;
								}
								new MsgCambioCiudadMe[MAX_TEXT_CHAT];
								format(MsgCambioCiudad, sizeof(MsgCambioCiudad), "El %s %s le ha cambiado en su pasaporte la ciudad donde vive a %s", FaccionesRangos[PlayersData[playerid][Faccion]][PlayersData[playerid][Rango]], PlayersDataOnline[playerid][NameOnlineFix], Ciudades[PlayersData[strval(cmdtext[16])][Ciudad]]);
								format(MsgCambioCiudadMe, sizeof(MsgCambioCiudadMe), "Le has cambiado al ciudadano %s a la ciudad %s",PlayersDataOnline[strval(cmdtext[16])][NameOnlineFix], Ciudades[PlayersData[strval(cmdtext[16])][Ciudad]]);
								SendInfoMessage(playerid, 3, "0", MsgCambioCiudadMe);
								SendInfoMessage(strval(cmdtext[16]), 3, "0", MsgCambioCiudad);
						    }
					    }
				        else
				        {
							SendInfoMessage(playerid, 0, "876", "Usted no es el Presidente ni Vicepresidente");
						}
					}
					// COMANDO: /Cambiar Nombres Servidor [ID] [Nuevo texto nombre servidor] - Sistema de nombres del servidor
					else if (strfind(cmdtext, "/Cambiar Servidor Nombres", true) == 0)
					{
						MsgAdminUseCommands(8, playerid, cmdtext);
						if (PlayersData[playerid][Admin] >= 8)
						{
							new SpawnIDAsignar = strval(cmdtext[GetPosSpace(cmdtext, 3)]);
							if (SpawnIDAsignar >= 0 && SpawnIDAsignar <= 3)
							{
							    new NuevaID[MAX_TEXT_CHAT];
								NombreIDCambiar = SpawnIDAsignar;
								format(NuevaID, sizeof(NuevaID), "Estás editando el nombre en el slot nº: %i", NombreIDCambiar);
								SendInfoMessage(playerid, 3, "0", NuevaID);

							    ShowNombresDialog(playerid);
							}
							else
							{
								SendInfoMessage(playerid, 0, "201", "El Slot de nombre a cambiar no es valido (0-3).");
								return 1;
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "202", "Tú no tienes acceso al comando /Cambiar Nombres Servidor [ID] [Nombre].");
					        return 1;
						}
					}
			//		23- * 		/Cambiar Logo                   - Cambiar el logo del Staff
					else if (strfind(cmdtext, "/Cambiar Logo ", true) == 0)
					{
						MsgAdminUseCommands(8, playerid, cmdtext);
						if (PlayersData[playerid][Admin] >= 8)
						{
							if (strlen(cmdtext) > 16)
							{
								new new_logo[30];
								strmid(new_logo, cmdtext, 14, strlen(cmdtext), sizeof(new_logo));
							    LOGO_STAFF = new_logo;
							    new msglogo[120];
							    format(msglogo, sizeof(msglogo), "El nuevo logo del staff es!: %s", new_logo);
							   	SendInfoMessage(playerid, 1, msglogo, "Ayuda:");
							   	return 1;
							}
							else
							{
								SendInfoMessage(playerid, 0, "201", "El logo a cambiar es muy corto.");
						    	return 1;
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "202", "Tú no tienes acceso al comando /Cambiar Logo.");
					        return 1;
						}
					}
			    	else
			    	{
						SendInfoMessage(playerid, 0, "315", "Quizás quiso decir: /Cambiar {Frecuencia, Nombre [Nuevo Nombre], Precio Entrada [Nuevo Precio]}");
						SendInfoMessage(playerid, 0, "315", "Quizás quiso decir: /Cambiar {Precio Materiales [Nuevo Precio], Ciudad [ID]}");
					}
				}
				// COMANDO: /Info
				else if (strfind(cmdtext, "/Info", true) == 0)
				{
					// COMANDO: /Info Negocio
				  	if (strcmp("/Info Negocio", cmdtext, true, 13) == 0 && strlen(cmdtext) == 13)
			    	{
				        if (PlayersDataOnline[playerid][InPickup] >= NegociosData[1][PickupOutId] &&
				             PlayersDataOnline[playerid][InPickup] <= NegociosData[MAX_BIZZ][PickupOutId])
				        {
				            if (PlayersData[playerid][Admin] >= 7 || IsMyBizz(playerid, PlayersDataOnline[playerid][MyPickupWorld], true))
				            {
				                new MsgInfoNegocio[6][MAX_TEXT_CHAT];
				                format(MsgInfoNegocio[0], MAX_TEXT_CHAT, "((ID del Negocio: %i - Tipo: %i)) Nombre del Negocio: %s | Materiales: [%i/5000]",
					                PlayersDataOnline[playerid][MyPickupWorld],
					                NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Type],
									NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][NameBizz],
									NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Materiales]);
				                format(MsgInfoNegocio[1], MAX_TEXT_CHAT, "Precio Entrada: $%i",
									NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][PriceJoin]);
				                format(MsgInfoNegocio[2], MAX_TEXT_CHAT, "Precio que paga por Materiales (0  = Deshabilitado): $%i",
									NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][PricePiece]);
				                format(MsgInfoNegocio[3], MAX_TEXT_CHAT, "Deposito: $%i",
									NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Deposito]);
				                format(MsgInfoNegocio[4], MAX_TEXT_CHAT, "Dinero Extorsionado: $%i",
									NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][DepositoExtorsion]);
								format(MsgInfoNegocio[5], MAX_TEXT_CHAT, "Precio del Negocio: $%i",
									NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Precio]);

				    			SendInfoMessage(playerid, 1, " ", "|___________________  Negocio ___________________|");
				    			SendInfoMessage(playerid, 1, MsgInfoNegocio[0], "Negocio:");
				    			SendInfoMessage(playerid, 1, MsgInfoNegocio[1], "Negocio:");
				    			SendInfoMessage(playerid, 1, MsgInfoNegocio[2], "Negocio:");
				    			SendInfoMessage(playerid, 1, MsgInfoNegocio[3], "Negocio:");
				    			SendInfoMessage(playerid, 1, MsgInfoNegocio[4], "Negocio:");
				    			SendInfoMessage(playerid, 1, MsgInfoNegocio[5], "Negocio:");
				    			SendInfoMessage(playerid, 1, " ", "|_____________________ Fin ____________________|");
				            }
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "312", "No te encuentras en ningún negocio");
						}
					}
					//////////--- /Info Garage [ID]              - VER INFORMACIóN DE UNA CASA
				  	else if (strcmp("/Info Garage", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
					{
						MsgAdminUseCommands(8, playerid, cmdtext);
						if (PlayersData[playerid][Admin] >= 8)
						{
       	       				new GarageID, HouseID, LockID; IsPlayerInGarageFun(playerid, HouseID, GarageID, LockID);
			                if (GarageID != -1)
			                {
		                        new MsgChangeType[MAX_TEXT_CHAT];
		                        format(MsgChangeType, sizeof(MsgChangeType), "Este garage es [ID: %i], tipo [%i] pertenece a la casa [ID: %i]",GarageID, Garages[HouseID][GarageID][TypeGarageE],HouseID);
				                SendInfoMessage(playerid, 2, "0", MsgChangeType);
                            }
						}
						else
						{
							SendInfoMessage(playerid, 0, "1173", "No tienes acceso al comando /Info Garage");
						}
					}
					// COMANDO: /Info Casa
				  	else if (strcmp("/Info Casa", cmdtext, true, 10) == 0 && strlen(cmdtext) == 10)
			    	{
				        if (PlayersDataOnline[playerid][InPickup] >= HouseData[1][PickupId] &&
					         PlayersDataOnline[playerid][InPickup] <= HouseData[MAX_HOUSE][PickupId])
				        {
							if (IsMyHouse(playerid, PlayersDataOnline[playerid][MyPickupWorld]) || PlayersData[playerid][Admin] >= 7)
				            {
				                new MsgInfoCasa[4][MAX_TEXT_CHAT];
				                format(MsgInfoCasa[0], MAX_TEXT_CHAT, "((ID de la Casa: %i - Tipo: %i))",
					                PlayersDataOnline[playerid][MyPickupWorld],
									HouseData[PlayersDataOnline[playerid][MyPickupWorld]][TypeHouseId]);
				                format(MsgInfoCasa[1], MAX_TEXT_CHAT, "Precio Alquiler: $%i (0  = Deshabilitado)",
									HouseData[PlayersDataOnline[playerid][MyPickupWorld]][PriceRent]);
				                format(MsgInfoCasa[2], MAX_TEXT_CHAT, "Dinero del Alquiler: $%i",
									HouseData[PlayersDataOnline[playerid][MyPickupWorld]][Deposito]);
				                format(MsgInfoCasa[3], MAX_TEXT_CHAT, "Precio de la Casa: $%i",
									HouseData[PlayersDataOnline[playerid][MyPickupWorld]][Price]);

				    			SendInfoMessage(playerid, 1, " ", "|___________________  Casa ___________________|");
				    			SendInfoMessage(playerid, 1, MsgInfoCasa[0], "Casa:");
				    			SendInfoMessage(playerid, 1, MsgInfoCasa[1], "Casa:");
				    			SendInfoMessage(playerid, 1, MsgInfoCasa[2], "Casa:");
				    			SendInfoMessage(playerid, 1, MsgInfoCasa[3], "Casa:");
				    			SendInfoMessage(playerid, 1, " ", "|_____________________ Fin ____________________|");
				            }
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "1158", "No te encuentras en ningúna casa");
						}
					}
			    	else
			    	{
						SendInfoMessage(playerid, 0, "765", "Quizás quiso decir: /Info {Negocio, Casa}");
					}
				}
				// COMANDO: /Bolsa [ID]
			  	else if (strfind(cmdtext, "/Bolsa ", true) == 0)
		    	{
		    		if (PlayersData[playerid][HaveBolsa])
		    		{
					    if (playerid == strval(cmdtext[7]))
					    {
					        Acciones_ROL(playerid, ACCION_ME, "mira al interior de su bolsa");
					        ShowBolsaToPlayer(playerid, strval(cmdtext[7]));
					    }
					    else if (IsPlayerNear(playerid, strval(cmdtext[7]),
							 "1222",
							 "1223",
							 "1224",
							 "El jugador que desea mostrarle su bolsa no se encuentra conectado",
							 "El jugador que desea mostrarle su bolsa no se encuentra logueado",
							 "El jugador que desea mostrarle su bolsa no se encuentra cerca de tí"))
					    {
							new MsgBolsaMe[MAX_TEXT_CHAT];
							format(MsgBolsaMe, sizeof(MsgBolsaMe), "le enseña su bolsa a %s", PlayersDataOnline[strval(cmdtext[7])][NameOnlineFix]);
					        Acciones_ROL(playerid, ACCION_ME, MsgBolsaMe);
							ShowBolsaToPlayer(playerid, strval(cmdtext[7]));
					    }
				    }
				    else
				    {
						SendInfoMessage(playerid, 0, "1227", "Usted no tiene una bolsa");
					}
		    	}
				// COMANDO: /Cartera [ID]
			  	else if (strfind(cmdtext, "/Cartera ", true) == 0)
		    	{
				    if (playerid == strval(cmdtext[9]))
				    {
				        Acciones_ROL(playerid, ACCION_ME, "mira su cartera");
				        ShowCarteraToPlayer(playerid, strval(cmdtext[9]));
				    }
				    else if (IsPlayerNear(playerid, strval(cmdtext[9]),
						 "1318",
						 "1319",
						 "1320",
						 "El jugador que desea mostrarle su cartera no se encuentra conectado",
						 "El jugador que desea mostrarle su cartera no se encuentra logueado",
						 "El jugador que desea mostrarle su cartera no se encuentra cerca de tí"))
				    {
						new MsgCarteraMe[MAX_TEXT_CHAT];
						format(MsgCarteraMe, sizeof(MsgCarteraMe), "le enseña su cartera a %s", PlayersDataOnline[strval(cmdtext[9])][NameOnlineFix]);
				        Acciones_ROL(playerid, ACCION_ME, MsgCarteraMe);
						ShowCarteraToPlayer(playerid, strval(cmdtext[9]));
				    }
		    	}
				// COMANDO: /Bolsillos [ID]
			  	else if (strfind(cmdtext, "/Bolsillos ", true) == 0)
		    	{
				    if (playerid == strval(cmdtext[11]))
				    {
				        Acciones_ROL(playerid, ACCION_ME, "se revisa en los bolsillos");
				        ShowBolsillosToPlayer(playerid, strval(cmdtext[11]));
				    }
				    else if (IsPlayerNear(playerid, strval(cmdtext[11]),
						 "1065",
						 "1066",
						 "1067",
						 "El jugador que desea mostrarle sus bolsillos no se encuentra conectado",
						 "El jugador que desea mostrarle sus bolsillos no se encuentra logueado",
						 "El jugador que desea mostrarle sus bolsillos no se encuentra cerca de tí"))
				    {
						new MsgBolsillosMe[MAX_TEXT_CHAT];
						format(MsgBolsillosMe, sizeof(MsgBolsillosMe), "le enseña su bolsillos a %s", PlayersDataOnline[strval(cmdtext[11])][NameOnlineFix]);
				        Acciones_ROL(playerid, ACCION_ME, MsgBolsillosMe);
						ShowBolsillosToPlayer(playerid, strval(cmdtext[11]));
				    }
		    	}
				// COMANDO: /Retirar
				else if (strfind(cmdtext, "/Retirar", true) == 0)
				{
					// COMANDO: /Retirar Almacén
					if (strfind(cmdtext, "/Retirar Almacén ", true) == 0 ||
					    strfind(cmdtext, "/Retirar Almacen ", true) == 0)
					{
					    new MyNearAlmacen = IsPlayerInAlmacen(playerid,true);
					    if (MyNearAlmacen != -1)
					    {
							if (PlayersData[playerid][Faccion] == CAMIONEROS && PlayersData[playerid][Rango] <= 2  ||
								 PlayersData[playerid][Faccion] == TRAFICANTES && PlayersData[playerid][Rango] <= 2	||
								 PlayersData[playerid][Faccion] == YKZ ||
								 PlayersData[playerid][Faccion] == LCN ||
								 PlayersData[playerid][Faccion] == SICARIOS && PlayersData[playerid][Rango] <= 3 ||
 								 PlayersData[playerid][Faccion] == COLTS    && PlayersData[playerid][Rango] <= 1 ||
 								 PlayersData[playerid][Faccion] == HAMPA	&& PlayersData[playerid][Rango] <= 1 ||
 								 PlayersData[playerid][Faccion] == HEORS    && PlayersData[playerid][Rango] <= 1  )
							{
						        if (strval(cmdtext[17]) >= 1 && strval(cmdtext[17]) <= 2000)
						        {
						            if (FaccionData[PlayersData[playerid][Faccion]][LockA][MyNearAlmacen])
						            {
							            if (FaccionData[PlayersData[playerid][Faccion]][Almacen][MyNearAlmacen] >= strval(cmdtext[17]))
							            {
							                if (IsNotFullMaterialsPlayer(playerid, strval(cmdtext[17])))
								            {
												FaccionData[PlayersData[playerid][Faccion]][Almacen][MyNearAlmacen] = FaccionData[PlayersData[playerid][Faccion]][Almacen][MyNearAlmacen] - strval(cmdtext[17]);
												PlayersData[playerid][Materiales] =  PlayersData[playerid][Materiales] + strval(cmdtext[17]);

										        new MsgRetirarAlmacen[MAX_TEXT_CHAT];
										        format(MsgRetirarAlmacen, sizeof(MsgRetirarAlmacen), "Retiró %i de materiales de este almacén, ahora quedan %i de materiales", strval(cmdtext[17]), FaccionData[PlayersData[playerid][Faccion]][Almacen][MyNearAlmacen]);
								    			SendInfoMessage(playerid, 1, " ", "|___________________  Almacén ___________________|");
								    			SendInfoMessage(playerid, 1, MsgRetirarAlmacen, "Almacén: ");
								    			SendInfoMessage(playerid, 1, " ", "|_____________________ Fin ____________________|");
									        }
									        else
									        {
										    	SendInfoMessage(playerid, 0, "981", "No puedes cargar esa cantidad de materiales encima! Recuerda que el máximo es 2500");
											}
										}
										else
										{
											SendInfoMessage(playerid, 0, "735", "No queda esa cantidad de materiales para retirar del almacén");
										}
									}
									else
									{
										SendInfoMessage(playerid, 0, "900", "Este almacén se encuentra cerrado");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "737", "Mínimo puede retirar 1 de materiales y máximo 2000");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "802", "Usted no puede retirar materiales del almacén");
							}
						}
			    	}
					// COMANDO: /Retirar Facción
					else if (strfind(cmdtext, "/Retirar Facción ", true) == 0 ||
					    strfind(cmdtext, "/Retirar Faccion ", true) == 0)
					{
		    	        if (PlayersData[playerid][Rango] == 0)
		    	        {
						    new MyNearFaccion = GetNearFaccion(playerid);
						    if (MyNearFaccion != -1)
						    {
						        if (MyNearFaccion == PlayersData[playerid][Faccion])
								{
							        if (FaccionData[MyNearFaccion][Deposito] >= strval(cmdtext[17]))
							        {
									    if (IsNotZero(playerid, strval(cmdtext[17])))
             {
									        new MsgConsultarFaccion[MAX_TEXT_CHAT];
									        format(MsgConsultarFaccion, sizeof(MsgConsultarFaccion), "Tiene usted $%i en su facción", FaccionData[MyNearFaccion][Deposito]);
							    			SendInfoMessage(playerid, 1, " ", "|___________________  Facción ___________________|");
							    			SendInfoMessage(playerid, 1, MsgConsultarFaccion, "Facción:");
							    			SendInfoMessage(playerid, 1, " ", "|_____________________ Fin ____________________|");

								            FaccionData[MyNearFaccion][Deposito] = FaccionData[MyNearFaccion][Deposito] - strval(cmdtext[17]);
								            GivePlayerMoneyEx(playerid, strval(cmdtext[17]));

									        new MsgRetirarFaccion[MAX_TEXT_CHAT];
									        format(MsgRetirarFaccion, sizeof(MsgRetirarFaccion), "Retiró $%i de la facción, su nuevo saldo es: $%i", strval(cmdtext[17]), FaccionData[MyNearFaccion][Deposito]);
							    			SendInfoMessage(playerid, 1, " ", "|___________________  Facción ___________________|");
							    			SendInfoMessage(playerid, 1, MsgRetirarFaccion, "Facción:");
							    			SendInfoMessage(playerid, 1, " ", "|_____________________ Fin ____________________|");
						    			}
									}
									else
									{
										SendInfoMessage(playerid, 0, "386", "No tienes esa cantidad de dinero para retirar del la facción");
									}
				    			}
								else
								{
									SendInfoMessage(playerid, 0, "858", "Esta no es su facción");
								}
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "387", "Usted no es líder");
						}
			    	}
					// COMANDO: /Retirar Extorsión
				  	else if (strcmp("/Retirar Extorsión", cmdtext, true, 18) == 0 && strlen(cmdtext) == 18 ||
	                    strcmp("/Retirar Extorsion", cmdtext, true, 18) == 0 && strlen(cmdtext) == 18
					 )
					{
						if (PlayersDataOnline[playerid][InPickup] >= NegociosData[1][PickupOutId] &&
						     PlayersDataOnline[playerid][InPickup] <= NegociosData[MAX_BIZZ][PickupOutId])
						{
	                        if (IsMyExtorsion(playerid, PlayersDataOnline[playerid][MyPickupWorld]))
	                        {
	                            if (!IsBizzOnRobo(playerid, PlayersDataOnline[playerid][MyPickupWorld]))
	                            {
									if (NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][DepositoExtorsion] > 0)
									{
							            GivePlayerMoneyEx(playerid, NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][DepositoExtorsion]);

										new MsgExtorsionRatirar[MAX_TEXT_CHAT];
										format(MsgExtorsionRatirar, sizeof(MsgExtorsionRatirar), "Retiró $%i extorsionados de este negocio", NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][DepositoExtorsion]);
										SendInfoMessage(playerid, 2, "0", MsgExtorsionRatirar);
										NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][DepositoExtorsion] = 0;
									}
									else
									{
										SendInfoMessage(playerid, 0, "353", "No hay dinero para extorsionar en este negocio");
									}
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "348", "Usted no extorsiona este negocio");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "349", "No te encuentras en ningún negocio");
						}
					}
					// COMANDO: /Retirar Cajero
					else if (strfind(cmdtext, "/Retirar Cajero ", true) == 0)
					{
						ShowRetirarBancoFunction(playerid, true, strval(cmdtext[16]));
			    	}
					// COMANDO: /Retirar Casa
					else if (strcmp("/Retirar Casa", cmdtext, true, 13) == 0 && strlen(cmdtext) == 13)
					{
						if (PlayersDataOnline[playerid][InPickup] >= HouseData[1][PickupId] &&
						     PlayersDataOnline[playerid][InPickup] <= HouseData[MAX_HOUSE][PickupId])
						{
	                        if (IsMyHouse(playerid, PlayersDataOnline[playerid][MyPickupWorld]))
	                        {
								if (HouseData[PlayersDataOnline[playerid][MyPickupWorld]][Deposito] > 0)
								{
						            GivePlayerMoneyEx(playerid, HouseData[PlayersDataOnline[playerid][MyPickupWorld]][Deposito]);

									new MsgCasaRatirar[MAX_TEXT_CHAT];
									format(MsgCasaRatirar, sizeof(MsgCasaRatirar), "Retiró $%i de ganancias del alquiler", HouseData[PlayersDataOnline[playerid][MyPickupWorld]][Deposito]);
									SendInfoMessage(playerid, 2, "0", MsgCasaRatirar);
									HouseData[PlayersDataOnline[playerid][MyPickupWorld]][Deposito] = 0;
								}
								else
								{
									SendInfoMessage(playerid, 0, "605", "No hay dinero para retirar del alquiler");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "603", "Esta no es su casa");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "604", "No te encuentras en ninguna casa");
						}
					}
					// COMANDO: /Retirar Negocio
					else if (strfind(cmdtext, "/Retirar Negocio ", true) == 0)
					{
				        if (PlayersDataOnline[playerid][InPickup] >= NegociosData[1][PickupOutId] &&
				             PlayersDataOnline[playerid][InPickup] <= NegociosData[MAX_BIZZ][PickupOutId])
				        {
							new BizzId = PlayersDataOnline[playerid][MyPickupWorld];
				            if (IsMyBizz(playerid, BizzId, true) )
				            {
								if (!IsBizzOnRobo(playerid, PlayersDataOnline[playerid][MyPickupWorld]))
								{
							        if (NegociosData[BizzId][Deposito] >= strval(cmdtext[17]))
							        {
									    if (IsNotZero(playerid, strval(cmdtext[17])))
									    {
								            NegociosData[BizzId][Deposito] = NegociosData[BizzId][Deposito] - strval(cmdtext[17]);
								            GivePlayerMoneyEx(playerid, strval(cmdtext[17]));

									        new MsgRetirarNegocio[MAX_TEXT_CHAT];
									        format(MsgRetirarNegocio, sizeof(MsgRetirarNegocio), "Retiró $%i del negocio, su nuevo saldo es: $%i", strval(cmdtext[17]), NegociosData[BizzId][Deposito]);
							    			SendInfoMessage(playerid, 1, " ", "|___________________  Negocio ___________________|");
							    			SendInfoMessage(playerid, 1, MsgRetirarNegocio, "Negocio:");
							    			SendInfoMessage(playerid, 1, " ", "|_____________________ Fin ____________________|");
							    		}
							        }
									else
									{
										SendInfoMessage(playerid, 0, "308", "No tienes esa cantidad de dinero para retirar del negocio");
									}
								}
				            }
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "307", "No te encuentras en ningún negocio");
						}
					}
			    	else
			    	{
						SendInfoMessage(playerid, 0, "302", "Quizás quiso decir: /Retirar {Cajero [Cantidad], Negocio [Cantidad], Extorsión, Facción [Cantidad]}");
						SendInfoMessage(playerid, 0, "302", "Quizás quiso decir: /Retirar {Almacén [Cantidad], Casa}");
					}
				}
				// COMANDO: /DarDinero [ID]
				else if (strfind(cmdtext, "/DarDinero ", true) == 0)
					{
					    if (PlayersData[playerid][Admin] >= 9)
						{
							new playeridpagar = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
						    new Dineropagar = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
							if (IsPlayerConnected(playeridpagar))
							{
								    if (Dineropagar <= 1000000 && Dineropagar >= -1000000)
								    {
	               						// PAGO
	         							GivePlayerMoneyEx(playeridpagar, Dineropagar);

										new Float:player_pos_x, Float:player_pos_y, Float:player_pos_z;
										GetPlayerPos(playeridpagar, player_pos_x, player_pos_y, player_pos_z);

										GetPlayerPos(playerid, player_pos_x, player_pos_y, player_pos_z);

										new Mensaje_Pagar[128];
										new Mensaje_PagarME[128];

										// FORMATEO DEL MENSAJE MENSAJES
                                        format(Mensaje_Pagar, sizeof(Mensaje_Pagar), "%s Has recibido de [ID: %i] %s $%i Dinero.",LOGO_STAFF,playerid ,PlayersDataOnline[playerid][NameOnlineFix],Dineropagar);
										format(Mensaje_PagarME, sizeof(Mensaje_PagarME), "%s Le has dado a [ID: %i] %s $%i Dinero, con el comando /DarDinero.",LOGO_STAFF,playeridpagar ,PlayersDataOnline[playeridpagar][NameOnlineFix], Dineropagar);

										// ENVIO DEL MENSAJE
										SendClientMessage(playeridpagar, COLOR_MENSAJES_DE_AVISOS, Mensaje_Pagar);
										SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, Mensaje_PagarME);


									}
									else
									{
										SendInfoMessage(playerid, 0, "1611", "Debe escribir una cantidad entre -100000 y 100000.");
									}
							}

							else
							{
								SendInfoMessage(playerid, 0, "1610", "El jugador al que le quiére darle dinero no se encuentra conectado.");
							}
						}

						else
						{
							SendInfoMessage(playerid, 0, "1609", "Tú no tienes acceso al comando /DarDinero.");
						}
				}
				// COMANDO: /DarCoins [ID]
				else if (strfind(cmdtext, "/DarCoins ", true) == 0)
				{
				    if (PlayersData[playerid][Admin] >= 9)
					{
						new playeridpagar = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
					    new Dineropagar = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
						if (IsPlayerConnected(playeridpagar))
						{
							    if (Dineropagar <= 1000000 && Dineropagar >= -1000000)
							    {
               						// PAGO
									new Mensaje_Pagar[128];
									new Mensaje_PagarME[128];
									// FORMATEO DEL MENSAJE MENSAJES
                                    format(Mensaje_Pagar, sizeof(Mensaje_Pagar), "%s Has recibido de [ID: %i] %s %i Coin's.",LOGO_STAFF,playerid ,PlayersDataOnline[playerid][NameOnlineFix],Dineropagar);
									format(Mensaje_PagarME, sizeof(Mensaje_PagarME), "%s Le has dado a [ID: %i] %s %i Coin's, con el comando /DarCoins.",LOGO_STAFF,playeridpagar ,PlayersDataOnline[playeridpagar][NameOnlineFix], Dineropagar);
									// ENVIO DEL MENSAJE
									SendClientMessage(playeridpagar, COLOR_MENSAJES_DE_AVISOS, Mensaje_Pagar);
									SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, Mensaje_PagarME);
							        PlayersData[playeridpagar][cFamCoin] = PlayersData[playeridpagar][cFamCoin] + Dineropagar;
								}
								else
								{
									SendInfoMessage(playerid, 0, "1611", "Debe escribir una cantidad entre -100000 y 100000.");
								}
						}

						else
						{
							SendInfoMessage(playerid, 0, "1610", "El jugador al que le quiere dar materiales no se encuentra conectado.");
						}
					}

					else
					{
						SendInfoMessage(playerid, 0, "1609", "Tú no tienes acceso al comando /DarCoins.");
					}
				}
				// COMANDO: /DarMateriales [ID]
				else if (strfind(cmdtext, "/DarMateriales ", true) == 0)
				{
				    if (PlayersData[playerid][Admin] >= 9)
					{
						new playeridpagar = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
					    new Dineropagar = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
						if (IsPlayerConnected(playeridpagar))
						{
							    if (Dineropagar <= 100000 && Dineropagar >= -100000)
							    {
               						// PAGO
									new Mensaje_Pagar[128];
									new Mensaje_PagarME[128];
									// FORMATEO DEL MENSAJE MENSAJES
                                    format(Mensaje_Pagar, sizeof(Mensaje_Pagar), "%s Has recibido de [ID: %i] %s %i Materiales.",LOGO_STAFF,playerid ,PlayersDataOnline[playerid][NameOnlineFix],Dineropagar);
									format(Mensaje_PagarME, sizeof(Mensaje_PagarME), "%s Le has dado a [ID: %i] %s %i Materiales, con el comando /DarMateriales.",LOGO_STAFF,playeridpagar ,PlayersDataOnline[playeridpagar][NameOnlineFix], Dineropagar);
									// ENVIO DEL MENSAJE
									SendClientMessage(playeridpagar, COLOR_MENSAJES_DE_AVISOS, Mensaje_Pagar);
									SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, Mensaje_PagarME);
							        PlayersData[playeridpagar][Materiales] = PlayersData[playeridpagar][Materiales] + Dineropagar;
								}
								else
								{
									SendInfoMessage(playerid, 0, "1611", "Debe escribir una cantidad entre -100000 y 100000.");
								}
						}

						else
						{
							SendInfoMessage(playerid, 0, "1610", "El jugador al que le quiere dar materiales no se encuentra conectado.");
						}
					}

					else
					{
						SendInfoMessage(playerid, 0, "1609", "Tú no tienes acceso al comando /DarMateriales.");
					}
				}
				// COMANDO: /DarHoras [ID] [Cantidad]
				else if (strfind(cmdtext, "/DarHoras ", true) == 0)
				{
				    if (PlayersData[playerid][Admin] >= 7)
					{
						new playeridpagar = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
					    new Dineropagar = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
						if (IsPlayerConnected(playeridpagar))
						{
							    if (Dineropagar <= 1000000 && Dineropagar >= -1000000)
							    {
               						// PAGO
									new Mensaje_Pagar[128];
									new Mensaje_PagarME[128];
									// FORMATEO DEL MENSAJE MENSAJES
                                    format(Mensaje_Pagar, sizeof(Mensaje_Pagar), "%s Has recibido de [ID: %i] %s %i Horas de Juego.",LOGO_STAFF,playerid ,PlayersDataOnline[playerid][NameOnlineFix],Dineropagar);
									format(Mensaje_PagarME, sizeof(Mensaje_PagarME), "%s Le has dado a [ID: %i] %s %i Horas de Juego, con el comando /DarHoras.",LOGO_STAFF,playeridpagar ,PlayersDataOnline[playeridpagar][NameOnlineFix], Dineropagar);
									// ENVIO DEL MENSAJE
									SendClientMessage(playeridpagar, COLOR_MENSAJES_DE_AVISOS, Mensaje_Pagar);
									SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, Mensaje_PagarME);
							        PlayersData[playeridpagar][HoursPlaying] = Dineropagar;
								}
								else
								{
									SendInfoMessage(playerid, 0, "1614", "Debe escribir una cantidad entre -100000 y 100000.");
								}
						}

						else
						{
							SendInfoMessage(playerid, 0, "1615", "El jugador al que le quiere dar HoursPlaying no se encuentra conectado.");
						}
					}

					else
					{
						SendInfoMessage(playerid, 0, "1616", "Tú no tienes acceso al comando /DarHoras.");
					}
				}
				// COMANDO: /DarPiezas [ID]
				else if (strfind(cmdtext, "/DarPiezas ", true) == 0)
				{
				    if (PlayersData[playerid][Admin] >= 9)
					{
						new playeridpagar = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
					    new Dineropagar = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
						if (IsPlayerConnected(playeridpagar))
						{
							    if (Dineropagar <= 100000 && Dineropagar >= -100000)
							    {
               						// PAGO
									new Mensaje_Pagar[128];
									new Mensaje_PagarME[128];
									// FORMATEO DEL MENSAJE MENSAJES
                                    format(Mensaje_Pagar, sizeof(Mensaje_Pagar), "%s Has recibido de [ID: %i] %s %i Piezas.",LOGO_STAFF,playerid ,PlayersDataOnline[playerid][NameOnlineFix],Dineropagar);
									format(Mensaje_PagarME, sizeof(Mensaje_PagarME), "%s Le has dado a [ID: %i] %s %i Piezas, con el comando /DarPiezas.",LOGO_STAFF,playeridpagar ,PlayersDataOnline[playeridpagar][NameOnlineFix], Dineropagar);
									// ENVIO DEL MENSAJE
									SendClientMessage(playeridpagar, COLOR_MENSAJES_DE_AVISOS, Mensaje_Pagar);
									SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, Mensaje_PagarME);
							        PlayersData[playeridpagar][Piezas] = PlayersData[playeridpagar][Piezas] + Dineropagar;
								}
								else
								{
									SendInfoMessage(playerid, 0, "1614", "Debe escribir una cantidad entre -100000 y 100000.");
								}
						}

						else
						{
							SendInfoMessage(playerid, 0, "1615", "El jugador al que le quiere dar Piezas no se encuentra conectado.");
						}
					}

					else
					{
						SendInfoMessage(playerid, 0, "1616", "Tú no tienes acceso al comando /DarPiezas.");
					}
				}
				// COMANDO: /DarGanzúas [ID]
				else if (strfind(cmdtext, "/DarGanzúas ", true) == 0 ||
						 strfind(cmdtext, "/DarGanzuas ", true) == 0)
				{
				    if (PlayersData[playerid][Admin] >= 9)
					{
						new playeridpagar = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
					    new Dineropagar = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
						if (IsPlayerConnected(playeridpagar))
						{
							    if (Dineropagar <= 100000 && Dineropagar >= -100000)
							    {
               						// PAGO
									new Mensaje_Pagar[128];
									new Mensaje_PagarME[128];
									// FORMATEO DEL MENSAJE MENSAJES
                                    format(Mensaje_Pagar, sizeof(Mensaje_Pagar), "%s Has recibido de [ID: %i] %s %i Ganzúas.",LOGO_STAFF,playerid ,PlayersDataOnline[playerid][NameOnlineFix],Dineropagar);
									format(Mensaje_PagarME, sizeof(Mensaje_PagarME), "%s Le has dado a [ID: %i] %s %i Ganzúas, con el comando /DarGanzúas.",LOGO_STAFF,playeridpagar ,PlayersDataOnline[playeridpagar][NameOnlineFix], Dineropagar);
									// ENVIO DEL MENSAJE
									SendClientMessage(playeridpagar, COLOR_MENSAJES_DE_AVISOS, Mensaje_Pagar);
									SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, Mensaje_PagarME);
							        PlayersData[playeridpagar][Ganzuas] = PlayersData[playeridpagar][Ganzuas] + Dineropagar;
								}
								else
								{
									SendInfoMessage(playerid, 0, "1611", "Debe escribir una cantidad entre -100000 y 100000.");
								}
						}

						else
						{
							SendInfoMessage(playerid, 0, "1610", "El jugador al que le quiere dar ganzúas no se encuentra conectado.");
						}
					}

					else
					{
						SendInfoMessage(playerid, 0, "1609", "Tú no tienes acceso al comando /DarGanzúas.");
					}
				}
				// COMANDO: /DarDrogas [ID]
				else if (strfind(cmdtext, "/DarDrogas ", true) == 0)
				{
				    if (PlayersData[playerid][Admin] >= 9)
					{
						new playeridpagar = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
					    new Dineropagar = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
						if (IsPlayerConnected(playeridpagar))
						{
							    if (Dineropagar <= 100000 && Dineropagar >= -100000)
							    {
               						// PAGO
									new Mensaje_Pagar[128];
									new Mensaje_PagarME[128];
									// FORMATEO DEL MENSAJE MENSAJES
                                    format(Mensaje_Pagar, sizeof(Mensaje_Pagar), "%s Has recibido de [ID: %i] %s %i Drogas.",LOGO_STAFF,playerid ,PlayersDataOnline[playerid][NameOnlineFix],Dineropagar);
									format(Mensaje_PagarME, sizeof(Mensaje_PagarME), "%s Le has dado a [ID: %i] %s %i Drogas, con el comando /DarDrogas.",LOGO_STAFF,playeridpagar ,PlayersDataOnline[playeridpagar][NameOnlineFix], Dineropagar);
									// ENVIO DEL MENSAJE
									SendClientMessage(playeridpagar, COLOR_MENSAJES_DE_AVISOS, Mensaje_Pagar);
									SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, Mensaje_PagarME);
							        PlayersData[playeridpagar][Drogas] = PlayersData[playeridpagar][Drogas] + Dineropagar;
								}
								else
								{
									SendInfoMessage(playerid, 0, "1611", "Debe escribir una cantidad entre -100000 y 100000.");
								}
						}

						else
						{
							SendInfoMessage(playerid, 0, "1610", "El jugador al que le quiere dar drogas no se encuentra conectado.");
						}
					}

					else
					{
						SendInfoMessage(playerid, 0, "1609", "Tú no tienes acceso al comando /DarDrogas.");
					}
				}
				// COMANDO: /DarBombas [ID]
				else if (strfind(cmdtext, "/DarBombas ", true) == 0)
				{
				    if (PlayersData[playerid][Admin] >= 9)
					{
						new playeridpagar = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
					    new Dineropagar = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
						if (IsPlayerConnected(playeridpagar))
						{
							    if (Dineropagar <= 100000 && Dineropagar >= -100000)
							    {
               						// PAGO
									new Mensaje_Pagar[128];
									new Mensaje_PagarME[128];
									// FORMATEO DEL MENSAJE MENSAJES
                                    format(Mensaje_Pagar, sizeof(Mensaje_Pagar), "%s Has recibido de [%i] %s %i Bombas.",LOGO_STAFF,playerid ,PlayersDataOnline[playerid][NameOnlineFix],Dineropagar);
									format(Mensaje_PagarME, sizeof(Mensaje_PagarME), "%s Le has dado a [%i] %s %i Bombas, con el comando /DarBombas.",LOGO_STAFF,playeridpagar ,PlayersDataOnline[playeridpagar][NameOnlineFix], Dineropagar);
									// ENVIO DEL MENSAJE
									SendClientMessage(playeridpagar, COLOR_MENSAJES_DE_AVISOS, Mensaje_Pagar);
									SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, Mensaje_PagarME);
							        PlayersData[playeridpagar][Bombas] = PlayersData[playeridpagar][Bombas] + Dineropagar;
								}
								else
								{
									SendInfoMessage(playerid, 0, "1611", "Debe escribir una cantidad entre -100000 y 100000.");
								}
						}

						else
						{
							SendInfoMessage(playerid, 0, "1610", "El jugador al que le quiere dar bombas no se encuentra conectado.");
						}
					}

					else
					{
						SendInfoMessage(playerid, 0, "1609", "Tú no tienes acceso al comando /DarBombas.");
					}
				}
				// COMANDO: /Llenar Gasolineras
				//else if(strfind(cmdtext, "/LlenarGasolineras", true) == 0)
				else if (strfind(cmdtext, "/LlenarGasolineras", true) == 0)
                {
				    if (PlayersData[playerid][Admin] >= 9)
					{
						for(new i=0; i <= MAX_BOMBAS_COUNT; i++)
						{
		    				Gasolineras[i][Fuel] = 12000;
                        }
                        {
                            SendClientMessage(playerid,COLOR_MESSAGES[2],"Info: Has llenado todas las gasolineras.");
                        }
					}
          			else
             		{
               			SendInfoMessage(playerid, 0, "1609", "Tú no tienes acceso al comando /LlenarGasolineras");
                  		return 1;
                    }
                }
				// COMANDO: /Depositar Materiales
                else if (strfind(cmdtext, "/Depositar Materiales", true) == 0)
   	            {
					    new MyNearAlmacen = IsPlayerInAlmacen(playerid, true);
					    if (MyNearAlmacen != -1)
					    {
					        if (PlayersData[playerid][MyBonus])
					        {
								new MiValueMateriales;
								if (PlayersData[playerid][Faccion] == CONTRABANDISTAS)
								{
								    MiValueMateriales = 500;
								    new MsgDepositarMercancia[MAX_TEXT_CHAT];
					    			SendInfoMessage(playerid, 1, " ", "|___________________  Almacén ___________________|");
									FaccionData[PlayersData[playerid][Faccion]][Almacen][MyNearAlmacen] = FaccionData[PlayersData[playerid][Faccion]][Almacen][MyNearAlmacen] + MiValueMateriales;
							        format(MsgDepositarMercancia, sizeof(MsgDepositarMercancia), "Ha depositado la mercancía y ahora el almacén cuenta con %i de materiales", FaccionData[PlayersData[playerid][Faccion]][Almacen][MyNearAlmacen]);
					    			SendInfoMessage(playerid, 1, MsgDepositarMercancia, "Almacén:");
					    			SendInfoMessage(playerid, 1, " ", "|_____________________ Fin ____________________|");
									PlayersData[playerid][MyBonus] = false;
								}
							}
							else
							{
									SendInfoMessage(playerid, 0, "780", "No tiene mercancía!");
							}
						}
			    	}
				// COMANDO: /Depositar
				else if (strfind(cmdtext, "/Depositar", true) == 0)
				{
					// COMANDO: /Depositar Mercancía
				  	if (strcmp("/Depositar Mercancía", cmdtext, true, 20) == 0 && strlen(cmdtext) == 20 ||
					  	 strcmp("/Depositar Mercancia", cmdtext, true, 20) == 0 && strlen(cmdtext) == 20)
			    	{
					    new MyNearAlmacen = IsPlayerInAlmacen(playerid, true);
					    if (MyNearAlmacen != -1)
					    {
					        if (PlayersData[playerid][MyBonus])
					        {
								new MiValueMateriales;
								if (PlayersData[playerid][Faccion] == CAMIONEROS)
								{
								    MiValueMateriales = 500;
								    new MsgDepositarMercancia[MAX_TEXT_CHAT];
					    			SendInfoMessage(playerid, 1, " ", "|___________________  Almacén ___________________|");
									FaccionData[PlayersData[playerid][Faccion]][Almacen][MyNearAlmacen] = FaccionData[PlayersData[playerid][Faccion]][Almacen][MyNearAlmacen] + MiValueMateriales;
							        format(MsgDepositarMercancia, sizeof(MsgDepositarMercancia), "Ha depositado la mercancía y ahora el almacén cuenta con %i de materiales", FaccionData[PlayersData[playerid][Faccion]][Almacen][MyNearAlmacen]);
					    			SendInfoMessage(playerid, 1, MsgDepositarMercancia, "Almacén:");
					    			SendInfoMessage(playerid, 1, " ", "|_____________________ Fin ____________________|");
									PlayersData[playerid][MyBonus] = false;
								}
								else if (PlayersData[playerid][Faccion] == TRAFICANTES ||
										 PlayersData[playerid][Faccion] == CONTRABANDISTAS)
								{
								    MiValueMateriales = 500;
								    new MsgDepositarMercancia[MAX_TEXT_CHAT];
					    			SendInfoMessage(playerid, 1, " ", "|___________________  Almacén ___________________|");
									FaccionData[PlayersData[playerid][Faccion]][Almacen][MyNearAlmacen] = FaccionData[PlayersData[playerid][Faccion]][Almacen][MyNearAlmacen] + MiValueMateriales;
							        format(MsgDepositarMercancia, sizeof(MsgDepositarMercancia), "Ha depositado la mercancía y ahora el almacén cuenta con %i de materiales", FaccionData[PlayersData[playerid][Faccion]][Almacen][MyNearAlmacen]);
					    			SendInfoMessage(playerid, 1, MsgDepositarMercancia, "Almacén:");
					    			SendInfoMessage(playerid, 1, " ", "|_____________________ Fin ____________________|");
									PlayersData[playerid][MyBonus] = false;
								}
							}
							else
							{
									SendInfoMessage(playerid, 0, "780", "No tiene mercancía!");
							}
						}
			    	}
					// COMANDO: /Depositar Almacén
					else if (strfind(cmdtext, "/Depositar Almacén ", true) == 0 ||
					    	 strfind(cmdtext, "/Depositar Almacen ", true) == 0)
					{
					    new MyNearAlmacen = IsPlayerInAlmacen(playerid, true);
					    if (MyNearAlmacen != -1)
					    {
							if (strval(cmdtext[19]) >= 1 && strval(cmdtext[19]) <= 2000)
					        {
					            if (PlayersData[playerid][Materiales] >= strval(cmdtext[19]))
					            {
						            if (FaccionData[PlayersData[playerid][Faccion]][LockA][MyNearAlmacen])
						            {
										new MsgDepositarAlmacen[MAX_TEXT_CHAT];
						    			SendInfoMessage(playerid, 1, " ", "|___________________  Almacén ___________________|");
										FaccionData[PlayersData[playerid][Faccion]][Almacen][MyNearAlmacen] = FaccionData[PlayersData[playerid][Faccion]][Almacen][MyNearAlmacen] + strval(cmdtext[19]);
								        format(MsgDepositarAlmacen, sizeof(MsgDepositarAlmacen), "Ha depositado %i de materiales en este almacén, ahora tiene %i de materiales", strval(cmdtext[19]), FaccionData[PlayersData[playerid][Faccion]][Almacen][MyNearAlmacen]);
						    			SendInfoMessage(playerid, 1, MsgDepositarAlmacen, "Almacén:");
						    			SendInfoMessage(playerid, 1, " ", "|_____________________ Fin ____________________|");
										PlayersData[playerid][Materiales] =  PlayersData[playerid][Materiales] - strval(cmdtext[19]);
									}
									else
									{
										SendInfoMessage(playerid, 0, "904", "Este almacén se encuentra cerrado");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "736", "No tiene esa cantidad de materiales para depositar");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "738", "Mínimo puede depositar 1 de materiales y máximo 2000");
							}
						}
			    	}
					// COMANDO: /Depositar Facción
					else if (strfind(cmdtext, "/Depositar Facción ", true) == 0 ||
						strfind(cmdtext, "/Depositar Faccion ", true) == 0)
					{
		    	        if (PlayersData[playerid][Rango] == 0)
		    	        {
						    new MyNearFaccion = GetNearFaccion(playerid);
						    if (MyNearFaccion != -1)
						    {
						        if (MyNearFaccion == PlayersData[playerid][Faccion])
								{
							        if (PlayersData[playerid][Dinero] >= strval(cmdtext[19]))
							        {
									    if (IsNotZero(playerid, strval(cmdtext[19])))
									    {
								            FaccionData[MyNearFaccion][Deposito] = FaccionData[MyNearFaccion][Deposito] + strval(cmdtext[19]);
								            GivePlayerMoneyEx(playerid, -strval(cmdtext[19]));

									        new MsgDepositarFaccion[MAX_TEXT_CHAT];
									        format(MsgDepositarFaccion, sizeof(MsgDepositarFaccion), "Ha depositado $%i en la facción, su nuevo saldo es: $%i", strval(cmdtext[19]), FaccionData[MyNearFaccion][Deposito]);
							    			SendInfoMessage(playerid, 1, " ", "|___________________  Facción ___________________|");
							    			SendInfoMessage(playerid, 1, MsgDepositarFaccion, "Facción:");
							    			SendInfoMessage(playerid, 1, " ", "|_____________________ Fin ____________________|");
										}
									}
									else
									{
										SendInfoMessage(playerid, 0, "383", "No tienes esa cantidad de dinero para depositar en la facción");
									}
				    			}
								else
								{
									SendInfoMessage(playerid, 0, "859", "Esta no es su facción");
								}
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "384", "Usted no es líder");
						}
			    	}
					// COMANDO: /Depositar Cajero
					else if (strfind(cmdtext, "/Depositar Cajero ", true) == 0)
					{
						ShowDepositarBancoFunction(playerid, true, strval(cmdtext[18]));
			    	}
					// COMANDO: /Depositar Negocio
					else if (strfind(cmdtext, "/Depositar Negocio ", true) == 0)
					{
				        if (PlayersDataOnline[playerid][InPickup] >= NegociosData[1][PickupOutId] &&
				             PlayersDataOnline[playerid][InPickup] <= NegociosData[MAX_BIZZ][PickupOutId])
				        {
							new BizzId = PlayersDataOnline[playerid][MyPickupWorld];
				            if (IsMyBizz(playerid, BizzId, true) )
				            {
						        if (PlayersData[playerid][Dinero] >= strval(cmdtext[19]))
						        {
								    if (IsNotZero(playerid, strval(cmdtext[19])))
								    {
							            NegociosData[BizzId][Deposito] = NegociosData[BizzId][Deposito] + strval(cmdtext[19]);
							            GivePlayerMoneyEx(playerid, -strval(cmdtext[19]));

								        new MsgDepositarNegocio[MAX_TEXT_CHAT];
								        format(MsgDepositarNegocio, sizeof(MsgDepositarNegocio), "Ha depositado $%i del negocio, su nuevo saldo es: $%i", strval(cmdtext[19]), NegociosData[BizzId][Deposito]);
						    			SendInfoMessage(playerid, 1, " ", "|___________________  Negocio ___________________|");
						    			SendInfoMessage(playerid, 1, MsgDepositarNegocio, "Negocio:");
						    			SendInfoMessage(playerid, 1, " ", "|_____________________ Fin ____________________|");
					    			}
						        }
								else
								{
									SendInfoMessage(playerid, 0, "310", "No tienes esa cantidad de dinero para depositar en el negocio");
								}
				            }
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "309", "No te encuentras en ningún negocio");
						}
					}
			    	else
			    	{
						SendInfoMessage(playerid, 0, "305", "Quizás quiso decir: /Depositar Cajero [Cantidad], Negocio [Cantidad], Facción [Cantidad]}");
					}
				}
				// COMANDO: /Consultar
				else if (strfind(cmdtext, "/Consultar", true) == 0)
				{
					// COMANDO: /Consultar Almacén
				  /*	if (strcmp("/Consultar Almacén", cmdtext, true, 18) == 0 && strlen(cmdtext) == 18 ||
						strcmp("/Consultar Almacen", cmdtext, true, 18) == 0 && strlen(cmdtext) == 18)
				    {
						new MyNearAlmacen = IsPlayerInAlmacen(playerid,true);
						if (MyNearAlmacen != -1)
						{
					        new MsgConsultarAlmacen[MAX_TEXT_CHAT];
					        new MaterialesAlmacen;
					        new PiezasAlmacen;
					        new OpenAlmacen;

				            if (FaccionData[PlayersData[playerid][Faccion]][LockA][MyNearAlmacen])
				            {
								MaterialesAlmacen 	= FaccionData[PlayersData[playerid][Faccion]][Almacen][MyNearAlmacen];
								PiezasAlmacen 		= FaccionData[PlayersData[playerid][Faccion]][Piezas][MyNearAlmacen];
								OpenAlmacen = true;
							}
							else
							{
								SendInfoMessage(playerid, 0, "902", "Este almacén se encuentra cerrado");
							}

							if (OpenAlmacen)
							{
						        format(MsgConsultarAlmacen, sizeof(MsgConsultarAlmacen), "Quedan %i materiales y %i piezas en este almacén", MaterialesAlmacen, PiezasAlmacen);
				    			SendInfoMessage(playerid, 1, " ", "|___________________ Almacén ___________________|");
				    			SendInfoMessage(playerid, 1, MsgConsultarAlmacen, "Almacén:");
				    			SendInfoMessage(playerid, 1, " ", "|_____________________ Fin ____________________|");
			    			}
						}
				    }*/
 				  	if (strcmp("/Consultar Almacén", cmdtext, true, 18) == 0 && strlen(cmdtext) == 18 ||
						strcmp("/Consultar Almacen", cmdtext, true, 18) == 0 && strlen(cmdtext) == 18)
				    {
						new MyNearAlmacen = IsPlayerInAlmacen(playerid,true);
						if (MyNearAlmacen != -1)
						{
					        new MsgConsultarAlmacen[MAX_TEXT_CHAT];
					        new MaterialesAlmacen;
					        new OpenAlmacen;

				            if (FaccionData[PlayersData[playerid][Faccion]][LockA][MyNearAlmacen])
				            {
								MaterialesAlmacen = FaccionData[PlayersData[playerid][Faccion]][Almacen][MyNearAlmacen];
								OpenAlmacen = true;
							}
							else
							{
								SendInfoMessage(playerid, 0, "902", "Este almacén se encuentra cerrado");
							}

							if (OpenAlmacen)
							{
						        format(MsgConsultarAlmacen, sizeof(MsgConsultarAlmacen), "Quedan %i materiales en este almacén", MaterialesAlmacen);
				    			SendInfoMessage(playerid, 1, " ", "|___________________ Almacén ___________________|");
				    			SendInfoMessage(playerid, 1, MsgConsultarAlmacen, "Almacén: ");
				    			SendInfoMessage(playerid, 1, " ", "|_____________________ Fin ____________________|");
			    			}
						}
				    }
					// COMANDO: /Consultar Facción
				  	else if (strcmp("/Consultar Facción", cmdtext, true, 18) == 0 && strlen(cmdtext) == 18 ||
						strcmp("/Consultar Faccion", cmdtext, true, 18) == 0 && strlen(cmdtext) == 18)
				    {
		    	        if (PlayersData[playerid][Rango] == 0)
		    	        {
						    new MyNearFaccion = GetNearFaccion(playerid);
						    if (MyNearFaccion != -1)
						    {
						        if (MyNearFaccion == PlayersData[playerid][Faccion])
								{
							        new MsgConsultarFaccion[MAX_TEXT_CHAT];
							        format(MsgConsultarFaccion, sizeof(MsgConsultarFaccion), "Tiene usted $%i en su facción", FaccionData[MyNearFaccion][Deposito]);
					    			SendInfoMessage(playerid, 1, " ", "|___________________  Facción ___________________|");
					    			SendInfoMessage(playerid, 1, MsgConsultarFaccion, "Facción:");
					    			SendInfoMessage(playerid, 1, " ", "|_____________________ Fin ____________________|");
				    			}
								else
								{
									SendInfoMessage(playerid, 0, "857", "Esta no es su facción");
								}
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "385", "Usted no es líder");
						}
			    	}
					// COMANDO: /Consultar Cajero
				  	else if (strcmp("/Consultar Cajero", cmdtext, true, 17) == 0 && strlen(cmdtext) == 17)
				    {
					    if (PlayersData[playerid][IsPlayerInBank] || IsPlayerNearCajero(playerid) != -1)
					    {
					        new MsgConsultarBanco[MAX_TEXT_CHAT];
					        format(MsgConsultarBanco, sizeof(MsgConsultarBanco), "Tiene usted $%i en su cuenta bancaria", PlayersData[playerid][Banco]);
			    			SendInfoMessage(playerid, 1, " ", "|___________________  Banco ___________________|");
			    			SendInfoMessage(playerid, 1, MsgConsultarBanco, "Banco:");
			    			SendInfoMessage(playerid, 1, " ", "|_____________________ Fin ____________________|");
						}
			    	}
					// COMANDO: /Consutlar Negocio
				  	else if (strcmp("/Consultar Negocio", cmdtext, true, 18) == 0 && strlen(cmdtext) == 18)
				    {
				        if (PlayersDataOnline[playerid][InPickup] >= NegociosData[1][PickupOutId] &&
				             PlayersDataOnline[playerid][InPickup] <= NegociosData[MAX_BIZZ][PickupOutId])
				        {
							new BizzId = PlayersDataOnline[playerid][MyPickupWorld];
				            if (IsMyBizz(playerid, BizzId, true) )
				            {
						        new MsgConsultarNegocio[MAX_TEXT_CHAT];
						        format(MsgConsultarNegocio, sizeof(MsgConsultarNegocio), "Tiene usted $%i en el fondo de su negocio", NegociosData[BizzId][Deposito]);
				    			SendInfoMessage(playerid, 1, " ", "|___________________  Negocio ___________________|");
				    			SendInfoMessage(playerid, 1, MsgConsultarNegocio, "Negocio:");
				    			SendInfoMessage(playerid, 1, " ", "|_____________________ Fin ____________________|");
				            }
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "311", "No te encuentras en ningún negocio");
						}
					}
					else if (strfind(cmdtext, "/Consultar parqueo", true) == 0)
					{
					    if(PlayersData[playerid][Admin] >= 4)
					    {
					        VerificarAparcar(playerid);
					    }
					    else
					    {
					        SendInfoMessage(playerid, 0, "4000", "No tienes acceso a este comando.!");
					    }
					}
					// COMANDO: /Consultar Extorsión
				  	else if (strcmp("/Consultar Casa", cmdtext, true, 15) == 0 && strlen(cmdtext) == 15)
					{
						if (PlayersDataOnline[playerid][InPickup] >= HouseData[1][PickupId] &&
						     PlayersDataOnline[playerid][InPickup] <= HouseData[MAX_HOUSE][PickupId])
						{
	                        if (IsMyHouse(playerid, PlayersDataOnline[playerid][MyPickupWorld]))
	                        {
						        new MsgCasaConsultar[MAX_TEXT_CHAT];
						        format(MsgCasaConsultar, sizeof(MsgCasaConsultar), "Tiene $%i ganancias de alquiler en la casa", HouseData[PlayersDataOnline[playerid][MyPickupWorld]][Deposito]);
				    			SendInfoMessage(playerid, 1, " ", "|___________________ Casa ___________________|");
				    			SendInfoMessage(playerid, 1, MsgCasaConsultar, "Casa:");
				    			SendInfoMessage(playerid, 1, " ", "|_____________________ Fin ____________________|");
							}
							else
							{
								SendInfoMessage(playerid, 0, "602", "Esta no es su casa");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "601", "No te encuentras en ninguna casa");
						}
					}
					// COMANDO: /Consultar Extorsión
				  	else if (strcmp("/Consultar Extorsión", cmdtext, true, 20) == 0 && strlen(cmdtext) == 20 ||
	                    	 strcmp("/Consultar Extorsion", cmdtext, true, 20) == 0 && strlen(cmdtext) == 20
					 )
					{
						if (PlayersDataOnline[playerid][InPickup] >= NegociosData[1][PickupOutId] &&
						     PlayersDataOnline[playerid][InPickup] <= NegociosData[MAX_BIZZ][PickupOutId])
						{
	                        if (strfind(NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Extorsion], PlayersDataOnline[playerid][NameOnline], false) == 0 && strlen(NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Extorsion]) == strlen(PlayersDataOnline[playerid][NameOnline]))
	                        {
						        new MsgExtorsionConsultar[MAX_TEXT_CHAT];
						        format(MsgExtorsionConsultar, sizeof(MsgExtorsionConsultar), "Tiene acumulado $%i de extorsión en este negocio", NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][DepositoExtorsion]);
				    			SendInfoMessage(playerid, 1, " ", "|___________________ Extorsión ___________________|");
				    			SendInfoMessage(playerid, 1, MsgExtorsionConsultar, "Extorsión:");
				    			SendInfoMessage(playerid, 1, " ", "|_____________________ Fin ____________________|");
							}
							else
							{
								SendInfoMessage(playerid, 0, "355", "Usted no extorsiona este negocio");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "354", "No te encuentras en ningún negocio");
						}
					}
			    	else
			    	{
						SendInfoMessage(playerid, 0, "306", "Quizás quiso decir: /Consultar {Cajero, Negocio, Extorsión, Facción, Casa, Almacén}");
					}
				}
				// COMANDO: /Aparcar
			  	else if (strcmp("/Aparcar", cmdtext, true, 8) == 0 && strlen(cmdtext) == 8)
			    {
					if (IsPlayerInAnyVehicle(playerid))
					{
						if (IsVehicleMyVehicle(playerid, GetPlayerVehicleID(playerid)) )
						{
						    AparcarVehicle(playerid, GetPlayerVehicleID(playerid));
						}
						else
						{
							SendInfoMessage(playerid, 0, "331", "Este no es su vehículo");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "332", "Suba a su vehículo para poder aparcarlo");
					}
			    }
				// COMANDO: /Comprar
		  		else if (strfind(cmdtext, "/Comprar", true) == 0)
			    {
					// COMANDO: /Comprar Ropa
				  	if (strcmp("/Comprar Ropa", cmdtext, true, 13) == 0 && strlen(cmdtext) == 13)
				    {
						if (PlayersData[playerid][IsPlayerInBizz] && strfind(NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][TypeName], "Ropa", false) == 0)
						{
						    if (IsPlayerInRangeOfPoint(playerid, 2.0, NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInX_PC], NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInY_PC], NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInZ_PC]))
						    {
								if (PlayersData[playerid][Dinero] >= 50 || (PlayersData[playerid][ModoPago] && PlayersData[playerid][Credito] >= 50))
								{
								    if (NegociosData[PlayersData[playerid][IsPlayerInBizz]][Materiales] >= 2)
								    {
	                                    SetMoneyExtorsion(PlayersData[playerid][IsPlayerInBizz], 50);
	                                    if(PlayersData[playerid][ModoPago] && PlayersData[playerid][Credito] >= 50)
										{
										    PlayersData[playerid][Credito] -= 50;
										}
										else
										{
											GivePlayerMoneyEx(playerid, -50);
										}
  										//SetPlayerSelectedTypeSkin(playerid, false);

										GetSpawnInfo(playerid);
										PlayersDataOnline[playerid][Spawn]      = false;
										SetPlayerVirtualWorldEx(playerid, playerid);

										TogglePlayerControllableEx(playerid, 0);
										SetPlayerInteriorEx(playerid, 2);
										SetPlayerPos(playerid, 271.7302, 304.7271 ,999.1558);
										SetPlayerFacingAngle(playerid, 51.5407);
										SetPlayerCameraPos(playerid, 268.2326, 306.7652, 999.1509);
										SetPlayerCameraLookAt(playerid, 271.7302, 304.7271 ,999.1558);

										// MSelect_Show(playerid, MSelect:RopaTiendas); // Previo a Skins update 2019

										// SKINS NIVEL 0
										if (GetPlayerScore(playerid) >= 0 && GetPlayerScore(playerid) < 4)
										{
								            if (PlayersData[playerid][VIP])
											{
												MSelect_Show(playerid, MSelect:RopaTiendasVIP);
											}
											else
											{
												MSelect_Show(playerid, MSelect:RopaTiendas);
											}
										}
										// SKINS NIVEL 1
										else if (GetPlayerScore(playerid) >= 4 && GetPlayerScore(playerid) < 6)
										{
								            if (PlayersData[playerid][VIP])
											{
												MSelect_Show(playerid, MSelect:RopaTiendasNivel_1_VIP);
											}
											else
											{
												MSelect_Show(playerid, MSelect:RopaTiendas);
											}
										}
										// SKINS NIVEL 2
										else if (GetPlayerScore(playerid) >= 6 && GetPlayerScore(playerid) < 8)
										{
								            if (PlayersData[playerid][VIP])
											{
												MSelect_Show(playerid, MSelect:RopaTiendasNivel_2_VIP);
											}
											else
											{
												MSelect_Show(playerid, MSelect:RopaTiendas);
											}
										}
										// SKINS NIVEL 3
										else if (GetPlayerScore(playerid) >= 8 && GetPlayerScore(playerid) < 10)
										{
								            if (PlayersData[playerid][VIP])
											{
												MSelect_Show(playerid, MSelect:RopaTiendasNivel_3_VIP);
											}
											else
											{
												MSelect_Show(playerid, MSelect:RopaTiendas);
											}
										}
										// SKINS NIVEL 4
										else if (GetPlayerScore(playerid) >= 10 && GetPlayerScore(playerid) < 12)
										{
								            if (PlayersData[playerid][VIP])
											{
												MSelect_Show(playerid, MSelect:RopaTiendasNivel_4_VIP);
											}
											else
											{
												MSelect_Show(playerid, MSelect:RopaTiendas);
											}
										}
										// SKINS NIVEL 5
										else if (GetPlayerScore(playerid) >= 12)
										{
								            if (PlayersData[playerid][VIP])
											{
												MSelect_Show(playerid, MSelect:RopaTiendasNivel_5_VIP);
											}
											else
											{
												MSelect_Show(playerid, MSelect:RopaTiendas);
											}
										}

  										/*PlayersDataOnline[playerid][CurrentDialog] = 189;
				    					ShowPreviewModelDialog(playerid, 189, "Ropa", SKIN_MODELS, SKIN_NAMES, "Seleccionar", "Cancelar");*/
									}
									else
									{
										SendInfoMessage(playerid, 0, "290", "Esta tienda no tiene materiales");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "291", "No tienes suficiente dinero para comprar ropa, cuesta $50");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "292", "No te encuentras cerca del vestidor");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "293", "No estás en una tienda de ropas");
						}
				    }
					// COMANDO: /Comprar Lentes
				  	else if (strcmp("/Comprar Lentes", cmdtext, true, 15) == 0 && strlen(cmdtext) == 15)
				    {
						if (PlayersData[playerid][IsPlayerInBizz] && strfind(NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][TypeName], "Ropa", false) == 0)
						{
						    if (IsPlayerInRangeOfPoint(playerid, 2.0, NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInX_PC], NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInY_PC], NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInZ_PC]))
						    {
								if (PlayersData[playerid][Dinero] >= 100 || (PlayersData[playerid][ModoPago] && PlayersData[playerid][Credito] >= 100))
								{
								    if (NegociosData[PlayersData[playerid][IsPlayerInBizz]][Materiales] >= 2)
								    {
										if (IsAllowItSkinForGafas(PlayersData[playerid][Skin]))
										{
										    if (IsPlayerNotFullObjects(playerid, true) != -1)
										    {
			                                    SetMoneyExtorsion(PlayersData[playerid][IsPlayerInBizz], 100);
											    PlayersDataOnline[playerid][TypeBuy] = TYPE_GAFAS;
											    SetPlayerSelectedTypeHair(playerid);
                                                if(PlayersData[playerid][ModoPago] && PlayersData[playerid][Credito] >= 100)
												{
												    PlayersData[playerid][Credito] -= 100;
												}
												else
												{
													GivePlayerMoneyEx(playerid, -100);
												}
										    }
									    }
									    else
									    {
											SendInfoMessage(playerid, 0, "1572", "Con este skin no puedes usar lentes!");
									    }
									}
									else
									{
										SendInfoMessage(playerid, 0, "1539", "Esta tienda no tiene materiales");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1540", "No tienes suficiente dinero para comprar lentes, cuesta $100");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "1541", "No te encuentras cerca del probador");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1542", "No estás en una tienda de lentes");
						}
				    }
				    /*// COMANDO: /Comprar Bandana
				  	else if (strcmp("/Comprar Bandana", cmdtext, true, 15) == 0 && strlen(cmdtext) == 15)
				    {
						if (PlayersData[playerid][IsPlayerInBizz] && strfind(NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][TypeName], "Ropa", false) == 0)
						{
						    if (IsPlayerInRangeOfPoint(playerid, 2.0, NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInX_PC], NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInY_PC], NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInZ_PC]))
						    {
								if (PlayersData[playerid][Dinero] >= 1000 || (PlayersData[playerid][ModoPago] && PlayersData[playerid][Credito] >= 1000))
								{
								    if (NegociosData[PlayersData[playerid][IsPlayerInBizz]][Materiales] >= 2)
								    {
										if (IsAllowItSkinForBandana(PlayersData[playerid][Skin]))
										{
										    if (IsPlayerNotFullObjects(playerid, true) != -1)
										    {
			                                    SetMoneyExtorsion(PlayersData[playerid][IsPlayerInBizz], 1000);
											    PlayersDataOnline[playerid][TypeBuy] = TYPE_BANDANA;
											    SetPlayerSelectedTypeHair(playerid);
                                                if(PlayersData[playerid][ModoPago] && PlayersData[playerid][Credito] >= 1000)
												{
												    PlayersData[playerid][Credito] -= 1000;
												}
												else
												{
													GivePlayerMoneyEx(playerid, -1000);
												}
										    }
									    }
									    else
									    {
											SendInfoMessage(playerid, 0, "1572", "Con este skin no puedes usar Bandana!");
									    }
									}
									else
									{
										SendInfoMessage(playerid, 0, "1539", "Esta tienda no tiene materiales");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1540", "No tienes suficiente dinero para comprar Bandana, cuesta $1000");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "1541", "No te encuentras cerca del probador");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1542", "No estás en una tienda de Bandanas");
						}
				    }*/
					// COMANDO: /Comprar Casco
				  	else if (strcmp("/Comprar Casco", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
        {
						if (PlayersData[playerid][IsPlayerInBizz] && strfind(NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][TypeName], "Ropa", false) == 0)
						{
						    if (IsPlayerInRangeOfPoint(playerid, 2.0, NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInX_PC], NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInY_PC], NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInZ_PC]))
						    {
								if (PlayersData[playerid][Dinero] >= 100 || (PlayersData[playerid][ModoPago] && PlayersData[playerid][Credito] >= 100))
								{
								    if (NegociosData[PlayersData[playerid][IsPlayerInBizz]][Materiales] >= 2)
								    {
										if (IsAllowItSkinForCasco(PlayersData[playerid][Skin]))
										{
										    if (IsPlayerNotFullObjects(playerid, true) != -1)
										    {
			                                    SetMoneyExtorsion(PlayersData[playerid][IsPlayerInBizz], 100);
											    PlayersDataOnline[playerid][TypeBuy] = TYPE_CASCO;
											    SetPlayerSelectedTypeHair(playerid);
											    if(PlayersData[playerid][ModoPago] && PlayersData[playerid][Credito] >= 100)
												{
												    PlayersData[playerid][Credito] -= 100;
												}
												else
												{
													GivePlayerMoneyEx(playerid, -100);
												}
										    }
									    }
									    else
									    {
											SendInfoMessage(playerid, 0, "1576", "Con este skin no puedes usar cascos!");
									    }
									}
									else
									{
										SendInfoMessage(playerid, 0, "1577", "Esta tienda no tiene materiales");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1578", "No tienes suficiente dinero para comprar cascos, cuesta $100");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "1579", "No te encuentras cerca del probador");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1580", "No estás en una tienda de cascos");
						}
				    }
					// COMANDO: /Comprar Reloj
				  	else if (strcmp("/Comprar Reloj", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
				    {
						if (PlayersData[playerid][IsPlayerInBizz] && strfind(NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][TypeName], "Ropa", false) == 0)
						{
						    if (IsPlayerInRangeOfPoint(playerid, 2.0, NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInX_PC], NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInY_PC], NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInZ_PC]))
						    {
								if (PlayersData[playerid][Dinero] >= 100 || (PlayersData[playerid][ModoPago] && PlayersData[playerid][Credito] >= 100))
								{
								    if (NegociosData[PlayersData[playerid][IsPlayerInBizz]][Materiales] >= 2)
								    {
										if (IsAllowItSkinForRelojes(PlayersData[playerid][Skin]))
										{
										    if (IsPlayerNotFullObjects(playerid, true) != -1)
										    {
			                                    SetMoneyExtorsion(PlayersData[playerid][IsPlayerInBizz], 100);
											    PlayersDataOnline[playerid][TypeBuy] = TYPE_RELOJES;
											    SetPlayerSelectedTypeHair(playerid);
											    if(PlayersData[playerid][ModoPago] && PlayersData[playerid][Credito] >= 100)
												{
												    PlayersData[playerid][Credito] -= 100;
												}
												else
												{
													GivePlayerMoneyEx(playerid, -100);
												}
										    }
									    }
									    else
									    {
											SendInfoMessage(playerid, 0, "1573", "Con este skin no puedes usar relojes!");
									    }
									}
									else
									{
										SendInfoMessage(playerid, 0, "1564", "Esta tienda no tiene materiales");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1565", "No tienes suficiente dinero para comprar un reloj, cuesta $100");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "1566", "No te encuentras cerca del probador");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1567", "No estás en una tienda de relojes");
						}
				    }
					// COMANDO: /Comprar Gorra
				  	else if (strcmp("/Comprar Gorra", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
				    {
						if (PlayersData[playerid][IsPlayerInBizz] && strfind(NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][TypeName], "Ropa", false) == 0)
						{
						    if (IsPlayerInRangeOfPoint(playerid, 2.0, NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInX_PC], NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInY_PC], NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInZ_PC]))
						    {
								if (PlayersData[playerid][Dinero] >= 100 || (PlayersData[playerid][ModoPago] && PlayersData[playerid][Credito] >= 100))
								{
								    if (NegociosData[PlayersData[playerid][IsPlayerInBizz]][Materiales] >= 2)
								    {
										if (IsAllowItSkinForGorras(PlayersData[playerid][Skin]))
										{
										    if (IsPlayerNotFullObjects(playerid, true) != -1)
										    {
			                                    SetMoneyExtorsion(PlayersData[playerid][IsPlayerInBizz], 100);
											    PlayersDataOnline[playerid][TypeBuy] = TYPE_GORRAS;
											    SetPlayerSelectedTypeHair(playerid);
											    if(PlayersData[playerid][ModoPago] && PlayersData[playerid][Credito] >= 100)
												{
												    PlayersData[playerid][Credito] -= 100;
												}
												else
												{
													GivePlayerMoneyEx(playerid, -100);
												}
										    }
									    }
									    else
									    {
											SendInfoMessage(playerid, 0, "1574", "Con este skin no puedes usar gorras!");
									    }
									}
									else
									{
										SendInfoMessage(playerid, 0, "1569", "Esta tienda no tiene materiales");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1568", "No tienes suficiente dinero para comprar una gorra, cuesta $100");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "1570", "No te encuentras cerca del probador");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1571", "No estás en una tienda de gorras");
						}
				    }
					// COMANDO: /Comprar Gorro Navidad
				  	else if (strcmp("/Comprar GorroN", cmdtext, true, 15) == 0 && strlen(cmdtext) == 15)
				    {
						if (PlayersData[playerid][IsPlayerInBizz] && strfind(NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][TypeName], "Ropa", false) == 0)
						{
						    if (IsPlayerInRangeOfPoint(playerid, 2.0, NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInX_PC], NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInY_PC], NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInZ_PC]))
						    {
								if (PlayersData[playerid][Dinero] >= 1000 || (PlayersData[playerid][ModoPago] && PlayersData[playerid][Credito] >= 1000))
								{
								    if (NegociosData[PlayersData[playerid][IsPlayerInBizz]][Materiales] >= 2)
								    {
										if (IsAllowItSkinForGorroXmas(PlayersData[playerid][Skin]))
										{
										    if (IsPlayerNotFullObjects(playerid, true) != -1)
										    {
			                                    SetMoneyExtorsion(PlayersData[playerid][IsPlayerInBizz], 1000);
											    PlayersDataOnline[playerid][TypeBuy] = TIPO_GORROXMAS;
											    SetPlayerSelectedTypeHair(playerid);
											    if(PlayersData[playerid][ModoPago] && PlayersData[playerid][Credito] >= 1000)
												{
												    PlayersData[playerid][Credito] -= 1000;
												}
												else
												{
													GivePlayerMoneyEx(playerid, -1000);
												}
										    }
									    }
									    else
									    {
											SendInfoMessage(playerid, 0, "1606", "Con este skin no puedes usar Bandana!.");
									    }
									}
									else
									{
										SendInfoMessage(playerid, 0, "1607", "Esta tienda no tiene materiales.");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1609", "No tienes suficiente dinero para comprar una Bandana, cuesta $1000.");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "1610", "No te encuentras cerca del probador.");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1611", "No estás en una tienda de ropa.");
						}
				    }
					// COMANDO: /Comprar Boina
				  	else if (strcmp("/Comprar Boina", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
				    {
						if (PlayersData[playerid][IsPlayerInBizz] && NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type] >= 27 && NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type] <= 29)
						{
						    if (IsPlayerInRangeOfPoint(playerid, 2.0, NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInX_PC], NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInY_PC], NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInZ_PC]))
						    {
								if (PlayersData[playerid][Dinero] >= 150 || (PlayersData[playerid][ModoPago] && PlayersData[playerid][Credito] >= 150))
								{
								    if (NegociosData[PlayersData[playerid][IsPlayerInBizz]][Materiales] >= 2)
								    {
										if (IsAllowItSkinForBoina(PlayersData[playerid][Skin]))
										{
											if (IsPlayerNotFullObjects(playerid, true) != -1)
											{
			                                    SetMoneyExtorsion(PlayersData[playerid][IsPlayerInBizz], 150);
											    PlayersDataOnline[playerid][TypeBuy] = TYPE_BOINA;
											    SetPlayerSelectedTypeHair(playerid);
											    if(PlayersData[playerid][ModoPago] && PlayersData[playerid][Credito] >= 150)
												{
												    PlayersData[playerid][Credito] -= 150;
												}
												else
												{
													GivePlayerMoneyEx(playerid, -150);
												}
										    }
									    }
									    else
									    {
											SendInfoMessage(playerid, 0, "1558", "Con este skin no puedes usar boinas!");
									    }
									}
									else
									{
										SendInfoMessage(playerid, 0, "1559", "Esta barbería no tiene materiales");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1560", "No tienes suficiente dinero para darte comprar una boina, cuesta $150");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "1561", "No te encuentras en el lugar para comprar boinas!");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1562", "No estás en una barbería");
						}
				    }
					// COMANDO: /Comprar Peluca
				  	else if (strcmp("/Comprar Peluca", cmdtext, true, 15) == 0 && strlen(cmdtext) == 15)
				    {
						if (PlayersData[playerid][IsPlayerInBizz] && NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type] >= 27 && NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type] <= 29)
						{
						    if (IsPlayerInRangeOfPoint(playerid, 2.0, NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInX_PC], NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInY_PC], NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInZ_PC]))
						    {
								if (PlayersData[playerid][Dinero] >= 150 || (PlayersData[playerid][ModoPago] && PlayersData[playerid][Credito] >= 150))
								{
								    if (NegociosData[PlayersData[playerid][IsPlayerInBizz]][Materiales] >= 2)
								    {
										if (IsAllowItSkinForHair(PlayersData[playerid][Skin]))
										{
										    if (IsPlayerNotFullObjects(playerid, true) != -1)
										    {
			                                    SetMoneyExtorsion(PlayersData[playerid][IsPlayerInBizz], 150);
											    PlayersDataOnline[playerid][TypeBuy] = TYPE_PELO;
											    SetPlayerSelectedTypeHair(playerid);
											    if(PlayersData[playerid][ModoPago] && PlayersData[playerid][Credito] >= 150)
												{
												    PlayersData[playerid][Credito] -= 150;
												}
												else
												{
													GivePlayerMoneyEx(playerid, -150);
												}
										    }
									    }
									    else
									    {
											SendInfoMessage(playerid, 0, "1543", "Con este skin no puedes usar pelucas!");
									    }
									}
									else
									{
										SendInfoMessage(playerid, 0, "1544", "Esta barbería no tiene materiales");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1545", "No tienes suficiente dinero para darte comprar una peluca, cuesta $150");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "1546", "No te encuentras en el lugar para comprar pelucas!");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1547", "No estás en una barbería");
						}
				    }
				    // COMANDO: /Comprar Casa
				    else if (strcmp("/Comprar Casa", cmdtext, true, 13) == 0 && strlen(cmdtext) == 13)
				    {
                        if (PlayersDataOnline[playerid][InPickup] >= HouseData[1][PickupId] && PlayersDataOnline[playerid][InPickup] <= HouseData[MAX_HOUSE][PickupId])
				        {
                            new HouseId = PlayersDataOnline[playerid][MyPickupWorld];
                            if(strlen(HouseData[HouseId][Dueno]) == 2)
				            {
				                if(PlayersData[playerid][Alquiler] != -1) return SendInfoMessage(playerid, 0, "590", "Antes de comprar esta casa debes dejar de alquilar tu casa actual.");
                                if(GetPlayerScore(playerid) >= HouseData[HouseId][Level])
				                {
				                    if(PlayersData[playerid][Dinero] >= HouseData[HouseId][Price])
									{
										//- Validamos las cantidades según su nivel de VIP
										new String[61], Total_De_Casas = GetPlayerHousesCount(playerid);
                                        if(PlayersData[playerid][VIP] == 0 && Total_De_Casas >= MAX_CASAS_USER)
										{
										    format(String, sizeof(String), "¡No puedes tener más de %d casa sin tener una membresia!", MAX_CASAS_USER);
										 	return SendInfoMessage(playerid, 0, "0", String);
										}
										if(PlayersData[playerid][VIP] == 1 && Total_De_Casas >= MAX_CASAS_VIP1)
										{
										    format(String, sizeof(String), "¡No puedes tener más de %d casas siendo VIP!", MAX_CASAS_VIP1);
											return SendInfoMessage(playerid, 0, "0", String);
		   								}
										if(PlayersData[playerid][VIP] == 2 && Total_De_Casas >= MAX_CASAS_VIP2)
										{
										    format(String, sizeof(String), "¡No puedes tener más de %d casas siendo Super VIP!", MAX_CASAS_VIP2);
											return SendInfoMessage(playerid, 0, "0", String);
										}

										//- Compramos la casa
										format(HouseData[HouseId][Dueno], MAX_PLAYER_NAME, "%s", PlayersDataOnline[playerid][NameOnline]);
		                                GivePlayerMoneyEx(playerid, -HouseData[HouseId][Price]);
                                        HouseData[HouseId][Fecha_Compra] = gettime();
										SaveHouse(HouseId, true);
		                                GameTextForPlayer(playerid, "~B~Has ~G~comprado una Casa!", 2000, 0);
		                                if(PlayersData[playerid][House] == -1) PlayersData[playerid][House] = HouseId;
		                                PlayersData[playerid][Alquiler] = -1;
									}
									else
									{
									    SendInfoMessage(playerid, 0, "588", "No tienes suficiente dinero para comprar esta Casa!");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "589", "No tiene suficiente nivel para comprar esta casa");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "591", "Esta casa ya tiene dueño");
							}
						}
						else
				        {
							SendInfoMessage(playerid, 0, "592", "No te encuentras en ninguna casa");
						}
					}
					// COMANDO: /Comprar Negocio
				  	else if (strcmp("/Comprar Negocio", cmdtext, true, 16) == 0 && strlen(cmdtext) == 16)
				    {
				        if (PlayersDataOnline[playerid][InPickup] >= NegociosData[1][PickupOutId] &&
				             PlayersDataOnline[playerid][InPickup] <= NegociosData[MAX_BIZZ][PickupOutId])
				        {
							new BizzId = PlayersDataOnline[playerid][MyPickupWorld];
				            if (strlen(NegociosData[BizzId][Dueno]) == 1)
				            {
				                if (GetPlayerScore(playerid) >= NegociosData[BizzId][Level])
				                {
									if (PlayersData[playerid][Dinero] >= NegociosData[BizzId][Precio])
									{
										//- Validamos las cantidades según su nivel de VIP
										new String[61], Total_De_Negocios = GetPlayerNegociosCount(playerid);
                                        if(PlayersData[playerid][VIP] == 0 && Total_De_Negocios >= MAX_NEGOCIOS_USER)
										{
										    format(String, sizeof(String), "¡No puedes tener más de %d negocio sin tener una membresia!", MAX_NEGOCIOS_USER);
										 	return SendInfoMessage(playerid, 0, "0", String);
										}
										if(PlayersData[playerid][VIP] == 1 && Total_De_Negocios >= MAX_NEGOCIOS_VIP1)
										{
										    format(String, sizeof(String), "¡No puedes tener más de %d negocios siendo VIP!", MAX_NEGOCIOS_VIP1);
											return SendInfoMessage(playerid, 0, "0", String);
		   								}
										if(PlayersData[playerid][VIP] == 2 && Total_De_Negocios >= MAX_NEGOCIOS_VIP2)
										{
										    format(String, sizeof(String), "¡No puedes tener más de %d negocios siendo Super VIP!", MAX_NEGOCIOS_VIP2);
											return SendInfoMessage(playerid, 0, "0", String);
										}

										// Compramos el negocio
		                                format(NegociosData[BizzId][Dueno], MAX_PLAYER_NAME, "%s", PlayersDataOnline[playerid][NameOnline]);
		                                format(NegociosData[BizzId][Extorsion], MAX_PLAYER_NAME, "No");
		                                GivePlayerMoneyEx(playerid, -NegociosData[BizzId][Precio]);
		                                DataSaveBizz(BizzId, true);
		                                GameTextForPlayer(playerid, "~B~Has ~G~comprado un negocio!", 2000, 0);
									}
									else
									{
										SendInfoMessage(playerid, 0, "296", "No tienes suficiente dinero para comprar este negocio");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "611", "No tiene suficiente nivel para comprar este negocio");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "297", "Este negocio ya tiene dueño");
							}
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "298", "No te encuentras en ningún negocio");
						}
					}
					// COMANDO: /Comprar Agua
				  	else if (strcmp("/Comprar Agua", cmdtext, true, 13) == 0 && strlen(cmdtext) == 13)
				    {
						if (PlayersData[playerid][IsPlayerInBizz] && IsBizzBar(playerid, NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]))
						{
						    if (IsPlayerInRangeOfPoint(playerid, 3.0, NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInX_PC], NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInY_PC], NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInZ_PC]))
						    {
								if (PlayersData[playerid][Dinero] >= 5)
								{
								    if (NegociosData[PlayersData[playerid][IsPlayerInBizz]][Materiales] >= 2)
								    {
								    	SetBuyBares(playerid, 0, true);
									}
									else
									{
										SendInfoMessage(playerid, 0, "424", "Este bar no tiene materiales");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "425", "No tienes suficiente dinero para comprar agua, cuesta $5");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "426", "No te encuentras cerca del la barra");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "427", "No estás en un bar");
						}
					}
					// COMANDO: /Comprar Refresco
				  	else if (strcmp("/Comprar Refresco", cmdtext, true, 18) == 0 && strlen(cmdtext) == 17)
				    {
						if (PlayersData[playerid][IsPlayerInBizz] && IsBizzBar(playerid, NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]))
						{
						    if (IsPlayerInRangeOfPoint(playerid, 3.0, NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInX_PC], NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInY_PC], NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInZ_PC]))
						    {
								if (PlayersData[playerid][Dinero] >= 10)
								{
								    if (NegociosData[PlayersData[playerid][IsPlayerInBizz]][Materiales] >= 2)
								    {
	   							        SetBuyBares(playerid, 1, true);
									}
									else
									{
										SendInfoMessage(playerid, 0, "428", "Este bar no tiene materiales");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "429", "No tienes suficiente dinero para comprar un regfresco, cuesta $10");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "430", "No te encuentras cerca del la barra");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "431", "No estás en un bar");
						}
					}
					else if (strcmp("/Comprar Cerveza", cmdtext, true, 16) == 0 && strlen(cmdtext) == 16)
				    {
						if (PlayersData[playerid][IsPlayerInBizz] && IsBizzBar(playerid, NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]))
						{
						    if (IsPlayerInRangeOfPoint(playerid, 3.0, NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInX_PC], NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInY_PC], NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInZ_PC]))
						    {
								if (PlayersData[playerid][Dinero] >= 15)
								{
								    if (NegociosData[PlayersData[playerid][IsPlayerInBizz]][Materiales] >= 2)
								    {
								        SetBuyBares(playerid, 2, true);
									}
									else
									{
										SendInfoMessage(playerid, 0, "432", "Este bar no tiene materiales");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "433", "No tienes suficiente dinero para comprar una cerveza, cuesta $5");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "434", "No te encuentras cerca del la barra");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "435", "No estás en un bar");
						}
				    }
					else if (strcmp("/Comprar Vodka", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
				    {
						if (PlayersData[playerid][IsPlayerInBizz] && IsBizzBar(playerid, NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]))
						{
						    if (IsPlayerInRangeOfPoint(playerid, 3.0, NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInX_PC], NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInY_PC], NegociosType[NegociosData[PlayersData[playerid][IsPlayerInBizz]][Type]][PosInZ_PC]))
						    {
								if (PlayersData[playerid][Dinero] >= 20)
								{
								    if (NegociosData[PlayersData[playerid][IsPlayerInBizz]][Materiales] >= 2)
								    {
								        SetBuyBares(playerid, 3, true);
									}
									else
									{
										SendInfoMessage(playerid, 0, "436", "Este bar no tiene materiales");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "437", "No tienes suficiente dinero para comprar una botella de Vodka, cuesta $20");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "438", "No te encuentras cerca del la barra");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "439", "No estás en un bar");
						}
				    }
				    else
				    {
						SendInfoMessage(playerid, 0, "440", "Quizás quiso decir: /Comprar {Ropa, Negocio, Agua, Vodka, Refresco, Cerveza, Casa, Peluca, Lentes, Bandana, Boina, Gorra, Reloj, Casco}");
					}
			    }
			    // COMANDO: /Mascota
		  		else if (strcmp("/Mascota", cmdtext, true, 8) == 0 && strlen(cmdtext) == 8)
		    	{
		    	    if (PlayersData[playerid][HaveMascota][0] ||
						PlayersData[playerid][HaveMascota][1] ||
						PlayersData[playerid][HaveMascota][2] )
		    	    {
		    	        new Mensaje[MAX_TEXT_CHAT];
						format(Mensaje, sizeof(Mensaje), "Tienes una o varias mascotas con identificación %i, %i, %i", PlayersData[playerid][Mascota_ID][0], PlayersData[playerid][Mascota_ID][1], PlayersData[playerid][Mascota_ID][2]);
						SendInfoMessage(playerid, 3, "0", Mensaje);
					}
					else
					{
					    new Mensaje[MAX_TEXT_CHAT];
						format(Mensaje, sizeof(Mensaje), "No tienes mascotas (ID's Actuales: %i, %i, %i)", PlayersData[playerid][Mascota_ID][0], PlayersData[playerid][Mascota_ID][1], PlayersData[playerid][Mascota_ID][2]);
					    SendInfoMessage(playerid, 0, "439", Mensaje);
					}
				}// COMANDO: /Mascotas
		  		else if (strcmp("/Mascotas", cmdtext, true, 9) == 0 && strlen(cmdtext) == 9)
		    	{
		    	    ShowMascotasStats(playerid, playerid);
				}
			    // COMANDO: /Contrato [ID] [Precio]
	  			else if (strfind(cmdtext, "/Contrato ", true) == 0)
			    {
			        //
					new PlayeridSplit[5], MoneySplit[10];
					new fPos;
					fPos = strfind(cmdtext, " ", false, 11);
					strmid(PlayeridSplit, cmdtext, 10, fPos);
					strmid(MoneySplit, cmdtext, fPos, strlen(cmdtext));

				    if (IsPlayerNear(playerid, strval(PlayeridSplit),
						 "564",
						 "563",
						 "562",
						 "El jugador que le deseas hacerle un contrato no se encuentra conectado",
						 "El jugador que le deseas hacerle un contrato no se ha logueado",
						 "El jugador que le deseas hacerle un contrato no se encuentra cerca de tí"))
				    {
				        if (strval(MoneySplit) >= 1000)
				        {
							new MsgContrato[MAX_TEXT_CHAT];
							new MsgContratoToPlayer[MAX_TEXT_CHAT];
							format(MsgContrato, sizeof(MsgContrato), "Has dado un contrato a %s, donde acuerdas el monto de $%i en el, espera que firme", PlayersDataOnline[strval(PlayeridSplit)][NameOnlineFix], strval(MoneySplit));
							format(MsgContratoToPlayer, sizeof(MsgContratoToPlayer), "Has recibido un contrato de %s, donde acuerda el monto de $%i, usa (/Aceptar Contrato), para finalizarlo", PlayersDataOnline[playerid][NameOnlineFix], strval(MoneySplit));

							SendInfoMessage(playerid, 3, "0", MsgContrato);
							SendInfoMessage(strval(PlayeridSplit),3, "0", MsgContratoToPlayer);
							PlayersDataOnline[strval(PlayeridSplit)][Contrato][0] = playerid;
							PlayersDataOnline[strval(PlayeridSplit)][Contrato][1] = strval(MoneySplit);
						}
						else
						{
							SendInfoMessage(playerid, 0, "561", "La cantidad mínima para un contrato es $1000");
						}
				    }
			    }
				// COMANDO: (Quitar
		  		else if (strfind(cmdtext, "/Quitar", true) == 0)
			    {
					// COMANDO: /Quitar Arma [ID]
			  		if (strfind(cmdtext, "/Quitar Arma ", true) == 0)
				    {
					    if (IsPlayerNear(playerid, strval(cmdtext[13]),
							 "774",
							 "775",
							 "776",
							 "El jugador que le deseas quitarle el arma no se encuentra conectado",
							 "El jugador que le deseas quitarle el arma no se ha logueado",
							 "El jugador que le deseas quitarle el arma no se encuentra cerca de tí"))
					    {
							new QuitarWeapons, QuitarAmmo; QuitarWeapons = GetPlayerWeapon(strval(cmdtext[13])); QuitarAmmo = GetPlayerAmmo(strval(cmdtext[13]));
					        if (CheckWeapondCheat(playerid) && CheckWeapondCheat(strval(cmdtext[13])) && QuitarWeapons != 0)
					        {
								if (IsPlayerNotVehicleWeapondAction(playerid, strval(cmdtext[13])))
								{
							        new MsgQuitarArmaIntentar[MAX_TEXT_CHAT];
							        format(MsgQuitarArmaIntentar, sizeof(MsgQuitarArmaIntentar), "quitar el arma a %s", PlayersDataOnline[strval(cmdtext[13])][NameOnlineFix]);
									if (IntentarAccion(playerid, MsgQuitarArmaIntentar, random(2)))
									{
										RemovePlayerWeapond(strval(cmdtext[13]), QuitarWeapons);
			                            GivePlayerWeaponEx(playerid, QuitarWeapons, QuitarAmmo);
									}
								}
					        }
					        else
					        {
								SendInfoMessage(playerid, 0, "773", "Este jugador no tiene ningún arma en las manos!");
							}
					    }
				    }
				    // COMANDO: /Quitar VIP [ID]
 			  		if (strfind(cmdtext, "/Quitar VIP ", true) == 0)
				    {
						if(PlayersData[playerid][Admin] >= 9)
						{
							new vipid = strval(cmdtext[12]);
						    if(IsPlayerConnected(vipid))
						    {
						        if(PlayersData[vipid][VIP])
						        {
				                	//- Nuevo comando
				                	PlayersData[vipid][VIP] = 0;
				     	           	PlayersData[vipid][TimeVip] = 0;

				     	           	//- Mensaje para el usuario
				     	           	SendInfoMessage(vipid, 3, "0", "¡Ya no tienes ninguna membresia!");
				     	           	SendInfoMessage(vipid, 3, "0", "Has perdido todas las propiedades excedentes, debido a que ya no posees una membresia.");

				     	           	//- Mensaje para el admin
				     	           	new MsjVip[MAX_TEXT_CHAT];
				     	           	format(MsjVip, sizeof(MsjVip), "Le has quitado la membresia a %s", PlayersDataOnline[vipid][NameOnlineFix]);
				                	SendInfoMessage(playerid, 3, "0", MsjVip);

				                	//- Vendemos todas sus propiedades
									//RemoverPropiedadesVIP(vipid);
									SetPlayerColor(vipid, (PlayersData[vipid][VIP]) ? COLOR_PLAYERS_VIP : PLAYERS_COLOR);
				            	}
				            	else
				        		{
				            		SendInfoMessage(playerid, 3, "0", "El jugador al que quieres retirar su membresia, no posee ninguna, comprueba la información");
				        		}
							}
							else
							{
							    SendInfoMessage(playerid, 3, "0", "El jugador al que quieres retirar la membresia no se encuentra conectado");
	        				}
				    	}
				    	else
				    	{
				     	   	SendInfoMessage(playerid, 0, "101", "Tú no tienes acceso al comando /Quitar VIP [ID].");
				     	   	if(PlayersData[playerid][Admin] >= 9)
				     	   	{
				    	        SendInfoMessage(playerid, 0, "101", "Recuerda activar /AdminOn");
				    	    }
				    	}
				    }
					// COMANDO: /Quitar Licencia [Tipo] [ID]
			  		else if (strfind(cmdtext, "/Quitar Licencia ", true) == 0)
				    {
						if (PlayersData[playerid][Faccion] == SAPD ||
							 PlayersData[playerid][Faccion] == SAPD)
					    {
							// COMANDO: /Quitar Licencia Armas [ID]
					  		if (strfind(cmdtext, "/Quitar Licencia Armas ", true) == 0) // 17
						    {
							    if (IsPlayerNear(playerid, strval(cmdtext[23]),
									 "546",
									 "545",
									 "544",
									 "El jugador que le deseas quitarle la licencia de Armas no se encuentra conectado",
									 "El jugador que le deseas quitarle la licencia de Armas no se ha logueado",
									 "El jugador que le deseas quitarle la licencia de Armas no se encuentra cerca de tí"))
							    {
							        if (PlayersData[strval(cmdtext[23])][Licencias][0])
							        {
										new MsgQuitarLicenciaMe[MAX_TEXT_CHAT];
										new MsgQuitarLicenciaInfo[MAX_TEXT_CHAT];
										new MsgQuitarLicenciaInfoToPlayer[MAX_TEXT_CHAT];
										format(MsgQuitarLicenciaMe, sizeof(MsgQuitarLicenciaMe), "le quitó la licencia de Armas a %s", PlayersDataOnline[strval(cmdtext[23])][NameOnlineFix]);
										format(MsgQuitarLicenciaInfo, sizeof(MsgQuitarLicenciaInfo), "Le has quitado la licenciad de Armas a %s", PlayersDataOnline[strval(cmdtext[23])][NameOnlineFix]);
										format(MsgQuitarLicenciaInfoToPlayer, sizeof(MsgQuitarLicenciaInfoToPlayer), "%s te ha quitado la licencia de Armas", PlayersDataOnline[playerid][NameOnlineFix]);

										Acciones_ROL(playerid, ACCION_ME, MsgQuitarLicenciaMe);
										SendInfoMessage(playerid, 3, "0", MsgQuitarLicenciaInfo);
										SendInfoMessage(strval(cmdtext[23]),3, "0", MsgQuitarLicenciaInfoToPlayer);

										PlayersData[strval(cmdtext[23])][Licencias][0] = false;
										PlayersData[strval(cmdtext[23])][LicenciasTime][0]	= 0;
									}
									else
									{
										SendInfoMessage(playerid, 0, "543", "Este jugador no tiene licencia de Armas!");
									}
							    }
						    }
							// COMANDO: /Quitar Licencia Coche [ID]
					  		else if (strfind(cmdtext, "/Quitar Licencia Coche ", true) == 0) // 17
						    {
							    if (IsPlayerNear(playerid, strval(cmdtext[23]),
									 "542",
									 "541",
									 "540",
									 "El jugador que le deseas quitarle la licencia de Coche no se encuentra conectado",
									 "El jugador que le deseas quitarle la licencia de Coche no se ha logueado",
									 "El jugador que le deseas quitarle la licencia de Coche no se encuentra cerca de tí"))
							    {
							        if (PlayersData[strval(cmdtext[23])][Licencias][1])
							        {
										new MsgQuitarLicenciaMe[MAX_TEXT_CHAT];
										new MsgQuitarLicenciaInfo[MAX_TEXT_CHAT];
										new MsgQuitarLicenciaInfoToPlayer[MAX_TEXT_CHAT];
										format(MsgQuitarLicenciaMe, sizeof(MsgQuitarLicenciaMe), "le quitó la licencia de Coche a %s", PlayersDataOnline[strval(cmdtext[23])][NameOnlineFix]);
										format(MsgQuitarLicenciaInfo, sizeof(MsgQuitarLicenciaInfo), "Le has quitado la licenciad de Coche a %s", PlayersDataOnline[strval(cmdtext[23])][NameOnlineFix]);
										format(MsgQuitarLicenciaInfoToPlayer, sizeof(MsgQuitarLicenciaInfoToPlayer), "%s te ha quitado la licencia de Coche", PlayersDataOnline[playerid][NameOnlineFix]);

										Acciones_ROL(playerid, ACCION_ME, MsgQuitarLicenciaMe);
										SendInfoMessage(playerid, 3, "0", MsgQuitarLicenciaInfo);
										SendInfoMessage(strval(cmdtext[23]),3, "0", MsgQuitarLicenciaInfoToPlayer);

										PlayersData[strval(cmdtext[23])][Licencias][1] = false;
										PlayersData[strval(cmdtext[23])][LicenciasTime][1]	= 0;
									}
									else
									{
										SendInfoMessage(playerid, 0, "539", "Este jugador no tiene licencia de coche!");
									}
							    }
						    }

							// COMANDO: /Quitar Licencia Camión [ID]
					  		else if (strfind(cmdtext, "/Quitar Licencia Camión ", true) == 0 ||
							  		 strfind(cmdtext, "/Quitar Licencia Camion ", true) == 0) // 17
						    {
							    if (IsPlayerNear(playerid, strval(cmdtext[24]),
									 "538",
									 "537",
									 "536",
									 "El jugador que le deseas quitarle la licencia de Camión no se encuentra conectado",
									 "El jugador que le deseas quitarle la licencia de Camión no se ha logueado",
									 "El jugador que le deseas quitarle la licencia de Camión no se encuentra cerca de tí"))
							    {
							        if (PlayersData[strval(cmdtext[24])][Licencias][2])
							        {
										new MsgQuitarLicenciaMe[MAX_TEXT_CHAT];
										new MsgQuitarLicenciaInfo[MAX_TEXT_CHAT];
										new MsgQuitarLicenciaInfoToPlayer[MAX_TEXT_CHAT];
										format(MsgQuitarLicenciaMe, sizeof(MsgQuitarLicenciaMe), "le quitó la licencia de Camión a %s", PlayersDataOnline[strval(cmdtext[24])][NameOnlineFix]);
										format(MsgQuitarLicenciaInfo, sizeof(MsgQuitarLicenciaInfo), "Le has quitado la licenciad de Camión a %s", PlayersDataOnline[strval(cmdtext[24])][NameOnlineFix]);
										format(MsgQuitarLicenciaInfoToPlayer, sizeof(MsgQuitarLicenciaInfoToPlayer), "%s te ha quitado la licencia de Camión", PlayersDataOnline[playerid][NameOnlineFix]);

										Acciones_ROL(playerid, ACCION_ME, MsgQuitarLicenciaMe);
										SendInfoMessage(playerid, 3, "0", MsgQuitarLicenciaInfo);
										SendInfoMessage(strval(cmdtext[24]),3, "0", MsgQuitarLicenciaInfoToPlayer);

										PlayersData[strval(cmdtext[24])][Licencias][2] = false;
										PlayersData[strval(cmdtext[23])][LicenciasTime][2]	= 0;
									}
									else
									{
										SendInfoMessage(playerid, 0, "535", "Este jugador no tiene licencia de Camión!");
									}
							    }
						    }
							// COMANDO: /Quitar Licencia Moto [ID]
					  		else if (strfind(cmdtext, "/Quitar Licencia Moto ", true) == 0) // 17
						    {
							    if (IsPlayerNear(playerid, strval(cmdtext[22]),
									 "534",
									 "533",
									 "532",
									 "El jugador que le deseas quitarle la licencia de Moto no se encuentra conectado",
									 "El jugador que le deseas quitarle la licencia de Moto no se ha logueado",
									 "El jugador que le deseas quitarle la licencia de Moto no se encuentra cerca de tí"))
							    {
							        if (PlayersData[strval(cmdtext[22])][Licencias][3])
							        {
										new MsgQuitarLicenciaMe[MAX_TEXT_CHAT];
										new MsgQuitarLicenciaInfo[MAX_TEXT_CHAT];
										new MsgQuitarLicenciaInfoToPlayer[MAX_TEXT_CHAT];
										format(MsgQuitarLicenciaMe, sizeof(MsgQuitarLicenciaMe), "le quitó la licencia de Moto a %s", PlayersDataOnline[strval(cmdtext[22])][NameOnlineFix]);
										format(MsgQuitarLicenciaInfo, sizeof(MsgQuitarLicenciaInfo), "Le has quitado la licenciad de Moto a %s", PlayersDataOnline[strval(cmdtext[22])][NameOnlineFix]);
										format(MsgQuitarLicenciaInfoToPlayer, sizeof(MsgQuitarLicenciaInfoToPlayer), "%s te ha quitado la licencia de Moto", PlayersDataOnline[playerid][NameOnlineFix]);

										Acciones_ROL(playerid, ACCION_ME, MsgQuitarLicenciaMe);
										SendInfoMessage(playerid, 3, "0", MsgQuitarLicenciaInfo);
										SendInfoMessage(strval(cmdtext[22]),3, "0", MsgQuitarLicenciaInfoToPlayer);

										PlayersData[strval(cmdtext[22])][Licencias][3] = false;
										PlayersData[strval(cmdtext[22])][LicenciasTime][3]	= 0;
									}
									else
									{
										SendInfoMessage(playerid, 0, "531", "Este jugador no tiene licencia de moto!");
									}
							    }
						    }
							// COMANDO: /Quitar Licencia Vuelo [ID]
					  		else if (strfind(cmdtext, "/Quitar Licencia Vuelo ", true) == 0) // 17
						    {
							    if (IsPlayerNear(playerid, strval(cmdtext[23]),
									 "530",
									 "529",
									 "528",
									 "El jugador que le deseas quitarle la licencia de Vuelo no se encuentra conectado",
									 "El jugador que le deseas quitarle la licencia de Vuelo no se ha logueado",
									 "El jugador que le deseas quitarle la licencia de Vuelo no se encuentra cerca de tí"))
							    {
							        if (PlayersData[strval(cmdtext[23])][Licencias][4])
							        {
										new MsgQuitarLicenciaMe[MAX_TEXT_CHAT];
										new MsgQuitarLicenciaInfo[MAX_TEXT_CHAT];
										new MsgQuitarLicenciaInfoToPlayer[MAX_TEXT_CHAT];
										format(MsgQuitarLicenciaMe, sizeof(MsgQuitarLicenciaMe), "le quitó la licencia de Vuelo a %s", PlayersDataOnline[strval(cmdtext[23])][NameOnlineFix]);
										format(MsgQuitarLicenciaInfo, sizeof(MsgQuitarLicenciaInfo), "Le has quitado la licenciad de Vuelo a %s", PlayersDataOnline[strval(cmdtext[23])][NameOnlineFix]);
										format(MsgQuitarLicenciaInfoToPlayer, sizeof(MsgQuitarLicenciaInfoToPlayer), "%s te ha quitado la licencia de Vuelo", PlayersDataOnline[playerid][NameOnlineFix]);

										Acciones_ROL(playerid, ACCION_ME, MsgQuitarLicenciaMe);
										SendInfoMessage(playerid, 3, "0", MsgQuitarLicenciaInfo);
										SendInfoMessage(strval(cmdtext[23]),3, "0", MsgQuitarLicenciaInfoToPlayer);

										PlayersData[strval(cmdtext[23])][Licencias][4] = false;
										PlayersData[strval(cmdtext[23])][LicenciasTime][4]	= 0;
									}
									else
									{
										SendInfoMessage(playerid, 0, "527", "Este jugador no tiene licencia de Vuelo!");
									}
							    }
						    }
							// COMANDO: /Quitar Licencia Bote [ID]
					  		else if (strfind(cmdtext, "/Quitar Licencia Bote ", true) == 0) // 17
						    {
							    if (IsPlayerNear(playerid, strval(cmdtext[22]),
									 "526",
									 "525",
									 "524",
									 "El jugador que le deseas quitarle la licencia de Bote no se encuentra conectado",
									 "El jugador que le deseas quitarle la licencia de Bote no se ha logueado",
									 "El jugador que le deseas quitarle la licencia de Bote no se encuentra cerca de tí"))
							    {
							        if (PlayersData[strval(cmdtext[22])][Licencias][5])
							        {
										new MsgQuitarLicenciaMe[MAX_TEXT_CHAT];
										new MsgQuitarLicenciaInfo[MAX_TEXT_CHAT];
										new MsgQuitarLicenciaInfoToPlayer[MAX_TEXT_CHAT];
										format(MsgQuitarLicenciaMe, sizeof(MsgQuitarLicenciaMe), "le quitó la licencia de Bote a %s", PlayersDataOnline[strval(cmdtext[22])][NameOnlineFix]);
										format(MsgQuitarLicenciaInfo, sizeof(MsgQuitarLicenciaInfo), "Le has quitado la licenciad de Bote a %s", PlayersDataOnline[strval(cmdtext[22])][NameOnlineFix]);
										format(MsgQuitarLicenciaInfoToPlayer, sizeof(MsgQuitarLicenciaInfoToPlayer), "%s te ha quitado la licencia de Bote", PlayersDataOnline[playerid][NameOnlineFix]);

										Acciones_ROL(playerid, ACCION_ME, MsgQuitarLicenciaMe);
										SendInfoMessage(playerid, 3, "0", MsgQuitarLicenciaInfo);
										SendInfoMessage(strval(cmdtext[22]),3, "0", MsgQuitarLicenciaInfoToPlayer);

										PlayersData[strval(cmdtext[22])][Licencias][5] = false;
										PlayersData[strval(cmdtext[22])][LicenciasTime][5]	= 0;
									}
									else
									{
										SendInfoMessage(playerid, 0, "522", "Este jugador no tiene licencia de Bote!");
									}
							    }
						    }
							// COMANDO: /Quitar Licencia Tren [ID]
					  		else if (strfind(cmdtext, "/Quitar Licencia Tren ", true) == 0) // 17
						    {
							    if (IsPlayerNear(playerid, strval(cmdtext[22]),
									 "1051",
									 "1050",
									 "1048",
									 "El jugador que le deseas quitarle la licencia de Tren no se encuentra conectado",
									 "El jugador que le deseas quitarle la licencia de Tren no se ha logueado",
									 "El jugador que le deseas quitarle la licencia de Tren no se encuentra cerca de tí"))
							    {
							        if (PlayersData[strval(cmdtext[22])][Licencias][6])
							        {
										new MsgQuitarLicenciaMe[MAX_TEXT_CHAT];
										new MsgQuitarLicenciaInfo[MAX_TEXT_CHAT];
										new MsgQuitarLicenciaInfoToPlayer[MAX_TEXT_CHAT];
										format(MsgQuitarLicenciaMe, sizeof(MsgQuitarLicenciaMe), "le quitó la licencia de Tren a %s", PlayersDataOnline[strval(cmdtext[22])][NameOnlineFix]);
										format(MsgQuitarLicenciaInfo, sizeof(MsgQuitarLicenciaInfo), "Le has quitado la licenciad de Tren a %s", PlayersDataOnline[strval(cmdtext[22])][NameOnlineFix]);
										format(MsgQuitarLicenciaInfoToPlayer, sizeof(MsgQuitarLicenciaInfoToPlayer), "%s te ha quitado la licencia de Tren", PlayersDataOnline[playerid][NameOnlineFix]);

										Acciones_ROL(playerid, ACCION_ME, MsgQuitarLicenciaMe);
										SendInfoMessage(playerid, 3, "0", MsgQuitarLicenciaInfo);
										SendInfoMessage(strval(cmdtext[22]),3, "0", MsgQuitarLicenciaInfoToPlayer);

										PlayersData[strval(cmdtext[22])][Licencias][6] = false;
										PlayersData[strval(cmdtext[22])][LicenciasTime][6]	= 0;
									}
									else
									{
										SendInfoMessage(playerid, 0, "1047", "Este jugador no tiene licencia de tren!");
									}
							    }
						    }
							// COMANDO: /Quitar Licencia Pesca [ID] // SE QUEDA EN SI
					  		else if (strfind(cmdtext, "/Quitar Licencia Pesca ", true) == 0) // 17
						    {
							    if (IsPlayerNear(playerid, strval(cmdtext[23]),
									 "521",
									 "520",
									 "519",
									 "El jugador que le deseas quitarle la licencia de Pesca no se encuentra conectado",
									 "El jugador que le deseas quitarle la licencia de Pesca no se ha logueado",
									 "El jugador que le deseas quitarle la licencia de Pesca no se encuentra cerca de tí"))
							    {
							        if (PlayersData[strval(cmdtext[23])][Licencias][7])
							        {
										new MsgQuitarLicenciaMe[MAX_TEXT_CHAT];
										new MsgQuitarLicenciaInfo[MAX_TEXT_CHAT];
										new MsgQuitarLicenciaInfoToPlayer[MAX_TEXT_CHAT];
										format(MsgQuitarLicenciaMe, sizeof(MsgQuitarLicenciaMe), "le quitó la licencia de Pesca a %s", PlayersDataOnline[strval(cmdtext[23])][NameOnlineFix]);
										format(MsgQuitarLicenciaInfo, sizeof(MsgQuitarLicenciaInfo), "Le has quitado la licenciad de Pesca a %s", PlayersDataOnline[strval(cmdtext[23])][NameOnlineFix]);
										format(MsgQuitarLicenciaInfoToPlayer, sizeof(MsgQuitarLicenciaInfoToPlayer), "%s te ha quitado la licencia de Pesca", PlayersDataOnline[playerid][NameOnlineFix]);

										Acciones_ROL(playerid, ACCION_ME, MsgQuitarLicenciaMe);
										SendInfoMessage(playerid, 3, "0", MsgQuitarLicenciaInfo);
										SendInfoMessage(strval(cmdtext[23]),3, "0", MsgQuitarLicenciaInfoToPlayer);

										PlayersData[strval(cmdtext[23])][LicenciaPesca] = false;
										PlayersData[strval(cmdtext[23])][LicenciasTime][7]	= 0;
									}
									else
									{
										SendInfoMessage(playerid, 0, "518", "Este jugador no tiene licencia de Pesca!");
									}
							    }
						    }
							else
							{
								SendInfoMessage(playerid, 0, "517", "Quizás quiso decir: /Quitar Licencia {Armas [ID], Coche [ID], Camión [ID], Moto [ID], Vuelo [ID], Bote [ID], Pesca [ID], Tren [ID]}");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "522", "Usted no es SAPD ni SAPD");
						}
					}
					// COMANDO: /Quitar Idioma [Tipo] [ID]
					else if (strfind(cmdtext, "/Quitar Idioma ", true) == 0)
				    {
						MsgAdminUseCommands(9, playerid, cmdtext);
						if(PlayersData[playerid][Admin] >= 7 && PlayersDataOnline[playerid][AdminOn])
						{
		   					// COMANDO: /Quitar Idioma Alemán [ID]
					  		if (strfind(cmdtext, "/Quitar Idioma Alemán ", true) == 0 || // 12
							  	strfind(cmdtext, "/Quitar Idioma Aleman ", true) == 0)
						    {
								if(IsPlayerConnected(strval(cmdtext[22])))
								{
									if (PlayersData[strval(cmdtext[22])][Idiomas][0])
									{
										new MsgQuitarIdiomaInfo[MAX_TEXT_CHAT];
										new MsgQuitarIdiomaInfoToPlayer[MAX_TEXT_CHAT];
										format(MsgQuitarIdiomaInfo, sizeof(MsgQuitarIdiomaInfo), "Has quitado el título de alemán a %s", PlayersDataOnline[strval(cmdtext[22])][NameOnlineFix]);
										format(MsgQuitarIdiomaInfoToPlayer, sizeof(MsgQuitarIdiomaInfoToPlayer), "%s te a quitado el título de alemán", PlayersDataOnline[playerid][NameOnlineFix]);

										SendInfoMessage(playerid, 3, "0", MsgQuitarIdiomaInfo);
										SendInfoMessage(strval(cmdtext[22]), 3, "0", MsgQuitarIdiomaInfoToPlayer);

										PlayersData[strval(cmdtext[22])][Idiomas][0] = false;
									}
									else
									{
										SendInfoMessage(playerid, 0, "480", "Ese jugador no tiene un título de alemán");
									}
								}
								else
								{
									SendInfoMessage(playerid, 3, "0", "El jugador al que quieres retirar el idioma no se encuentra conectado");
								}
						    }
							// COMANDO: /Dar Idioma Francés [ID]
							else if (strfind(cmdtext, "/Dar Idioma Francés ", true) == 0 || // 12
							  		 strfind(cmdtext, "/Dar Idioma Frances ", true) == 0)
						    {
							    if(IsPlayerConnected(strval(cmdtext[20])))
								{
									if (PlayersData[strval(cmdtext[20])][Idiomas][1])
									{
										new MsgQuitarIdiomaInfo[MAX_TEXT_CHAT];
										new MsgQuitarIdiomaInfoToPlayer[MAX_TEXT_CHAT];
										format(MsgQuitarIdiomaInfo, sizeof(MsgQuitarIdiomaInfo), "Has quitado el título de francés a %s", PlayersDataOnline[strval(cmdtext[20])][NameOnlineFix]);
										format(MsgQuitarIdiomaInfoToPlayer, sizeof(MsgQuitarIdiomaInfoToPlayer), "%s te a quitado el título de francés", PlayersDataOnline[playerid][NameOnlineFix]);

										SendInfoMessage(playerid, 3, "0", MsgQuitarIdiomaInfo);
										SendInfoMessage(strval(cmdtext[20]), 3, "0", MsgQuitarIdiomaInfoToPlayer);

										PlayersData[strval(cmdtext[20])][Idiomas][1] = false;
									}
									else
									{
										SendInfoMessage(playerid, 0, "480", "Ese jugador no tiene un título de francés");
									}
								}
								else
								{
									SendInfoMessage(playerid, 3, "0", "El jugador al que quieres retirar el idioma no se encuentra conectado");
								}
						    }
							// COMANDO: /Quitar Idioma Portugués [ID]
							else if (strfind(cmdtext, "/Quitar Idioma Portugués ", true) == 0 || // 12
							  		 strfind(cmdtext, "/Quitar Idioma Portugues ", true) == 0)
						    {
							    if(IsPlayerConnected(strval(cmdtext[25])))
								{
									if (PlayersData[strval(cmdtext[25])][Idiomas][2])
									{
										new MsgQuitarIdiomaInfo[MAX_TEXT_CHAT];
										new MsgQuitarIdiomaInfoToPlayer[MAX_TEXT_CHAT];
										format(MsgQuitarIdiomaInfo, sizeof(MsgQuitarIdiomaInfo), "Has quitado el título de portugués a %s", PlayersDataOnline[strval(cmdtext[25])][NameOnlineFix]);
										format(MsgQuitarIdiomaInfoToPlayer, sizeof(MsgQuitarIdiomaInfoToPlayer), "%s te a quitado el título de portugués", PlayersDataOnline[playerid][NameOnlineFix]);

										SendInfoMessage(playerid, 3, "0", MsgQuitarIdiomaInfo);
										SendInfoMessage(strval(cmdtext[25]), 3, "0", MsgQuitarIdiomaInfoToPlayer);

										PlayersData[strval(cmdtext[25])][Idiomas][2] = false;
									}
									else
									{
										SendInfoMessage(playerid, 0, "480", "Ese jugador no tiene un título de portugués");
									}
								}
								else
								{
									SendInfoMessage(playerid, 3, "0", "El jugador al que quieres retirar el idioma no se encuentra conectado");
								}
						    }
							// COMANDO: /Quitar Idioma Italiano [ID]
							else if (strfind(cmdtext, "/Quitar Idioma Italiano ", true) == 0)
						    {
							    if(IsPlayerConnected(strval(cmdtext[24])))
								{
									if (PlayersData[strval(cmdtext[24])][Idiomas][3])
									{
										new MsgQuitarIdiomaInfo[MAX_TEXT_CHAT];
										new MsgQuitarIdiomaInfoToPlayer[MAX_TEXT_CHAT];
										format(MsgQuitarIdiomaInfo, sizeof(MsgQuitarIdiomaInfo), "Has quitado el título de italiano a %s", PlayersDataOnline[strval(cmdtext[24])][NameOnlineFix]);
										format(MsgQuitarIdiomaInfoToPlayer, sizeof(MsgQuitarIdiomaInfoToPlayer), "%s te a quitado el título de italiano", PlayersDataOnline[playerid][NameOnlineFix]);

										SendInfoMessage(playerid, 3, "0", MsgQuitarIdiomaInfo);
										SendInfoMessage(strval(cmdtext[24]), 3, "0", MsgQuitarIdiomaInfoToPlayer);

										PlayersData[strval(cmdtext[24])][Idiomas][3] = false;
									}
									else
									{
										SendInfoMessage(playerid, 0, "480", "Ese jugador no tiene un título de italiano");
									}
								}
								else
								{
									SendInfoMessage(playerid, 3, "0", "El jugador al que quieres retirar el idioma no se encuentra conectado");
								}
						    }
							// COMANDO: /Quitar Idioma Inglés [ID]
							else if (strfind(cmdtext, "/Quitar Idioma Inglés ", true) == 0 || // 12
							  		 strfind(cmdtext, "/Quitar Idioma Ingles ", true) == 0)
						    {
							    if(IsPlayerConnected(strval(cmdtext[22])))
								{
									if (PlayersData[strval(cmdtext[22])][Idiomas][4])
									{
										new MsgQuitarIdiomaInfo[MAX_TEXT_CHAT];
										new MsgQuitarIdiomaInfoToPlayer[MAX_TEXT_CHAT];
										format(MsgQuitarIdiomaInfo, sizeof(MsgQuitarIdiomaInfo), "Has quitado el título de inglés a %s", PlayersDataOnline[strval(cmdtext[22])][NameOnlineFix]);
										format(MsgQuitarIdiomaInfoToPlayer, sizeof(MsgQuitarIdiomaInfoToPlayer), "%s te a quitado el título de inglés", PlayersDataOnline[playerid][NameOnlineFix]);

										SendInfoMessage(playerid, 3, "0", MsgQuitarIdiomaInfo);
										SendInfoMessage(strval(cmdtext[22]), 3, "0", MsgQuitarIdiomaInfoToPlayer);

										PlayersData[strval(cmdtext[22])][Idiomas][4] = false;
									}
									else
									{
										SendInfoMessage(playerid, 0, "480", "Ese jugador no tiene un título de inglés");
									}
								}
								else
								{
									SendInfoMessage(playerid, 3, "0", "El jugador al que quieres retirar el idioma no se encuentra conectado");
								}
						    }
							// COMANDO: /Quitar Idioma Japonés [ID]
							else if (strfind(cmdtext, "/Quitar Idioma Japonés ", true) == 0 || // 12
							  		 strfind(cmdtext, "/Quitar Idioma Japones ", true) == 0)
						    {
							    if(IsPlayerConnected(strval(cmdtext[23])))
								{
									if (PlayersData[strval(cmdtext[23])][Idiomas][5])
									{
										new MsgQuitarIdiomaInfo[MAX_TEXT_CHAT];
										new MsgQuitarIdiomaInfoToPlayer[MAX_TEXT_CHAT];
										format(MsgQuitarIdiomaInfo, sizeof(MsgQuitarIdiomaInfo), "Has quitado el título de japonés a %s", PlayersDataOnline[strval(cmdtext[23])][NameOnlineFix]);
										format(MsgQuitarIdiomaInfoToPlayer, sizeof(MsgQuitarIdiomaInfoToPlayer), "%s te a quitado el título de japonés", PlayersDataOnline[playerid][NameOnlineFix]);

										SendInfoMessage(playerid, 3, "0", MsgQuitarIdiomaInfo);
										SendInfoMessage(strval(cmdtext[23]), 3, "0", MsgQuitarIdiomaInfoToPlayer);

										PlayersData[strval(cmdtext[23])][Idiomas][5] = false;
									}
									else
									{
										SendInfoMessage(playerid, 0, "480", "Ese jugador no tiene un título de japonés");
									}
								}
								else
								{
									SendInfoMessage(playerid, 3, "0", "El jugador al que quieres retirar el idioma no se encuentra conectado");
								}
						    }
					        else
					        {
								SendInfoMessage(playerid, 0, "451", "Quizás quiso decir: /Quitar Idioma {Alemán [ID], Francés [ID], Portugués [ID], Italiano [ID], Inglés [ID], Japonés [ID]}");
							}
						}
						else
						{
							if(PlayersData[playerid][Admin] >= 7)
							{
								SendInfoMessage(playerid, 0, "101", "Recuerda activar /AdminOn");
							}
							else
							{
								SendInfoMessage(playerid, 0, "101", "Tú no tienes acceso al comando /Quitar Idioma [ID].");
							}
						}
				    }
					// COMANDO: /Quitar Tutorial [ID]
			  		else if (strfind(cmdtext, "/Quitar Tutorial ", true) == 0)
				    {
				        if (IsPlayerConnected(strval(cmdtext[17])))
				        {
				            if (PlayersData[strval(cmdtext[17])][InTutorial])
				            {
						        MsgAdminUseCommands(8, playerid, cmdtext);
						        new StringFormat[256];
		                        if (playerid != strval(cmdtext[17]) || PlayersData[strval(cmdtext[17])][Admin] == 1)
								{
									format(StringFormat, sizeof(StringFormat), "%s Han quitado el tutorial de reglas a %s por %s",LOGO_STAFF, PlayersDataOnline[strval(cmdtext[17])][NameOnline], PlayersDataOnline[playerid][NameOnline]);
									SendClientMessageToAll(COLOR_KICK_JAIL_BAN, StringFormat);
									SetPlayerTutorial(strval(cmdtext[17]), 18);
								}
	                            else
								{
									SendInfoMessage(playerid, 0, "1607", "Has intruducido tu misma ID.");
								}
							}

							else
							{
								SendInfoMessage(playerid, 0, "1608", "El jugador no se encuentra en ningún tutorial.");
							}
						}

						else
						{
							SendInfoMessage(playerid, 0, "1606", "El jugador que desea quitar el tutorial no se encuentra conectado.");
						}
					}
					// COMANDO: /Quitar Extorsión [ID]
			  		else if (strfind(cmdtext, "/Quitar Extorsión ", true) == 0 || strfind(cmdtext, "/Quitar Extorsion ", true) == 0)
				    {
				        if (PlayersDataOnline[playerid][InPickup] >= NegociosData[1][PickupOutId] &&
				             PlayersDataOnline[playerid][InPickup] <= NegociosData[MAX_BIZZ][PickupOutId])
				        {
				            if (IsMyBizz(playerid, PlayersDataOnline[playerid][MyPickupWorld], true) )
				            {
							    if (IsPlayerNear(playerid, strval(cmdtext[18]),
									 "343",
									 "344",
									 "345",
									 "El jugador que le deseas quitarle el poder de extorsión de su negocio no se encuentra conectado",
									 "El jugador que le deseas quitarle el poder de extorsión de su negocio no se ha logueado",
									 "El jugador que le deseas quitarle el poder de extorsión de su negocio no se encuentra cerca de tí"))
							    {
		                            if (IsMyExtorsion(strval(cmdtext[18]), PlayersDataOnline[playerid][MyPickupWorld]))
		                            {
									    format(NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Extorsion], MAX_PLAYER_NAME, "No");
										new MsgToMe[MAX_TEXT_CHAT];
										new MsgToExtorsionista[MAX_TEXT_CHAT];
										format(MsgToMe, sizeof(MsgToMe), "Has dado el poder de extorsión de este negocio a %s", PlayersDataOnline[strval(cmdtext[18])][NameOnlineFix]);
										format(MsgToExtorsionista, sizeof(MsgToExtorsionista), "%s te ha dado el poder de extorsionarle este negocio", PlayersDataOnline[playerid][NameOnlineFix]);
										SendInfoMessage(playerid, 3, "0", MsgToMe);
										SendInfoMessage(strval(cmdtext[18]), 3, "0", MsgToExtorsionista);
										ActTextDrawBizz(PlayersDataOnline[playerid][MyPickupWorld]);
									}
									else
									{
										SendInfoMessage(playerid, 0, "350", "Este jugador no es extorsionista de su negocio");
									}
							    }
				            }
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "351", "No te encuentras en ningún negocio");
						}
				    }
				    else
				    {
						SendInfoMessage(playerid, 0, "346", "Quizás quiso decir: /Quitar Extorsión [ID]");
					}
			    }
				// COMANDO: /Finalizar Entrevista
				else if (strcmp("/Finalizar Entrevista", cmdtext, true, 21) == 0 && strlen(cmdtext) == 21)
			    {
					if (PlayersData[playerid][Faccion] == CNN)
				    {
					    if (EntrevistaState)
					    {
					        EntrevistaState = false;
							for (new i = 0; i < MAX_PLAYERS; i++)
							{
							    if (IsPlayerConnected(i) && i != playerid && PlayersDataOnline[i][IsEntrevistado])
							    {
									PlayersDataOnline[i][IsEntrevistado] = false;
									SendInfoMessage(i, 3, "0", "Ha finalizado la entrevista actual");
								}
							}
							PlayersDataOnline[playerid][IsEntrevistado] = false;
							SendInfoMessage(playerid, 3, "0", "Ha cerrado la entrevista actual");
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "565", "No hay ninguna entrevista abierta en estos momentos");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "566", "Usted no es CNN");
					}
			    }
				// COMANDO: /Sacar [ID]
		  		else if (strfind(cmdtext, "/Sacar ", true) == 0)
			    {
					if (PlayersData[playerid][Faccion] == CNN)
				    {
					    if (IsPlayerNear(playerid, strval(cmdtext[7]),
							 "567",
							 "568",
							 "569",
							 "El jugador que le deseas sacar de la entrevista no se encuentra conectado",
							 "El jugador que le deseas sacar de la entrevista no se ha logueado",
							 "El jugador que le deseas sacar de la entrevista no se encuentra cerca de tí"))
					    {
							if (PlayersDataOnline[strval(cmdtext[7])][IsEntrevistado])
					        {
								new MsgEntrevistar[MAX_TEXT_CHAT];
								new MsgEntrevistarToPlayer[MAX_TEXT_CHAT];
								format(MsgEntrevistar, sizeof(MsgEntrevistar), "Has sacado a %s de la entrevista", PlayersDataOnline[strval(cmdtext[7])][NameOnlineFix]);
								format(MsgEntrevistarToPlayer, sizeof(MsgEntrevistarToPlayer), "El reportero %s te ha sacado de la entrevista", PlayersDataOnline[playerid][NameOnlineFix]);

								SendInfoMessage(playerid, 3, "0", MsgEntrevistar);
								SendInfoMessage(strval(cmdtext[7]), 3, "0", MsgEntrevistarToPlayer);
								PlayersDataOnline[strval(cmdtext[7])][IsEntrevistado] = false;
					        }
					        else
					        {
								SendInfoMessage(playerid, 0, "570", "Este jugador no se encuentra en una entrevista!");
							}
					    }
					}
					else
					{
						SendInfoMessage(playerid, 0, "571", "Usted no es CNN");
					}
			    }
				// COMANDO: /En [Texto]
		  		else if (strfind(cmdtext, "/En ", true) == 0)
			    {
			        if (PlayersDataOnline[playerid][IsEntrevistado])
			        {
						new Float:MyPos[3];
						new FoundCNN;
						for (new i = 0; i < MAX_PLAYERS; i++)
						{
						    GetPlayerPos(i, MyPos[0], MyPos[1], MyPos[2]);
						    if (IsPlayerConnected(i) && i != playerid && IsPlayerInRangeOfPoint(playerid, 4.0, MyPos[0], MyPos[1], MyPos[2]) && PlayersData[i][Faccion] == CNN)
						    {
						        FoundCNN = true;
							}
						}

				        if (FoundCNN)
				        {
					        new MsgTransmision[MAX_TEXT_CHAT];
					        format(MsgTransmision, sizeof(MsgTransmision), "** Entrevistado %s: %s", PlayersDataOnline[playerid][NameOnlineFix], cmdtext[4]);

				            for (new i = 0; i < MAX_PLAYERS; i++)
				            {
								if (IsPlayerConnected(i) && PlayersDataOnline[i][State] == 3 && PlayersDataOnline[i][StateChannelCNN])
								{
							   		SendClientMessage(i, COLOR_DE_TRANSMISION, MsgTransmision);
						   		}
					   		}
						}
						else
						{
							SendInfoMessage(playerid, 0, "572", "Tienes que estar al lado de un CNN para poder ser entrevistado");
						}
			        }
			        else
			        {
						SendInfoMessage(playerid, 0, "573", "No te encuentras en ninguna entrevista!");
					}
			    }
				// COMANDO: /Entrevistar [ID]
		  		else if (strfind(cmdtext, "/Entrevistar ", true) == 0)
			    {
					if (PlayersData[playerid][Faccion] == CNN)
				    {
					    if (IsPlayerNear(playerid, strval(cmdtext[13]),
							 "574",
							 "575",
							 "576",
							 "El jugador que le deseas entrevistar no se encuentra conectado",
							 "El jugador que le deseas entrevistar no se ha logueado",
							 "El jugador que le deseas entrevistar no se encuentra cerca de tí"))
					    {
					        if (!PlayersDataOnline[strval(cmdtext[13])][IsEntrevistado])
					        {
								new MsgEntrevistar[MAX_TEXT_CHAT];
								new MsgEntrevistarToPlayer[MAX_TEXT_CHAT];
								if (!EntrevistaState)
								{
									format(MsgEntrevistar, sizeof(MsgEntrevistar), "Has agregado a la entrevista a %s", PlayersDataOnline[strval(cmdtext[13])][NameOnlineFix]);
									EntrevistaState = true;
								}
								else
								{
									format(MsgEntrevistar, sizeof(MsgEntrevistar), "Has abierto una nueva entrevista, con %s", PlayersDataOnline[strval(cmdtext[13])][NameOnlineFix]);
								}
								format(MsgEntrevistarToPlayer, sizeof(MsgEntrevistarToPlayer), "El reportero %s te a incluido en la entrevista", PlayersDataOnline[playerid][NameOnlineFix]);
								SendInfoMessage(playerid, 3, "0", MsgEntrevistar);
								SendInfoMessage(strval(cmdtext[13]), 3, "0", MsgEntrevistarToPlayer);
								PlayersDataOnline[strval(cmdtext[13])][IsEntrevistado] = true;
							}
							else
							{
								SendInfoMessage(playerid, 0, "577", "Ya ese jugador se encuentra en la entrevista!");
							}
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "578", "Usted no es reportero");
					}
				}
				// COMANDO: /Multar [ID] [Precio] [Razón]
		  		else if (strfind(cmdtext, "/Multar ", true) == 0)
			    {
					if (PlayersData[playerid][Faccion] == SAPD ||
						 PlayersData[playerid][Faccion] == SAPD)
				    {
				        new playerid_multa = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
				        new dinero_multa = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
						cmdtext[GetPosSpace(cmdtext, 3)];
					    if (IsPlayerNear(playerid, playerid_multa,
							 "815",
							 "816",
							 "817",
							 "El jugador que desea darle una multa no se encuentra conectado",
							 "El jugador que desea darle una multa no se encuentra logueado",
							 "El jugador que desea darle una multa no se encuentra cerca de tí"))
					    {
					        if (dinero_multa > 0 && dinero_multa <= 20000)
					        {
								new MsgMulta[MAX_TEXT_CHAT];
								new MsgMultaToPlayer[MAX_TEXT_CHAT];
								format(MsgMulta, sizeof(MsgMulta), "Le has dado un multa de $%i a %s; Razón: %s", dinero_multa, PlayersDataOnline[playerid_multa][NameOnlineFix], cmdtext[GetPosSpace(cmdtext, 3)]);
								format(MsgMultaToPlayer, sizeof(MsgMultaToPlayer), "%s te ha dado una multa por $%i usa (/Aceptar Multa); Razón: %s", PlayersDataOnline[playerid][NameOnlineFix], dinero_multa, cmdtext[GetPosSpace(cmdtext, 3)]);
	                            SendInfoMessage(playerid, 3, "0", MsgMulta);
	                            SendInfoMessage(playerid_multa, 3, "0", MsgMultaToPlayer);

								PlayersDataOnline[playerid_multa][VMulta][0] = playerid;
								PlayersDataOnline[playerid_multa][VMulta][1] = dinero_multa;
							}
							else
							{
								SendInfoMessage(playerid, 0, "814", "El monto mínimo de una factura es $1 y máximo $20000");
							}
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "813", "Usted no es SAPD ni SAPD");
					}
				}
				// COMANDO: /Arrestar [ID] [Tiempo]
		  		else if (strfind(cmdtext, "/Arrestar ", true) == 0)
			    {
					if (PlayersData[playerid][Faccion] == SAPD)

				    {
				        new TypeJail;
				        if (IsPlayerInRangeOfPoint(playerid, 20.0, 227.1368,114.4184,999.0156))
				        {
					        TypeJail = 0;
						}
						else
						{
					        TypeJail = 1;
						}
						if (IsPlayerInRangeOfPoint(playerid, 11.0,
							JailsType[TypeJail][PosX_Preso],
							JailsType[TypeJail][PosY_Preso],
							JailsType[TypeJail][PosZ_Preso]))
						{
							new PlayeridSplit[5], TiempoSplit[5];
							new fPos;
							fPos = strfind(cmdtext, " ", false, 11);
							strmid(PlayeridSplit, cmdtext, 10, fPos);
							strmid(TiempoSplit, cmdtext, fPos, strlen(cmdtext));

						    if (IsPlayerNear(playerid, strval(PlayeridSplit),
								 "579",
								 "580",
								 "581",
								 "El jugador que le deseas arrestar no se encuentra conectado",
								 "El jugador que le deseas arrestar no se ha logueado",
								 "El jugador que le deseas arrestar no se encuentra cerca de tí"))
						    {
								if (strval(TiempoSplit) >= 0 && PlayersData[strval(PlayeridSplit)][IsInJail] != -1 && strval(TiempoSplit) <= 500 ||
									 strval(TiempoSplit) > 0 && PlayersData[strval(PlayeridSplit)][IsInJail] == -1 && strval(TiempoSplit) <= 500)
								{
									new MsgArestarMe[MAX_TEXT_CHAT];
									new MsgArestarInfo[MAX_TEXT_CHAT];
									new MsgArestarInfoToPlayer[MAX_TEXT_CHAT];

									if (PlayersData[strval(PlayeridSplit)][IsInJail] == -1)
									{
										format(MsgArestarMe, sizeof(MsgArestarMe), "arrestó a %s", PlayersDataOnline[strval(PlayeridSplit)][NameOnlineFix]);
										format(MsgArestarInfo, sizeof(MsgArestarInfo), "Has arrestado a %s", PlayersDataOnline[strval(PlayeridSplit)][NameOnlineFix]);
										format(MsgArestarInfoToPlayer, sizeof(MsgArestarInfoToPlayer), "Has sido arrestado por el %s",  FaccionesRangos[PlayersData[playerid][Faccion]][PlayersData[playerid][Rango]], PlayersDataOnline[playerid][NameOnlineFix]);
									}
									else if (strval(TiempoSplit) == 0)
									{
										format(MsgArestarMe, sizeof(MsgArestarMe), "le quitó el el arresto a %s", PlayersDataOnline[strval(PlayeridSplit)][NameOnlineFix]);
										format(MsgArestarInfo, sizeof(MsgArestarInfo), "Le quitaste el arresto a %s", PlayersDataOnline[strval(PlayeridSplit)][NameOnlineFix]);
										format(MsgArestarInfoToPlayer, sizeof(MsgArestarInfoToPlayer), "Has sido liberado por el %s",  FaccionesRangos[PlayersData[playerid][Faccion]][PlayersData[playerid][Rango]], PlayersDataOnline[playerid][NameOnlineFix]);
									}
									else
									{
										format(MsgArestarMe, sizeof(MsgArestarMe), "le modificó la condena a %s", PlayersDataOnline[strval(PlayeridSplit)][NameOnlineFix]);
										format(MsgArestarInfo, sizeof(MsgArestarInfo), "Le modificasnte la condena a %s por %i minutos", PlayersDataOnline[strval(PlayeridSplit)][NameOnlineFix], strval(TiempoSplit));
										format(MsgArestarInfoToPlayer, sizeof(MsgArestarInfoToPlayer), "El %s %s te ha modificado la condena a %i minutos", FaccionesRangos[PlayersData[playerid][Faccion]][PlayersData[playerid][Rango]], PlayersDataOnline[playerid][NameOnlineFix], strval(TiempoSplit));
									}

									PlayersData[strval(PlayeridSplit)][IsInJail] = TypeJail;
									PlayersData[strval(PlayeridSplit)][Jail] = gettime() + (strval(TiempoSplit) * 60);
									SetPlayerJail(strval(PlayeridSplit));

									Acciones_ROL(playerid, ACCION_ME, MsgArestarMe);
									SendInfoMessage(playerid, 3, "0", MsgArestarInfo);
									SendInfoMessage(strval(PlayeridSplit),3, "0", MsgArestarInfoToPlayer);
								}
							    else
							    {
									SendInfoMessage(playerid, 0, "582", "El mínimo de tiempo para el arresto es 0 que sería liberar y 500 minutos como máximo");
								}
						    }
						}
						else
						{
							SendInfoMessage(playerid, 0, "583", "No se encuentra cerca de la celdas");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "584", "Usted no es SAPD ni SAPD");
					}
				}
				// COMANDO: /Banco
			  	else if (strcmp("/Banco", cmdtext, true, 6) == 0 && strlen(cmdtext) == 6)
			  	{
				  	ShowHomeBanco(playerid);
				}
				// COMANDO: /Modo Pago
				else if (strcmp("/Modo pago", cmdtext, true, 10) == 0 && strlen(cmdtext) == 10)
			  	{
				  	if(PlayersData[playerid][TC])
				  	{
						if(PlayersData[playerid][ModoPago])
						{
                            PlayersData[playerid][ModoPago] = false;
                            SendInfoMessage(playerid, 2, "1658","Has cambiado al modo de pago en efectivo");
						}
						else
						{
						    PlayersData[playerid][ModoPago] = true;
						    SendInfoMessage(playerid, 2, "1658","Has cambiado al modo de pago con tarjeta de crédito");
						}
				  	}
				  	else
				  	{
				  	    SendInfoMessage(playerid, 0, "1658","Debes tener tarjeta de crédito para cambiar el modo de pago, ve al banco!");
				  	}
				}
				// COMANDO: /Autorizar [ID]
		  		else if (strfind(cmdtext, "/Autorizar ", true) == 0)
			    {
					if (PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] <= 1 ||
						 PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] <= 1)
				    {
				        new playeridAutorizar = strval(cmdtext[11]);
				        if (PlayersData[playerid][Faccion] == PlayersData[playeridAutorizar][Faccion])
				        {
							if (PlayersData[playeridAutorizar][Rango] > 3)
							{
							    if (IsPlayerNear(playerid, playeridAutorizar,
									 "1034",
									 "1035",
									 "1036",
									 "El jugador que le deseas autorizar no se encuentra conectado",
									 "El jugador que le deseas autorizar no se ha logueado",
									 "El jugador que le deseas autorizar no se encuentra cerca de tí"))
							    {
							        if (!PlayersDataOnline[playeridAutorizar][IsAutorizado])
							        {
										new MsgAutorizarMe[MAX_TEXT_CHAT];
										new MsgAutorizarYou[MAX_TEXT_CHAT];

										format(MsgAutorizarMe, sizeof(MsgAutorizarMe), "Le has asignado a %s ponerse un equipo en el armario de la estación.", PlayersDataOnline[playeridAutorizar][NameOnlineFix]);
										format(MsgAutorizarYou, sizeof(MsgAutorizarYou), "%s te ha asignado ponerte un equipo en el armario de la estación", PlayersDataOnline[playerid][NameOnlineFix]);
										SendInfoMessage(playerid, 3, "0", MsgAutorizarMe);
										SendInfoMessage(playeridAutorizar, 3, "0", MsgAutorizarYou);

							            PlayersDataOnline[playeridAutorizar][IsAutorizado] = true;
									}
									else
									{
										SendInfoMessage(playerid, 0, "1037", "Ya el jugador ese está autorizado!");
									}
							    }
						    }
						    else
						    {
			   					SendInfoMessage(playerid, 0, "1038", "Este jugador no necesita autorización, es ya un gran rango en la facción");
							}
					    }
					    else
					    {
		   					SendInfoMessage(playerid, 0, "1039", "El jugador que desea darle autorización no pertenece a su facción");
						}
				    }
				    else
				    {
						SendInfoMessage(playerid, 0, "1040", "Usted no puede autorizar!");
					}
			    }
				// COMANDO: /Robar
		  		else if (strfind(cmdtext, "/Robar", true) == 0)
			    {
					// COMANDO: /Robar Local
				  	if (strcmp("/Robar Local", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
				  	{
				  	    if (PlayersData[playerid][Rango] <= 1 ==
						  	 (PlayersData[playerid][Faccion] == COLTS ||
							  PlayersData[playerid][Faccion] == HAMPA ||
							  PlayersData[playerid][Faccion] == TheAngelsMC ||
							  PlayersData[playerid][Faccion] == HEORS))
				  	    {
				  	        new fac;
				  	        if (PlayersData[playerid][Faccion] == COLTS)
				  	        {
				  	            fac = COLTS_R;
							}
							else if (PlayersData[playerid][Faccion] == COLTS)
							{
							    fac = AK_R;
							}
							else if (PlayersData[playerid][Faccion] == HAMPA)
							{
							    fac = HAMPA_R;
							}
							else if (PlayersData[playerid][Faccion] == HEORS)
							{
							    fac = HEORS_R;
							}
				  	        if (RobosInfo[fac][TimeLast] <= gettime())
				  	        {
						        if (PlayersDataOnline[playerid][InPickup] >= NegociosData[1][PickupOutId] &&
						             PlayersDataOnline[playerid][InPickup] <= NegociosData[MAX_BIZZ][PickupOutId])
						        {
									if (!NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Lock])
									{
									    if (!RobosInfo[fac][BizzIDR])
									    {
										    RobosInfo[fac][City] = GetMyNearCity(playerid);
										    if (RobosInfo[fac][City])
										    {
										        RobosInfo[fac][City] = SAPD;
										    }
										    else
										    {
										        RobosInfo[fac][City] = SAPD;
											}

										    if (GetMaxPlayersByFaccion(RobosInfo[fac][City]) >= 4)
										    {
											    RobosInfo[fac][TimeLast] = gettime() + TIME_R_READY;
											    AddRobo(fac, PlayersDataOnline[playerid][MyPickupWorld]);
										    }
										    else
										    {
												SendInfoMessage(playerid, 0, "1492", "En estos momentos no puedes robar este negocio!");
											}
										}
										else
										{
											SendInfoMessage(playerid, 0, "1493", "Ya se encuentran en un robo, no puedes empezar otro!");
										}
									}
									else
									{
										SendInfoMessage(playerid, 0, "1494", "El negocio debe estar abierto para poder atracarlo!");
									}
						        }
						        else
						        {
									SendInfoMessage(playerid, 0, "1495", "Debes estar en la puerta de un negocio para robar!");
								}
				  	        }
							else
							{
								new MsgPersonalizado[MAX_TEXT_CHAT];
								format(MsgPersonalizado, sizeof(MsgPersonalizado), "Debe esperar %i minutos con %i segundos para volver a atacar un local", (RobosInfo[fac][TimeLast] - gettime()) / 60, ((RobosInfo[fac][TimeLast] - gettime()) % 60));
								SendInfoMessage(playerid, 0, "1496", MsgPersonalizado);
							}
					  	}
					  	else
					  	{
							SendInfoMessage(playerid, 0, "1497", "Usted no puede robar locales!");
					    }
				  	}
					// COMANDO: /Robar Gas
				  	else if (strcmp("/Robar Gas", cmdtext, true, 10) == 0 && strlen(cmdtext) == 10)
				  	{
						new MyNearCar = IsPlayerInNearVehicle(playerid);
						if (MyNearCar)
						{
						    if (!IsPlayerInAnyVehicle(playerid))
						    {
							    if (!DataCars[MyNearCar][Lock] ||
									 strlen(DataCars[MyNearCar][Dueno]) == 1 && MyNearCar <= MAX_CAR_DUENO)
								{
						  	        if (!PlayersData[playerid][Lata])
									{
								        if (DataCars[MyNearCar][Gas] > 20)
								        {
											if (!DataCars[MyNearCar][LlenandoGas])
											{
											    if (!DataCars[MyNearCar][StateEncendido])
											    {
												    if(IntentarAccion(playerid, "sacarle gas al vehículo", random(2)))
												    {
												        DataCars[MyNearCar][Gas] = DataCars[MyNearCar][Gas] - 20;
														PlayersData[playerid][Lata] = true;
														UpdateGasAndOil(MyNearCar);
													}
												}
												else
												{
													SendInfoMessage(playerid, 0, "1103", "El vehículo debe estar apagado para robarle gas");
												}
											}
											else
											{
												SendInfoMessage(playerid, 0, "1102", "Este vehículo está llenando el deposito, no puede robarle gas");
											}
										}
										else
										{
											SendInfoMessage(playerid, 0, "1101", "Este coche no tiene gas para robarle!");
										}
									}
									else
									{
										SendInfoMessage(playerid, 0, "1100", "Su lata ya se encuentra llena de gas");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1099", "Este vehículo se encuentra cerrado!");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "1098", "No puede robar gas desde adentro del vehículo");
							}
						}
				  	}
				  	else
				  	{
						SendInfoMessage(playerid, 0, "1498", "Quizás quiso decir: /Robar {Gas, Local}");
				    }
			  	}
				// COMANDO: /Dar
		  		else if (strfind(cmdtext, "/Dar", true) == 0)
			    {
			    	// COMANDO: /Dar Habilidad [ID] [ID_Habilidad]
			    	if (strfind(cmdtext, "/Dar Habilidad ", true) == 0)
				    {
						if (PlayersData[playerid][Faccion] == LICENCIEROS && PlayersData[playerid][Rango] == 0 ||
							 PlayersData[playerid][Faccion] == LICENCIEROS && PlayersData[playerid][Rango] == 1 ||
							 PlayersData[playerid][Faccion] == LICENCIEROS && PlayersData[playerid][Rango] == 3 ||
							 PlayersData[playerid][Faccion] == LICENCIEROS && PlayersData[playerid][Rango] == 5)
					    {
							new PlayeridSplit[5], HabilidadSplit[5];
							new fPos;
							fPos = strfind(cmdtext, " ", false, 16);
							strmid(PlayeridSplit, cmdtext, 15, fPos);
							strmid(HabilidadSplit, cmdtext, fPos, strlen(cmdtext));

						    if (IsPlayerNear(playerid, strval(PlayeridSplit),
								 "481",
								 "482",
								 "483",
								 "El jugador que le deseas dar una habilidad no se encuentra conectado",
								 "El jugador que le deseas dar una habilidad no se ha logueado",
								 "El jugador que le deseas dar una habilidad no se encuentra cerca de tí"))
						    {
								if (strval(HabilidadSplit) >= 1 && strval(HabilidadSplit) <= 6)
								{
									if (PlayersData[strval(PlayeridSplit)][Habilidad] != (strval(HabilidadSplit) - 1))
									{
										new MsgDarHabilidadMe[MAX_TEXT_CHAT];
										new MsgDarHabilidadInfo[MAX_TEXT_CHAT];
										new MsgDarHabilidadInfoToPlayer[MAX_TEXT_CHAT];
										format(MsgDarHabilidadMe, sizeof(MsgDarHabilidadMe), "le da una habilidad de %s a %s", HabilidadesName[strval(HabilidadSplit) - 1], PlayersDataOnline[strval(PlayeridSplit)][NameOnlineFix]);
										format(MsgDarHabilidadInfo, sizeof(MsgDarHabilidadInfo), "Has dado una habilidad de %s a %s", HabilidadesName[strval(HabilidadSplit) - 1], PlayersDataOnline[strval(PlayeridSplit)][NameOnlineFix]);
										format(MsgDarHabilidadInfoToPlayer, sizeof(MsgDarHabilidadInfoToPlayer), "Has recibido una habilidad de %s del profesor %s", HabilidadesName[strval(HabilidadSplit) - 1], PlayersDataOnline[playerid][NameOnlineFix]);

										Acciones_ROL(playerid, ACCION_ME, MsgDarHabilidadMe);
										SendInfoMessage(playerid, 3, "0", MsgDarHabilidadInfo);
										SendInfoMessage(strval(PlayeridSplit),3, "0", MsgDarHabilidadInfoToPlayer);

										PlayersData[strval(PlayeridSplit)][Habilidad] = strval(HabilidadSplit) - 1;
										SetPlayerFightingStyle(strval(PlayeridSplit), HabilidadesID[strval(HabilidadSplit) - 1]);
									}
									else
									{
										SendInfoMessage(playerid, 0, "484", "Este jugador ya tiene esa habilidad");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "485", "Las habilidades tiene que estar entre 1 y 6, consulte /Ayuda Habilidades");
								}
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "486", "Usted no es profesor");
						}
				    }
					// COMANDO: /Dar Licencia Armas [ID]
			  		else if (strfind(cmdtext, "/Dar Licencia Armas ", true) == 0)
				    {
						if (PlayersData[playerid][Faccion] == PODERJUDICIAL && PlayersData[playerid][Rango] <= 4)
				    	{
					        if (IsPlayerNear(playerid, strval(cmdtext[GetPosSpace(cmdtext,3)]),
					        "487",
					        "488",
					        "489",
					        "El jugador que le deseas dar una licencia de Armas no se encuentra conectado",
					        "El jugador que le deseas dar una licencia de Armas no se ha logueado",
					        "El jugador que le deseas dar una licencia de Armas no se encuentra cerca de tí"))
					        {
					        	SetLicenciaPlayer(playerid,strval(cmdtext[GetPosSpace(cmdtext,3)]),0);
					        }
						}
						else
						{
							SendInfoMessage(playerid, 0, "513", "No está autorizado para dar una licencia de armas!");
						}
		    		}
					// COMANDO: /Dar Licencia [Licencia] [ID]
			  		else if (strfind(cmdtext, "/Dar Licencia ", true) == 0)
				    {
						if (PlayersData[playerid][Faccion] == LICENCIEROS && PlayersData[playerid][Rango] != 3 && PlayersData[playerid][Rango] != 5 ||
							 PlayersData[playerid][Admin] == 9)
					    {
		   					// COMANDO: /Dar Licencia Coche [ID]
							if (strfind(cmdtext, "/Dar Licencia Coche ", true) == 0) //20
						    {
							    if (IsPlayerNear(playerid, strval(cmdtext[GetPosSpace(cmdtext,3)]),
									 "491",
									 "492",
									 "493",
									 "El jugador que le deseas dar una licencia de Coche no se encuentra conectado",
									 "El jugador que le deseas dar una licencia de Coche no se ha logueado",
									 "El jugador que le deseas dar una licencia de Coche no se encuentra cerca de tí"))
							    {
							         SetLicenciaPlayer(playerid,strval(cmdtext[GetPosSpace(cmdtext,3)]),1);
							    }
						    }

							// COMANDO: /Dar Licencia Camión [ID]
							else if (strfind(cmdtext, "/Dar Licencia Camión ", true) == 0 ||
									 strfind(cmdtext, "/Dar Licencia Camion ", true) == 0) //20
						    {
							    if (IsPlayerNear(playerid, strval(cmdtext[GetPosSpace(cmdtext,3)]),
									 "514",
									 "515",
									 "516",
									 "El jugador que le deseas dar una licencia de Camión no se encuentra conectado",
									 "El jugador que le deseas dar una licencia de Camión no se ha logueado",
									 "El jugador que le deseas dar una licencia de Camión no se encuentra cerca de tí"))
							    {
							         SetLicenciaPlayer(playerid,strval(cmdtext[GetPosSpace(cmdtext,3)]),2);
							    }
						    }
							// COMANDO: /Dar Licencia Moto [ID]
							else if (strfind(cmdtext, "/Dar Licencia Moto ", true) == 0) // 14
						    {
							    if (IsPlayerNear(playerid, strval(cmdtext[GetPosSpace(cmdtext,3)]),
									 "496",
									 "497",
									 "498",
									 "El jugador que le deseas dar una licencia de Moto no se encuentra conectado",
									 "El jugador que le deseas dar una licencia de Moto no se ha logueado",
									 "El jugador que le deseas dar una licencia de Moto no se encuentra cerca de tí"))
							    {
							        SetLicenciaPlayer(playerid,strval(cmdtext[GetPosSpace(cmdtext,3)]),3);
							    }
						    }
							// COMANDO: /Dar Licencia Vuelo [ID]
							else if (strfind(cmdtext, "/Dar Licencia Vuelo ", true) == 0) //20
						    {
							    if (IsPlayerNear(playerid, strval(cmdtext[GetPosSpace(cmdtext,3)]),
									 "500",
									 "501",
									 "502",
									 "El jugador que le deseas dar una licencia de Vuelo no se encuentra conectado",
									 "El jugador que le deseas dar una licencia de Vuelo no se ha logueado",
									 "El jugador que le deseas dar una licencia de Vuelo no se encuentra cerca de tí"))
							    {
							        SetLicenciaPlayer(playerid,strval(cmdtext[GetPosSpace(cmdtext,3)]),4);
							    }
						    }
						    // COMANDO: /Dar Licencia Bote [ID]
							else if (strfind(cmdtext, "/Dar Licencia Bote ", true) == 0) // 14
						    {
							    if (IsPlayerNear(playerid, strval(cmdtext[GetPosSpace(cmdtext,3)]),
									 "504",
									 "505",
									 "506",
									 "El jugador que le deseas dar una licencia de Bote no se encuentra conectado",
									 "El jugador que le deseas dar una licencia de Bote no se ha logueado",
									 "El jugador que le deseas dar una licencia de Bote no se encuentra cerca de tí"))
							    {
							        SetLicenciaPlayer(playerid,strval(cmdtext[GetPosSpace(cmdtext,3)]),5);
							    }
						    }
						    // COMANDO: /Dar Licencia Tren [ID]
							else if (strfind(cmdtext, "/Dar Licencia Tren ", true) == 0) //20
						    {
							    if (IsPlayerNear(playerid, strval(cmdtext[GetPosSpace(cmdtext,3)]),
									 "1046",
									 "1045",
									 "1044",
									 "El jugador que le deseas dar una licencia de Tren no se encuentra conectado",
									 "El jugador que le deseas dar una licencia de Tren no se ha logueado",
									 "El jugador que le deseas dar una licencia de Tren no se encuentra cerca de tí"))
							    {
							        SetLicenciaPlayer(playerid,strval(cmdtext[GetPosSpace(cmdtext,3)]),6);
							    }
						    }
							// COMANDO: /Dar Licencia Pesca [ID]
							else if (strfind(cmdtext, "/Dar Licencia Pesca ", true) == 0) //20
						    {
							    if (IsPlayerNear(playerid, strval(cmdtext[GetPosSpace(cmdtext,3)]),
									 "508",
									 "509",
									 "510",
									 "El jugador que le deseas dar una licencia de Pesca no se encuentra conectado",
									 "El jugador que le deseas dar una licencia de Pesca no se ha logueado",
									 "El jugador que le deseas dar una licencia de Pesca no se encuentra cerca de tí"))
							    {
							        SetLicenciaPlayer(playerid,strval(cmdtext[GetPosSpace(cmdtext,3)]),7);
							    }
						    }
					        else
					        {
								SendInfoMessage(playerid, 0, "512", "Quizás quiso decir: /Dar Licencia {Armas [ID], Coche [ID], Camión [ID], Moto [ID], Vuelo [ID], Bote [ID], Pesca [ID], Tren [ID]}");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "513", "Usted no es licenciero");
						}
				    }
                    // COMANDO: /Dar Llaves [Amigo - Coche - Amigo Veh] [ID]
                    else if (strfind(cmdtext, "/Dar Llaves ", true) == 0)
                    {
                        if(strfind(cmdtext, "/Dar Llaves Coche ", true) == 0)
                        {
                            new MyNearCar = IsPlayerInNearVehicle(playerid);
							if (MyNearCar)
							{
								if (IsVehicleMyVehicle(playerid, MyNearCar) )
								{
								    if (IsPlayerNear(playerid, strval(cmdtext[18]),
										 "340",
										 "341",
										 "342",
										 "El jugador que le deseas dar las llaves de su vehículo no se encuentra conectado",
										 "El jugador que le deseas dar las llaves de su vehículo no se ha logueado",
										 "El jugador que le deseas dar las llaves de su vehículo no se encuentra cerca de tí"))
								    {

								        //- Validamos las cantidades según su nivel de VIP
	                                    new Total_De_Vehiculos = GetPlayerVehiclesCount(strval(cmdtext[18]));
										if(PlayersData[strval(cmdtext[18])][VIP] == 0 && Total_De_Vehiculos >= MAX_AUTOS_USER) return SendInfoMessage(playerid, 0, "0", "¡Ese jugador no puede tener más vehículos!");
										if(PlayersData[strval(cmdtext[18])][VIP] == 1 && Total_De_Vehiculos >= MAX_AUTOS_VIP1) return SendInfoMessage(playerid, 0, "0", "¡Ese jugador no puede tener más vehículos!");
										if(PlayersData[strval(cmdtext[18])][VIP] == 2 && Total_De_Vehiculos >= MAX_AUTOS_VIP2) return SendInfoMessage(playerid, 0, "0", "¡Ese jugador no puede tener más vehículos!");

								        //- Le enviamos la oferta
								        PlayersDataOnline[playerid][DarLlaves] = strval(cmdtext[18]);
								        PlayersDataOnline[playerid][DarLlavesID] = MyNearCar;

										//- Informativo
										new MsgDialogDarLlaves[MAX_TEXT_CHAT];
										format(MsgDialogDarLlaves , sizeof(MsgDialogDarLlaves), "{F0F0F0}¿Seguro que quiere darle las llaves de su vehículo a %s?\n{F50000}IMPORTANTE: Perderá totalmente el control de su vehículo!", PlayersDataOnline[strval(cmdtext[18])][NameOnlineFix]);
										ShowPlayerDialogEx(playerid, 7, DIALOG_STYLE_MSGBOX, "{00A5FF}Pasar llaves de jugador a jugador", MsgDialogDarLlaves, "Si", "No");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "338", "Este no es su vehículo");
								}
							}
                        }
                        else if (strfind(cmdtext, "/Dar Llaves Amigo ", true) == 0)
					    {
					        if (PlayersDataOnline[playerid][InPickup] >= HouseData[1][PickupId] &&
						         PlayersDataOnline[playerid][InPickup] <= HouseData[MAX_HOUSE][PickupId])
					        {
								new HouseId = PlayersDataOnline[playerid][MyPickupWorld];
								if (IsMyHouse(playerid, HouseId))
					            {
								    if (IsPlayerNear(playerid, strval(cmdtext[18]),
										 "1211",
										 "1212",
										 "1213",
										 "El jugador que le deseas dar las llaves de la casa no se encuentra conectado",
										 "El jugador que le deseas dar las llaves de la casa no se ha logueado",
										 "El jugador que le deseas dar las llaves de la casa no se encuentra cerca de tí"))
								    {
										if (IsPlayerInHouseFriend(strval(cmdtext[18]), HouseId) == -1)
										{
											AddPlayerHouseFriend(strval(cmdtext[18]), HouseId);
											SaveHouse(HouseId, false);

											new MsgLlavesCasaToMe[MAX_TEXT_CHAT];
											new MsgLlavesCasaToYou[MAX_TEXT_CHAT];
											new MsgLlavesCasaMe[MAX_TEXT_CHAT];
											format(MsgLlavesCasaMe, sizeof(MsgLlavesCasaMe), "le da una copia de las llaves de su casa a %s", PlayersDataOnline[strval(cmdtext[18])][NameOnlineFix]);
											format(MsgLlavesCasaToMe, sizeof(MsgLlavesCasaToMe), "Le diste una copia de las llaves de tu casa a %s", PlayersDataOnline[strval(cmdtext[18])][NameOnlineFix]);
											format(MsgLlavesCasaToYou, sizeof(MsgLlavesCasaToYou), "%s te dió una copia de las llaves de su casa", PlayersDataOnline[playerid][NameOnlineFix]);

											Acciones_ROL(playerid, ACCION_ME, MsgLlavesCasaMe);
											SendInfoMessage(playerid, 3, "0", MsgLlavesCasaToMe);
											SendInfoMessage(strval(cmdtext[18]), 3, "0", MsgLlavesCasaToYou);
										}
										else
										{
											SendInfoMessage(playerid, 0, "1214", "Ya este jugador tiene las llaves de tu casa");
										}
								    }
								}
								else
								{
									SendInfoMessage(playerid, 0, "1209", "Esta no es su casa");
								}
					        }
					        else
					        {
								SendInfoMessage(playerid, 0, "1210", "No te encuentras en ninguna casa");
							}
						}
						else if (strfind(cmdtext, "/Dar Llaves AmigoVeh ", true) == 0)
					    {
	                        new MyNearCar = IsPlayerInNearVehicle(playerid);
	                        if (MyNearCar)
							{
							    if(IsVehicleMyVehicle(playerid, MyNearCar))
								{
	                                if (IsPlayerNear(playerid, strval(cmdtext[21]),
										 "340",
										 "341",
										 "342",
										 "El jugador que le deseas dar las llaves de su vehículo no se encuentra conectado",
										 "El jugador que le deseas dar las llaves de su vehículo no se ha logueado",
										 "El jugador que le deseas dar las llaves de su vehículo no se encuentra cerca de tí"))
								    {
								        //- Verificamos si el jugador puede dar las llaves
								        if(!PlayersData[playerid][VIP]) return SendInfoMessage(playerid, 0, "0", "¡Este comando es solo para VIPs!");

	        	 						//- Le damos la llave
										if (IsPlayerInCarFriend(strval(cmdtext[21]), MyNearCar) == -1)
										{
										    AddPlayerCarFriend(strval(cmdtext[21]), MyNearCar);
										    SaveDataVehicle(MyNearCar, DIR_VEHICLES);

										    //- Informativo
											new String[MAX_TEXT_CHAT];
											format(String, sizeof(String), "le da una copia de las llaves de su %s a %s", coches_Todos_Nombres[GetVehicleModel(MyNearCar) - 400], PlayersDataOnline[strval(cmdtext[21])][NameOnlineFix]);
											Acciones_ROL(playerid, ACCION_ME, String);

	                                        format(String, sizeof(String), "Le diste una copia de las llaves de tu %s a %s", coches_Todos_Nombres[GetVehicleModel(MyNearCar) - 400], PlayersDataOnline[strval(cmdtext[21])][NameOnlineFix]);
	                                        SendInfoMessage(playerid, 3, "0", String);

	                                        format(String, sizeof(String), "%s te dió una copia de las llaves de su %s.", PlayersDataOnline[playerid][NameOnlineFix], coches_Todos_Nombres[GetVehicleModel(MyNearCar) - 400]);
	                                        SendInfoMessage(strval(cmdtext[21]), 3, "0", String);
										}
										else
										{
											SendInfoMessage(playerid, 0, "0", "Ese jugador ya tiene las llaves de tu vehículo.");
										}
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "0", "Este no es tu vehículo");
								}
							}
						}
                    }
					// COMANDO: /Dar Idioma [Idioma] [ID]
			  		else if (strfind(cmdtext, "/Dar Idioma ", true) == 0)
				    {
						if (PlayersData[playerid][Faccion] == LICENCIEROS && PlayersData[playerid][Rango] == 0 ||
							 PlayersData[playerid][Faccion] == LICENCIEROS && PlayersData[playerid][Rango] == 1 ||
							 PlayersData[playerid][Faccion] == LICENCIEROS && PlayersData[playerid][Rango] == 3 ||
							 PlayersData[playerid][Faccion] == LICENCIEROS && PlayersData[playerid][Rango] == 5)
					    {
		   					// COMANDO: /Dar Idioma Alemán [ID]
					  		if (strfind(cmdtext, "/Dar Idioma Alemán ", true) == 0 || // 12
							  	strfind(cmdtext, "/Dar Idioma Aleman ", true) == 0)
						    {
							    if (IsPlayerNear(playerid, strval(cmdtext[19]),
									 "479",
									 "478",
									 "477",
									 "El jugador que le deseas dar un título de alemán no se encuentra conectado",
									 "El jugador que le deseas dar un título de alemán no se ha logueado",
									 "El jugador que le deseas dar un título de alemán no se encuentra cerca de tí"))
							    {
							        if (!PlayersData[strval(cmdtext[19])][Idiomas][0])
							        {
										new MsgDarIdiomaMe[MAX_TEXT_CHAT];
										new MsgDarIdiomaInfo[MAX_TEXT_CHAT];
										new MsgDarIdiomaInfoToPlayer[MAX_TEXT_CHAT];
										format(MsgDarIdiomaMe, sizeof(MsgDarIdiomaMe), "le da un título alemán a %s", PlayersDataOnline[strval(cmdtext[19])][NameOnlineFix]);
										format(MsgDarIdiomaInfo, sizeof(MsgDarIdiomaInfo), "Has dado un título de alemán a %s", PlayersDataOnline[strval(cmdtext[19])][NameOnlineFix]);
										format(MsgDarIdiomaInfoToPlayer, sizeof(MsgDarIdiomaInfoToPlayer), "Has recibido un título de alemán de %s", PlayersDataOnline[playerid][NameOnlineFix]);

										Acciones_ROL(playerid, ACCION_ME, MsgDarIdiomaMe);
										SendInfoMessage(playerid, 3, "0", MsgDarIdiomaInfo);
										SendInfoMessage(strval(cmdtext[19]), 3, "0", MsgDarIdiomaInfoToPlayer);

										PlayersData[strval(cmdtext[19])][Idiomas][0] = true;
									}
									else
									{
										SendInfoMessage(playerid, 0, "480", "Ya ese jugador tiene un título de alemán");
									}
							    }
						    }
							// COMANDO: /Dar Idioma Francés [ID]
							else if (strfind(cmdtext, "/Dar Idioma Francés ", true) == 0 || // 12
							  		 strfind(cmdtext, "/Dar Idioma Frances ", true) == 0)
						    {
							    if (IsPlayerNear(playerid, strval(cmdtext[20]),
									 "476",
									 "475",
									 "474",
									 "El jugador que le deseas dar un título de Francés no se encuentra conectado",
									 "El jugador que le deseas dar un título de Francés no se ha logueado",
									 "El jugador que le deseas dar un título de Francés no se encuentra cerca de tí"))
							    {
							        if (!PlayersData[strval(cmdtext[20])][Idiomas][1])
							        {
										new MsgDarIdiomaMe[MAX_TEXT_CHAT];
										new MsgDarIdiomaInfo[MAX_TEXT_CHAT];
										new MsgDarIdiomaInfoToPlayer[MAX_TEXT_CHAT];
										format(MsgDarIdiomaMe, sizeof(MsgDarIdiomaMe), "le da un título Francés a %s", PlayersDataOnline[strval(cmdtext[20])][NameOnlineFix]);
										format(MsgDarIdiomaInfo, sizeof(MsgDarIdiomaInfo), "Has dado un título de Francés a %s", PlayersDataOnline[strval(cmdtext[20])][NameOnlineFix]);
										format(MsgDarIdiomaInfoToPlayer, sizeof(MsgDarIdiomaInfoToPlayer), "Has recibido un título de Francés de %s", PlayersDataOnline[playerid][NameOnlineFix]);

										Acciones_ROL(playerid, ACCION_ME, MsgDarIdiomaMe);
										SendInfoMessage(playerid, 3, "0", MsgDarIdiomaInfo);
										SendInfoMessage(strval(cmdtext[20]), 3, "0", MsgDarIdiomaInfoToPlayer);

										PlayersData[strval(cmdtext[20])][Idiomas][1] = true;
									}
									else
									{
										SendInfoMessage(playerid, 0, "472", "Ya ese jugador tiene un título de francés");
									}
							    }
						    }
							// COMANDO: /Dar Idioma Portugués [ID]
							else if (strfind(cmdtext, "/Dar Idioma Portugués ", true) == 0 || // 12
							  		 strfind(cmdtext, "/Dar Idioma Portugues ", true) == 0)
						    {
							    if (IsPlayerNear(playerid, strval(cmdtext[22]),
									 "471",
									 "470",
									 "469",
									 "El jugador que le deseas dar un título de Portugués no se encuentra conectado",
									 "El jugador que le deseas dar un título de Portugués no se ha logueado",
									 "El jugador que le deseas dar un título de Portugués no se encuentra cerca de tí"))
							    {
							        if (!PlayersData[strval(cmdtext[22])][Idiomas][2])
							        {
										new MsgDarIdiomaMe[MAX_TEXT_CHAT];
										new MsgDarIdiomaInfo[MAX_TEXT_CHAT];
										new MsgDarIdiomaInfoToPlayer[MAX_TEXT_CHAT];
										format(MsgDarIdiomaMe, sizeof(MsgDarIdiomaMe), "le da un título Portugués a %s", PlayersDataOnline[strval(cmdtext[22])][NameOnlineFix]);
										format(MsgDarIdiomaInfo, sizeof(MsgDarIdiomaInfo), "Has dado un título de Portugués a %s", PlayersDataOnline[strval(cmdtext[22])][NameOnlineFix]);
										format(MsgDarIdiomaInfoToPlayer, sizeof(MsgDarIdiomaInfoToPlayer), "Has recibido un título de Portugués de %s", PlayersDataOnline[playerid][NameOnlineFix]);

										Acciones_ROL(playerid, ACCION_ME, MsgDarIdiomaMe);
										SendInfoMessage(playerid, 3, "0", MsgDarIdiomaInfo);
										SendInfoMessage(strval(cmdtext[22]), 3, "0", MsgDarIdiomaInfoToPlayer);

										PlayersData[strval(cmdtext[22])][Idiomas][2] = true;
									}
									else
									{
										SendInfoMessage(playerid, 0, "473", "Ya ese jugador tiene un título de Portugués");
									}
							    }
						    }
							// COMANDO: /Dar Idioma Italiano [ID]
							else if (strfind(cmdtext, "/Dar Idioma Italiano ", true) == 0)
						    {
							    if (IsPlayerNear(playerid, strval(cmdtext[21]),
									 "468",
									 "462",
									 "467",
									 "El jugador que le deseas dar un título de Italiano no se encuentra conectado",
									 "El jugador que le deseas dar un título de Italiano no se ha logueado",
									 "El jugador que le deseas dar un título de Italiano no se encuentra cerca de tí"))
							    {
							        if (!PlayersData[strval(cmdtext[21])][Idiomas][3])
							        {
										new MsgDarIdiomaMe[MAX_TEXT_CHAT];
										new MsgDarIdiomaInfo[MAX_TEXT_CHAT];
										new MsgDarIdiomaInfoToPlayer[MAX_TEXT_CHAT];
										format(MsgDarIdiomaMe, sizeof(MsgDarIdiomaMe), "le da un título Italiano a %s", PlayersDataOnline[strval(cmdtext[21])][NameOnlineFix]);
										format(MsgDarIdiomaInfo, sizeof(MsgDarIdiomaInfo), "Has dado un título de Italiano a %s", PlayersDataOnline[strval(cmdtext[21])][NameOnlineFix]);
										format(MsgDarIdiomaInfoToPlayer, sizeof(MsgDarIdiomaInfoToPlayer), "Has recibido un título de Italiano de %s", PlayersDataOnline[playerid][NameOnlineFix]);

										Acciones_ROL(playerid, ACCION_ME, MsgDarIdiomaMe);
										SendInfoMessage(playerid, 3, "0", MsgDarIdiomaInfo);
										SendInfoMessage(strval(cmdtext[21]), 3, "0", MsgDarIdiomaInfoToPlayer);

										PlayersData[strval(cmdtext[21])][Idiomas][3] = true;
									}
									else
									{
										SendInfoMessage(playerid, 0, "461", "Ya ese jugador tiene un título de Italiano");
									}
							    }
						    }
							// COMANDO: /Dar Idioma Inglés [ID]
							else if (strfind(cmdtext, "/Dar Idioma Inglés ", true) == 0 || // 12
							  		 strfind(cmdtext, "/Dar Idioma Ingles ", true) == 0)
						    {
							    if (IsPlayerNear(playerid, strval(cmdtext[19]),
									 "460",
									 "459",
									 "458",
									 "El jugador que le deseas dar un título de Inglés no se encuentra conectado",
									 "El jugador que le deseas dar un título de Inglés no se ha logueado",
									 "El jugador que le deseas dar un título de Inglés no se encuentra cerca de tí"))
							    {
							        if (!PlayersData[strval(cmdtext[19])][Idiomas][4])
							        {
										new MsgDarIdiomaMe[MAX_TEXT_CHAT];
										new MsgDarIdiomaInfo[MAX_TEXT_CHAT];
										new MsgDarIdiomaInfoToPlayer[MAX_TEXT_CHAT];
										format(MsgDarIdiomaMe, sizeof(MsgDarIdiomaMe), "le da un título Inglés a %s", PlayersDataOnline[strval(cmdtext[19])][NameOnlineFix]);
										format(MsgDarIdiomaInfo, sizeof(MsgDarIdiomaInfo), "Has dado un título de Inglés a %s", PlayersDataOnline[strval(cmdtext[19])][NameOnlineFix]);
										format(MsgDarIdiomaInfoToPlayer, sizeof(MsgDarIdiomaInfoToPlayer), "Has recibido un título de Inglés de %s", PlayersDataOnline[playerid][NameOnlineFix]);

										Acciones_ROL(playerid, ACCION_ME, MsgDarIdiomaMe);
										SendInfoMessage(playerid, 3, "0", MsgDarIdiomaInfo);
										SendInfoMessage(strval(cmdtext[19]), 3, "0", MsgDarIdiomaInfoToPlayer);

										PlayersData[strval(cmdtext[19])][Idiomas][4] = true;
									}
									else
									{
										SendInfoMessage(playerid, 0, "457", "Ya ese jugador tiene un título de Inglés");
									}
							    }
						    }
							// COMANDO: /Dar Idioma Japonés [ID]
							else if (strfind(cmdtext, "/Dar Idioma Japonés ", true) == 0 || // 12
							  		 strfind(cmdtext, "/Dar Idioma Japones ", true) == 0)
						    {
							    if (IsPlayerNear(playerid, strval(cmdtext[20]),
									 "456",
									 "455",
									 "454",
									 "El jugador que le deseas dar un título de Japonés no se encuentra conectado",
									 "El jugador que le deseas dar un título de Japonés no se ha logueado",
									 "El jugador que le deseas dar un título de Japonés no se encuentra cerca de tí"))
							    {
							        if (!PlayersData[strval(cmdtext[20])][Idiomas][5])
							        {
										new MsgDarIdiomaMe[MAX_TEXT_CHAT];
										new MsgDarIdiomaInfo[MAX_TEXT_CHAT];
										new MsgDarIdiomaInfoToPlayer[MAX_TEXT_CHAT];
										format(MsgDarIdiomaMe, sizeof(MsgDarIdiomaMe), "le da un título Japonés a %s", PlayersDataOnline[strval(cmdtext[20])][NameOnlineFix]);
										format(MsgDarIdiomaInfo, sizeof(MsgDarIdiomaInfo), "Has dado un título de Japonés a %s", PlayersDataOnline[strval(cmdtext[20])][NameOnlineFix]);
										format(MsgDarIdiomaInfoToPlayer, sizeof(MsgDarIdiomaInfoToPlayer), "Has recibido un título de Japonés de %s", PlayersDataOnline[playerid][NameOnlineFix]);

										Acciones_ROL(playerid, ACCION_ME, MsgDarIdiomaMe);
										SendInfoMessage(playerid, 3, "0", MsgDarIdiomaInfo);
										SendInfoMessage(strval(cmdtext[20]), 3, "0", MsgDarIdiomaInfoToPlayer);

										PlayersData[strval(cmdtext[20])][Idiomas][5] = true;
									}
									else
									{
										SendInfoMessage(playerid, 0, "453", "Ya ese jugador tiene un título de Japonés");
									}
							    }
						    }
					        else
					        {
								SendInfoMessage(playerid, 0, "451", "Quizás quiso decir: /Dar Idioma {Alemán [ID], Francés [ID], Portugués [ID], Italiano [ID], Inglés [ID], Japonés [ID]}");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "452", "Usted no es profesor");
						}
				    }
					// COMANDO: /Dar Dados [ID]
			  		else if (strfind(cmdtext, "/Dar Dados ", true) == 0)
				    {
					    if (IsObjectInBolsillo(playerid, 2))
					    {
						    if (IsPlayerNear(playerid, strval(cmdtext[11]),
								 "1075",
								 "1076",
								 "1077",
								 "El jugador que le deseas dar los dados no se encuentra conectado",
								 "El jugador que le deseas dar los dados no se ha logueado",
								 "El jugador que le deseas dar los dados no se encuentra cerca de tí"))
						    {
						        if (!IsObjectInBolsillo(strval(cmdtext[11]), 2))
						        {
						            if (IsNotFullBolsillo(playerid, strval(cmdtext[11]), "El jugador que le desea dar sus dados, tiene los bolsillos llenos"))
						            {
										RemoveObjectBolsillo(playerid, 2);
										AddObjectBolsillo(strval(cmdtext[11]), 2);
										new MsgMeDarDados[MAX_TEXT_CHAT];
										format(MsgMeDarDados, sizeof(MsgMeDarDados), "le ha dado unos dados a %s", PlayersDataOnline[strval(cmdtext[11])][NameOnlineFix]);
							        	Acciones_ROL(playerid, ACCION_ME, MsgMeDarDados);
						        	}
								}
						        else
						        {
									SendInfoMessage(playerid, 0, "380", "El jugador que desea darle los dados ya tiene unos");
								}
					        }
						}
						else
						{
							SendInfoMessage(playerid, 0, "379", "Tú no tienes dados");
						}
				    }
					// COMANDO: /Dar Agenda [ID]
			  		else if (strfind(cmdtext, "/Dar Agenda ", true) == 0)
				    {
					    if (IsObjectInBolsillo(playerid, 4))
					    {
						    if (IsPlayerNear(playerid, strval(cmdtext[12]),
								 "1070",
								 "1071",
								 "1072",
								 "El jugador que le desea dar su agenda no se encuentra conectado",
								 "El jugador que le desea dar su agenda no se ha logueado",
								 "El jugador que le desea dar su agenda no se encuentra cerca de tí"))
						    {
						        if (!IsObjectInBolsillo(strval(cmdtext[12]), 4))
						        {
						            if (IsNotFullBolsillo(playerid, strval(cmdtext[12]), "El jugador que le desea dar su agenda, tiene los bolsillos llenos"))
						            {
										RemoveObjectBolsillo(playerid, 4);
										AddObjectBolsillo(strval(cmdtext[12]), 4);

										for (new i = 0; i < MAX_PLAYER_CONTACT; i++)
										{
											format(AgendaData[strval(cmdtext[12])][i][NameC], MAX_AGENDA_NAME, "%s", AgendaData[playerid][i][NameC]);
											AgendaData[strval(cmdtext[12])][i][NumberC] = AgendaData[playerid][i][NumberC];
											AgendaData[strval(cmdtext[12])][i][IsBlackList] = AgendaData[playerid][i][IsBlackList];
										}

										new MsgMeDarDados[MAX_TEXT_CHAT];
										format(MsgMeDarDados, sizeof(MsgMeDarDados), "le ha dado una agenda a %s", PlayersDataOnline[strval(cmdtext[12])][NameOnlineFix]);
							        	Acciones_ROL(playerid, ACCION_ME, MsgMeDarDados);
						        	}
								}
						        else
						        {
									SendInfoMessage(playerid, 0, "1069", "El jugador que desea darle su agenda ya tiene una");
								}
					        }
						}
						else
						{
							SendInfoMessage(playerid, 0, "1073", "Tú no tienes agenda!");
						}
				    }
					// COMANDO: /Dar Bolsa [ID]
			  		else if (strfind(cmdtext, "/Dar Bolsa ", true) == 0)
				    {
				        new PlayerToGiveBolsa = strval(cmdtext[11]);
					    if (PlayersData[playerid][HaveBolsa])
					    {
						    if (IsPlayerNear(playerid,PlayerToGiveBolsa,
								 "1232",
								 "1233",
								 "1234",
								 "El jugador que le desea dar su bolsa no se encuentra conectado",
								 "El jugador que le desea dar su bolsa no se ha logueado",
								 "El jugador que le desea dar su bolsa no se encuentra cerca de tí"))
						    {
						        if (!PlayersData[PlayerToGiveBolsa][HaveBolsa])
						        {
									PlayersData[playerid][HaveBolsa] = false;
									PlayersData[PlayerToGiveBolsa][HaveBolsa] = true;

									for(new i = 0; i<4; i++)
									{
										PlayersData[PlayerToGiveBolsa][Bolsa][i] = PlayersData[playerid][Bolsa][i];
										PlayersData[PlayerToGiveBolsa][BolsaC][i] = PlayersData[playerid][BolsaC][i];
									}
                                    CleanArticulosBolsa(playerid);

									new MsgMeDarBolsa[MAX_TEXT_CHAT];
									format(MsgMeDarBolsa, sizeof(MsgMeDarBolsa), "le ha dado una bolsa a %s", PlayersDataOnline[PlayerToGiveBolsa][NameOnlineFix]);
						        	Acciones_ROL(playerid, ACCION_ME, MsgMeDarBolsa);
								}
						        else
						        {
									SendInfoMessage(playerid, 0, "1231", "El jugador que desea darle su bolsa ya tiene una");
								}
					        }
						}
						else
						{
							SendInfoMessage(playerid, 0, "1235", "Tú no tienes una bolsa");
						}
				    }
				    // COMANDO: /Dar BBX [ID]
			  		else if (strfind(cmdtext, "/Dar BBX ", true) == 0)
				    {
				        new PlayerToGiveBBX = strval(cmdtext[9]);
					    if (PlayersData[playerid][HaveBBX])
					    {
						    if (IsPlayerNear(playerid,PlayerToGiveBBX,
								 "1232",
								 "1233",
								 "1234",
								 "El jugador que le desea dar su estéreo portátil no se encuentra conectado",
								 "El jugador que le desea dar su estéreo portátil no se ha logueado",
								 "El jugador que le desea dar su estéreo portátil no se encuentra cerca de tí"))
						    {
						        if (!PlayersData[PlayerToGiveBBX][HaveBBX])
						        {
									PlayersData[playerid][HaveBBX] = false;
									PlayersData[PlayerToGiveBBX][HaveBBX] = true;

									new MsgMeDarBBX[MAX_TEXT_CHAT];
									format(MsgMeDarBBX, sizeof(MsgMeDarBBX), "le ha dado un estéreo portátil a %s", PlayersDataOnline[PlayerToGiveBBX][NameOnlineFix]);
						        	Acciones_ROL(playerid, ACCION_ME, MsgMeDarBBX);
								}
						        else
						        {
									SendInfoMessage(playerid, 0, "1231", "El jugador al que desea darle su estéreo portátil ya tiene uno");
								}
					        }
						}
						else
						{
							SendInfoMessage(playerid, 0, "1235", "Tú no tienes un estéreo portátil");
						}
				    }
					// COMANDO: /Dar Patines [ID]
			  		else if (strfind(cmdtext, "/Dar Patines ", true) == 0)
				    {
					    if (IsObjectInBolsillo(playerid, 1))
					    {
						    if (IsPlayerNear(playerid, strval(cmdtext[13]),
								 "1078",
								 "1079",
								 "1080",
								 "El jugador que le deseas dar los patines no se encuentra conectado",
								 "El jugador que le deseas dar los patines no se ha logueado",
								 "El jugador que le deseas dar los patines no se encuentra cerca de tí"))
						    {
						        if (!IsObjectInBolsillo(strval(cmdtext[13]), 1))
						        {
						            if (IsNotFullBolsillo(playerid, strval(cmdtext[13]), "El jugador que le desea dar sus patines, tiene los bolsillos llenos"))
						            {
										RemoveObjectBolsillo(playerid, 1);
										AddObjectBolsillo(strval(cmdtext[13]), 1);
										new MsgMeDarPatines[MAX_TEXT_CHAT];
										format(MsgMeDarPatines, sizeof(MsgMeDarPatines), "le ha dado unos patines a %s", PlayersDataOnline[strval(cmdtext[13])][NameOnlineFix]);
							        	Acciones_ROL(playerid, ACCION_ME, MsgMeDarPatines);
						        	}
								}
						        else
						        {
									SendInfoMessage(playerid, 0, "378", "El jugador que desea darle los patines ya tiene unos");
								}
					        }
						}
						else
						{
							SendInfoMessage(playerid, 0, "377", "Tú no tienes patines");
						}
				    }
					// COMANDO: /Dar Cartera [ID] [ID_Cartera]
			  		else if (strfind(cmdtext, "/Dar Cartera ", true) == 0)
				    {
				        new PlayerGiveO = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
				        new CarteraID   = strval(cmdtext[GetPosSpace(cmdtext, 3)]);
					    if (IsPlayerNear(playerid, PlayerGiveO,
							 "1325",
							 "1324",
							 "1326",
							 "El jugador que le deseas dar algo de su cartera no se encuentra conectado",
							 "El jugador que le deseas dar algo de su cartera no se ha logueado",
							 "El jugador que le deseas dar algo de su cartera no se encuentra cerca de tí"))
					    {
					        if (CarteraID >= 1 && CarteraID <= MAX_COUNT_CARTERA)
					        {
						        if (IsNotFullCartera(playerid, PlayerGiveO, "El jugador que desea darle algo de su cartera tiene su cartera llena!"))
						        {
						            CarteraID--;
						            if (PlayersData[playerid][Cartera][CarteraID] != CARTERA_TYPE_NADA)
						            {
						                AddObjectToCartera(PlayerGiveO, PlayersData[playerid][Cartera][CarteraID], PlayersData[playerid][CarteraC][CarteraID], PlayersData[playerid][CarteraT][CarteraID], PlayersData[playerid][CarteraI][CarteraID]);
										new ObjectRemove = RemoveObjectToCartera(playerid, CarteraID);

  										new MsgMeCartera[MAX_TEXT_CHAT];

										format(MsgMeCartera, sizeof(MsgMeCartera), "le ha dado un %s a %s", CarteraNames[ObjectRemove], PlayersDataOnline[PlayerGiveO][NameOnlineFix]);
								        Acciones_ROL(playerid, ACCION_ME, MsgMeCartera);

										new MsgDarCarteraME[MAX_TEXT_CHAT];
										new MsgDarCarteraYOU[MAX_TEXT_CHAT];
									    format(MsgDarCarteraME, sizeof(MsgDarCarteraME), "%s te dió un %s", PlayersDataOnline[playerid][NameOnlineFix], CarteraNames[ObjectRemove]);
									    format(MsgDarCarteraYOU, sizeof(MsgDarCarteraYOU), "Le díste un %s", CarteraNames[ObjectRemove], PlayersDataOnline[PlayerGiveO][NameOnlineFix]);
										SendInfoMessage(playerid, 2, "0", MsgDarCarteraYOU);
										SendInfoMessage(PlayerGiveO, 2, "0", MsgDarCarteraME);
						            }
						            else
						            {
										SendInfoMessage(playerid, 0, "1322", "No tienes nada en esa parte de la cartera!");
									}
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "1323", "El número de cartera debe estar comprendido entre 1 y 6");
							}
					    }
				    }
					// COMANDO: /Dar Móvil [ID]
			  		else if (strfind(cmdtext, "/Dar Móvil ", true) == 0 || strfind(cmdtext, "/Dar Movil ", true) == 0)
				    {
					    if (PlayersData[playerid][Phone] != 0)
					    {
						    if ( PlayersDataOnline[playerid][InCall] == -1)
						    {
							    if (IsPlayerNear(playerid, strval(cmdtext[11]),
									 "1081",
									 "1082",
									 "1083",
									 "El jugador que le deseas dar su móvil no se encuentra conectado",
									 "El jugador que le deseas dar su móvil no se ha logueado",
									 "El jugador que le deseas dar su móvil no se encuentra cerca de tí"))
							    {
							        if (PlayersData[strval(cmdtext[11])][Phone] == 0)
							        {
			      						new numberstr[50];
								        format(numberstr, sizeof(numberstr), "%s%i.ulp", DIR_MOVILES, PlayersData[playerid][Phone]);
										// Asignar el nuevo dueño
									    new File:fEscribir1 = fopen(numberstr, io_write);
										fwrite(fEscribir1, PlayersDataOnline[strval(cmdtext[11])][NameOnline]);
										fclose(fEscribir1);

										PlayersData[strval(cmdtext[11])][Phone] = PlayersData[playerid][Phone];
										PlayersData[playerid][Phone] = 0;
										RemoveObjectBolsillo(playerid, 3);
										AddObjectBolsillo(strval(cmdtext[11]), 3);

										new MsgMeDarMovil[MAX_TEXT_CHAT];
										format(MsgMeDarMovil, sizeof(MsgMeDarMovil), "le ha dado un móvil a %s", PlayersDataOnline[strval(cmdtext[11])][NameOnlineFix]);
							        	Acciones_ROL(playerid, ACCION_ME, MsgMeDarMovil);
									}
							        else
							        {
										SendInfoMessage(playerid, 0, "374", "El jugador que desea darle su móvil ya tiene uno");
									}
						        }
							}
							else
							{
								SendInfoMessage(playerid, 0, "375", "Finalize su llamada telefónica antes de dar su móvil");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "376", "Tú no tienes móvil");
						}
				    }
					// COMANDO: /Dar Extorsión [ID]
			  		else if (strfind(cmdtext, "/Dar Extorsión ", true) == 0 || strfind(cmdtext, "/Dar Extorsion ", true) == 0)
				    {
				        if (PlayersDataOnline[playerid][InPickup] >= NegociosData[1][PickupOutId] &&
				             PlayersDataOnline[playerid][InPickup] <= NegociosData[MAX_BIZZ][PickupOutId])
				        {
				            if (IsMyBizz(playerid, PlayersDataOnline[playerid][MyPickupWorld], true) )
				            {
	                            if (strlen(NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Extorsion]) == 2)
	                            {
								    if (IsPlayerNear(playerid, strval(cmdtext[15]),
										 "1084",
										 "1085",
										 "1086",
										 "El jugador que le deseas darle el poder de extorsión de su negocio no se encuentra conectado",
										 "El jugador que le deseas darle el poder de extorsión de su negocio no se ha logueado",
										 "El jugador que le deseas darle el poder de extorsión de su negocio no se encuentra cerca de tí"))
								    {
									    format(NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Extorsion], MAX_PLAYER_NAME, "%s", PlayersDataOnline[strval(cmdtext[15])][NameOnline]);
										new MsgToMe[MAX_TEXT_CHAT];
										new MsgToExtorsionista[MAX_TEXT_CHAT];
										format(MsgToMe, sizeof(MsgToMe), "Has dado el poder de extorsión de este negocio a %s", PlayersDataOnline[strval(cmdtext[15])][NameOnlineFix]);
										format(MsgToExtorsionista, sizeof(MsgToExtorsionista), "%s te ha dado el poder de extorsionarle este negocio", PlayersDataOnline[playerid][NameOnlineFix]);
										SendInfoMessage(playerid, 3, "0", MsgToMe);
										SendInfoMessage(strval(cmdtext[15]), 3, "0", MsgToExtorsionista);
										ActTextDrawBizz(PlayersDataOnline[playerid][MyPickupWorld]);
								    }
								}
								else
								{
									SendInfoMessage(playerid, 0, "352", "Sólo puede haber un extorsionista por negocio");
								}
				            }
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "320", "No te encuentras en ningún negocio");
						}
				    }
   					// COMANDO: /Dar Artículo [ID] [ID_Bolsa]
			  		else if (strfind(cmdtext, "/Dar Artículo ", true) == 0 ||
					  		 strfind(cmdtext, "/Dar Articulo ", true) == 0)
				    {
				        new playeridBolsa = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
				        new BolsaID = strval(cmdtext[GetPosSpace(cmdtext, 3)]);
					    if (IsPlayerNear(playerid, strval(cmdtext[13]),
							 "1250",
							 "1251",
							 "1252",
							 "El jugador que le deseas dar un chaleco no se encuentra conectado",
							 "El jugador que le deseas dar un chaleco no se ha logueado",
							 "El jugador que le deseas dar un chaleco no se encuentra cerca de tí"))
					    {
							GiveArticlePlayerToPlayer(playerid, playeridBolsa, BolsaID);
						}
				    }
					// COMANDO: /Dar Chaleco [ID]
			  		else if (strfind(cmdtext, "/Dar Chaleco ", true) == 0)
				    {
					    if (IsPlayerNear(playerid, strval(cmdtext[13]),
							 "273",
							 "274",
							 "275",
							 "El jugador que le deseas dar un chaleco no se encuentra conectado",
							 "El jugador que le deseas dar un chaleco no se ha logueado",
							 "El jugador que le deseas dar un chaleco no se encuentra cerca de tí"))
					    {
							new Float:Chaleco1;
							GetPlayerArmour(playerid, Chaleco1);
							if (Chaleco1 != 0.0)
							{
								new MsgDarMe[MAX_TEXT_CHAT];
								new MsgDar[MAX_TEXT_CHAT];

								SetPlayerArmourEx(strval(cmdtext[13]), Chaleco1);
								SetPlayerArmourEx(playerid, -Chaleco1);

								format(MsgDar, sizeof(MsgDar), "Le has dado un chaleco a %s", PlayersDataOnline[strval(cmdtext[13])][NameOnlineFix]);
								format(MsgDarMe, sizeof(MsgDarMe), "le ha dado un chaleco a %s", PlayersDataOnline[strval(cmdtext[13])][NameOnlineFix]);
						        Acciones_ROL(playerid, ACCION_ME, MsgDarMe);
						        SendInfoMessage(playerid, 2, "0", MsgDar);
							}
							else
							{
								SendInfoMessage(playerid, 0, "276", "Usted no tienes ningún chaleco puesto encima.");
							}
						}
				    }
					// COMANDO: /Dar Arma [ID]
			  		else if (strfind(cmdtext, "/Dar Arma ", true) == 0)
				    {
					    if (IsPlayerNear(playerid, strval(cmdtext[10]),
							 "277",
							 "278",
							 "279",
							 "El jugador que le deseas darle un arma no se encuentra conectado",
							 "El jugador que le deseas darle un arma no se ha logueado",
							 "El jugador que le deseas darle un arma no se encuentra cerca de tí"))
					    {
							new MyWeapons, MyAmmo; MyWeapons = GetPlayerWeapon(playerid); MyAmmo = GetPlayerAmmo(playerid);
					        if (CheckWeapondCheat(playerid) && CheckWeapondCheat(strval(cmdtext[10])) && MyWeapons != 0)
					        {
					            if (IsPlayerNotVehicleWeapondAction(playerid, strval(cmdtext[10])))
					            {
						            RemovePlayerWeapond(playerid, MyWeapons);
						            GivePlayerWeaponEx(strval(cmdtext[10]), MyWeapons, MyAmmo);

									new MsgDar[MAX_TEXT_CHAT];
									new MsgDarMe[MAX_TEXT_CHAT];
							        format(MsgDar, sizeof(MsgDar), "Le has dado %s a %s.", SlotNameWeapon[MyWeapons], PlayersDataOnline[strval(cmdtext[10])][NameOnlineFix]);
							        format(MsgDarMe, sizeof(MsgDarMe), "le ha dado un arma tipo %s a %s", SlotNameWeapon[MyWeapons], PlayersDataOnline[strval(cmdtext[10])][NameOnlineFix]);
							        Acciones_ROL(playerid, ACCION_ME, MsgDarMe);
							        SendInfoMessage(playerid, 2, "0", MsgDar);
						        }
							}
							else
							{
								SendInfoMessage(playerid, 0, "280", "No tienes un arma en las manos!");
							}
					    }
				    }
					// COMANDO: /Dar ArmaEx [ID] [Munición]
			  		else if (strfind(cmdtext, "/Dar ArmaEx ", true) == 0)
				    {
				        new PlayerGiveWeapon = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
				        new AmmoWeapon = strval(cmdtext[GetPosSpace(cmdtext, 3)]);
					    if (IsPlayerNear(playerid, PlayerGiveWeapon,
							 "982",
							 "987",
							 "988",
							 "El jugador que le deseas darle un arma no se encuentra conectado",
							 "El jugador que le deseas darle un arma no se ha logueado",
							 "El jugador que le deseas darle un arma no se encuentra cerca de tí"))
					    {
							new MyWeapons, MyAmmo; MyWeapons = GetPlayerWeapon(playerid); MyAmmo = GetPlayerAmmo(playerid);
							new YouWeapons, YouAmmo; YouWeapons = GetPlayerWeapon(PlayerGiveWeapon); YouAmmo = GetPlayerAmmo(PlayerGiveWeapon);
					        if (CheckWeapondCheat(playerid) && CheckWeapondCheat(PlayerGiveWeapon) && IsNotOneWeapon(MyWeapons))
					        {
					            if (IsPlayerNotVehicleWeapondAction(playerid, PlayerGiveWeapon))
					            {
						            if (MyAmmo >= 2)
						            {
						                if (MyWeapons == YouWeapons)
						                {
						                    if (MyAmmo > AmmoWeapon)
						                    {
									            RemovePlayerWeapond(playerid, MyWeapons);
									            GivePlayerWeaponEx(playerid, MyWeapons, MyAmmo - AmmoWeapon);

									            RemovePlayerWeapond(PlayerGiveWeapon, MyWeapons);
									            GivePlayerWeaponEx(PlayerGiveWeapon, MyWeapons, YouAmmo + AmmoWeapon);

												new MsgDar[MAX_TEXT_CHAT];
												new MsgDarYou[MAX_TEXT_CHAT];
												new MsgDarMe[MAX_TEXT_CHAT];
										        format(MsgDar, sizeof(MsgDar), "Le has dado %i de munición de un arma %s a %s.", AmmoWeapon, SlotNameWeapon[MyWeapons], PlayersDataOnline[PlayerGiveWeapon][NameOnlineFix]);
										        format(MsgDarYou, sizeof(MsgDarYou), "%s te ha dado %i de munición de un arma %s.", PlayersDataOnline[playerid][NameOnlineFix], AmmoWeapon, SlotNameWeapon[MyWeapons]);
										        format(MsgDarMe, sizeof(MsgDarMe), "le ha dado algunas municiones de un arma tipo %s a %s", SlotNameWeapon[MyWeapons], PlayersDataOnline[PlayerGiveWeapon][NameOnlineFix]);
										        Acciones_ROL(playerid, ACCION_ME, MsgDarMe);
										        SendInfoMessage(playerid, 2, "0", MsgDar);
										        SendInfoMessage(PlayerGiveWeapon, 2, "0", MsgDarYou);
									        }
									        else
									        {
												SendInfoMessage(playerid, 0, "983", "No tienes esa cantidad de munición para dar!");
											}
								        }
								        else
								        {
											SendInfoMessage(playerid, 0, "984", "El jugador que desea dárle municiones, debe tener la misma arma en la mano para dárselas");
										}
							        }
							        else
							        {
										SendInfoMessage(playerid, 0, "985", "Mínimo tienes que tener 2 de munición a dar");
									}
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "986", "No tienes un arma en las manos que puedas dar municiones!");
							}
					    }
				    }
					// COMANDO: /Dar Drogas [ID] [Cantidad]
			  		else if (strfind(cmdtext, "/Dar Drogas ", true) == 0)
				    {
				        new playeridto	= strval(cmdtext[GetPosSpace(cmdtext, 2)]);
				        new TheOption 	= strval(cmdtext[GetPosSpace(cmdtext, 3)]);
					    if (IsPlayerNear(playerid, playeridto,
							 "627",
							 "625",
							 "626",
							 "El jugador que le deseas darle drogas no se encuentra conectado",
							 "El jugador que le deseas darle drogas no se ha logueado",
							 "El jugador que le deseas darle drogas no se encuentra cerca de tí"))
					    {
					        if (PlayersData[playerid][Drogas] > 0 && PlayersData[playerid][Drogas] >= TheOption)
					        {
					            new MsgDarTempMe[MAX_TEXT_CHAT];
					            new MsgDarTemp[MAX_TEXT_CHAT];
					            new MsgDarTempToPlayer[MAX_TEXT_CHAT];
					            format(MsgDarTempMe, sizeof(MsgDarTempMe)	, "le da unas drogas a %s", PlayersDataOnline[playeridto][NameOnlineFix]);
					            format(MsgDarTemp, sizeof(MsgDarTemp)		, "Le has dado %i drogas a %s", TheOption, PlayersDataOnline[playeridto][NameOnlineFix]);
					            format(MsgDarTempToPlayer, sizeof(MsgDarTempToPlayer)	, "%s te ha dado %i drogas", PlayersDataOnline[playerid][NameOnlineFix], TheOption);
						        Acciones_ROL(playerid, ACCION_ME, MsgDarTempMe);
						        SendInfoMessage(playerid, 2, "0", MsgDarTemp);
						        SendInfoMessage(playeridto, 2, "0", MsgDarTempToPlayer);

						        PlayersData[playerid][Drogas] = PlayersData[playerid][Drogas] - TheOption;
						        PlayersData[playeridto][Drogas] = PlayersData[playeridto][Drogas] + TheOption;
							}
							else
							{
								SendInfoMessage(playerid, 0, "624", "No tienes esa cantidad de drogas para dar!");
							}
					    }
				    }
					// COMANDO: /Dar Ganzúas [ID] [Cantidad]
			  		else if (strfind(cmdtext, "/Dar Ganzúas ", true) == 0 ||
						     strfind(cmdtext, "/Dar Ganzuas ", true) == 0)
				    {
				        new playeridto	= strval(cmdtext[GetPosSpace(cmdtext, 2)]);
				        new TheOption 	= strval(cmdtext[GetPosSpace(cmdtext, 3)]);
					    if (IsPlayerNear(playerid, playeridto,
							 "622",
							 "622",
							 "620",
							 "El jugador que le deseas darle ganzúas no se encuentra conectado",
							 "El jugador que le deseas darle ganzúas no se ha logueado",
							 "El jugador que le deseas darle ganzúas no se encuentra cerca de tí"))
					    {
					        if (PlayersData[playerid][Ganzuas] > 0 && PlayersData[playerid][Ganzuas] >= TheOption)
					        {
					            new MsgDarTempMe[MAX_TEXT_CHAT];
					            new MsgDarTemp[MAX_TEXT_CHAT];
					            new MsgDarTempToPlayer[MAX_TEXT_CHAT];
					            format(MsgDarTempMe, sizeof(MsgDarTempMe)	, "le da unas ganzúas a %s", PlayersDataOnline[playeridto][NameOnlineFix]);
					            format(MsgDarTemp, sizeof(MsgDarTemp)		, "Le has dado %i ganzúas a %s", TheOption, PlayersDataOnline[playeridto][NameOnlineFix]);
					            format(MsgDarTempToPlayer, sizeof(MsgDarTempToPlayer)	, "%s te ha dado %i ganzúas", PlayersDataOnline[playerid][NameOnlineFix], TheOption);
						        Acciones_ROL(playerid, ACCION_ME, MsgDarTempMe);
						        SendInfoMessage(playerid, 2, "0", MsgDarTemp);
						        SendInfoMessage(playeridto, 2, "0", MsgDarTempToPlayer);

						        PlayersData[playerid][Ganzuas] = PlayersData[playerid][Ganzuas] - TheOption;
						        PlayersData[playeridto][Ganzuas] = PlayersData[playeridto][Ganzuas] + TheOption;
							}
							else
							{
								SendInfoMessage(playerid, 0, "621", "No tienes esa cantidad de ganzúas para dar!");
							}
					    }
				    }
					// COMANDO: /Dar Materiales [ID] [Cantidad]
			  		else if (strfind(cmdtext, "/Dar Materiales ", true) == 0)
				    {
				        new playeridto	= strval(cmdtext[GetPosSpace(cmdtext, 2)]);
				        new TheOption 	= strval(cmdtext[GetPosSpace(cmdtext, 3)]);
					    if (IsPlayerNear(playerid, playeridto,
							 "619",
							 "618",
							 "617",
							 "El jugador que le deseas darle Materiales no se encuentra conectado",
							 "El jugador que le deseas darle Materiales no se ha logueado",
							 "El jugador que le deseas darle Materiales no se encuentra cerca de tí"))
					    {
					        if (PlayersData[playerid][Materiales] > 0 && PlayersData[playerid][Materiales] >= TheOption)
					        {
					            if (IsNotFullMaterialsPlayer(playeridto, TheOption))
					            {
						            new MsgDarTempMe[MAX_TEXT_CHAT];
						            new MsgDarTemp[MAX_TEXT_CHAT];
						            new MsgDarTempToPlayer[MAX_TEXT_CHAT];
						            format(MsgDarTempMe, sizeof(MsgDarTempMe)	, "le da unos materiales a %s", PlayersDataOnline[playeridto][NameOnlineFix]);
						            format(MsgDarTemp, sizeof(MsgDarTemp)		, "Le has dado %i materiales a %s", TheOption, PlayersDataOnline[playeridto][NameOnlineFix]);
						            format(MsgDarTempToPlayer, sizeof(MsgDarTempToPlayer)	, "%s te ha dado %i materiales", PlayersDataOnline[playerid][NameOnlineFix], TheOption);
							        Acciones_ROL(playerid, ACCION_ME, MsgDarTempMe);
							        SendInfoMessage(playerid, 2, "0", MsgDarTemp);
							        SendInfoMessage(playeridto, 2, "0", MsgDarTempToPlayer);

							        PlayersData[playerid][Materiales] = PlayersData[playerid][Materiales] - TheOption;
							        PlayersData[playeridto][Materiales] = PlayersData[playeridto][Materiales] + TheOption;
						        }
						        else
						        {
							    	SendInfoMessage(playerid, 0, "980", "Al jugador que le deseas dar los materiales, no le cabe esa cantidad indícada!");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "616", "No tienes esa cantidad de materiales para dar!");
							}
					    }
				    }
					/*else if (strfind(cmdtext, "/Dar piezas ", true) == 0)
				    {
				        new playeridto	= strval(cmdtext[GetPosSpace(cmdtext, 2)]);
				        new TheOption 	= strval(cmdtext[GetPosSpace(cmdtext, 3)]);
					    if (IsPlayerNear(playerid, playeridto,
							 "619",
							 "618",
							 "617",
							 "El jugador que le deseas darle Materiales no se encuentra conectado",
							 "El jugador que le deseas darle Materiales no se ha logueado",
							 "El jugador que le deseas darle Materiales no se encuentra cerca de tí"))
					    {
					        if (PlayersData[playerid][Piezas] > 0 && PlayersData[playerid][Piezas] >= TheOption)
					        {
					            if (IsNotFullPiezasPlayer(playeridto, TheOption))
					            {
						            new MsgDarTempMe[MAX_TEXT_CHAT];
						            new MsgDarTemp[MAX_TEXT_CHAT];
						            new MsgDarTempToPlayer[MAX_TEXT_CHAT];
						            format(MsgDarTempMe, sizeof(MsgDarTempMe)	, "le da unas Piezas a %s", PlayersDataOnline[playeridto][NameOnlineFix]);
						            format(MsgDarTemp, sizeof(MsgDarTemp)		, "Le has dado %i Piezas a %s", TheOption, PlayersDataOnline[playeridto][NameOnlineFix]);
						            format(MsgDarTempToPlayer, sizeof(MsgDarTempToPlayer)	, "%s te ha dado %i Piezas", PlayersDataOnline[playerid][NameOnlineFix], TheOption);
							        Acciones_ROL(playerid, ACCION_ME, MsgDarTempMe);
							        SendInfoMessage(playerid, 2, "0", MsgDarTemp);
							        SendInfoMessage(playeridto, 2, "0", MsgDarTempToPlayer);

							        PlayersData[playerid][Piezas] -= TheOption;
							        PlayersData[playeridto][Piezas] += TheOption;
						        }
						        else
						        {
							    	SendInfoMessage(playerid, 0, "980", "Al jugador que le deseas dar los Piezas, no le cabe esa cantidad indícada!");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "616", "No tienes esa cantidad de Piezas para dar!");
							}
					    }
				    }*/
					// COMANDO: /Dar Bombas [ID] [Cantidad]
			  		else if (strfind(cmdtext, "/Dar Bombas ", true) == 0)
				    {
				        new playeridto	= strval(cmdtext[GetPosSpace(cmdtext, 2)]);
				        new TheOption 	= strval(cmdtext[GetPosSpace(cmdtext, 3)]);
					    if (IsPlayerNear(playerid, playeridto,
							 "615",
							 "614",
							 "613",
							 "El jugador que le deseas darle Bombas no se encuentra conectado",
							 "El jugador que le deseas darle Bombas no se ha logueado",
							 "El jugador que le deseas darle Bombas no se encuentra cerca de tí"))
					    {
					        if (PlayersData[playerid][Bombas] > 0 && PlayersData[playerid][Bombas] >= TheOption)
					        {
					            new MsgDarTempMe[MAX_TEXT_CHAT];
					            new MsgDarTemp[MAX_TEXT_CHAT];
					            new MsgDarTempToPlayer[MAX_TEXT_CHAT];
					            format(MsgDarTempMe, sizeof(MsgDarTempMe)	, "le da unas Bombas a %s", PlayersDataOnline[playeridto][NameOnlineFix]);
					            format(MsgDarTemp, sizeof(MsgDarTemp)		, "Le has dado %i Bombas a %s", TheOption, PlayersDataOnline[playeridto][NameOnlineFix]);
					            format(MsgDarTempToPlayer, sizeof(MsgDarTempToPlayer)	, "%s te ha dado %i Bombas", PlayersDataOnline[playerid][NameOnlineFix], TheOption);
						        Acciones_ROL(playerid, ACCION_ME, MsgDarTempMe);
						        SendInfoMessage(playerid, 2, "0", MsgDarTemp);
						        SendInfoMessage(playeridto, 2, "0", MsgDarTempToPlayer);

						        PlayersData[playerid][Bombas] = PlayersData[playerid][Bombas] - TheOption;
						        PlayersData[playeridto][Bombas] = PlayersData[playeridto][Bombas] + TheOption;
							}
							else
							{
								SendInfoMessage(playerid, 0, "612", "No tienes esa cantidad de Bombas para dar!");
							}
					    }
				    }
				    else if(strfind(cmdtext, "/Dar Control ", true) == 0)
				    {
				        new id_entregar = strval(cmdtext[GetPosSpace(cmdtext,2)]);
				        new id_bomba = strval(cmdtext[GetPosSpace(cmdtext,3)]);
				        new msjdarcontrol[150];
				        new msjentregarcontrol[150];
				        if(ControlBomba(playerid,id_entregar,id_bomba))
				        {
							format(msjdarcontrol,sizeof(msjdarcontrol),"Haz entregado el control de la bomba ID:[%i] a %s ",id_bomba,PlayersDataOnline[id_entregar][NameOnline]);
				        	format(msjentregarcontrol,sizeof(msjentregarcontrol),"Haz recibido el control de la bomba ID:[%i] de %s ",id_bomba,PlayersDataOnline[playerid][NameOnline]);
				        	SendInfoMessage(playerid, 2, "0",msjdarcontrol);
				        	SendInfoMessage(id_entregar, 2, "0",msjentregarcontrol);
 						}
 						else
 						{
 						    SendInfoMessage(playerid, 0, "1654","La bomba ha sido detonada o no tienes el control.");
 						}
					}
				    else
				    {
						SendInfoMessage(playerid, 0, "272", "Quizás quiso decir: /Dar {Arma [ID], ArmaEx [ID] [Munición], Chaleco [ID], Drogas [ID] [Cantidad], Ganzúas [ID] [Cantidad]}");
						SendInfoMessage(playerid, 0, "272", "Quizás quiso decir: /Dar {Materiales [ID] [Cantidad], Habilidad [ID] [ID_Habilidad], Bombas [ID] [Cantidad], Llaves [ID]}");
						SendInfoMessage(playerid, 0, "272", "Quizás quiso decir: /Dar {Extorsión [ID], Dados [ID], Móvil [ID], Patines [ID], Llaves Amigo [ID], Artículo [ID] [ID_Bolsa]}");
						SendInfoMessage(playerid, 0, "272", "Quizás quiso decir: /Dar {Cartera [ID] [ID_Cartera] - /Dar Control [ID]}");
					}
			    }
			    else if(strfind(cmdtext, "/bomberman ", true) == 0)
			    {
			        if(PlayersData[playerid][Faccion] == SICARIOS || PlayersData[playerid][Faccion] == LCN && PlayersData[playerid][Rango] == 0)
			        {
			            new id_bomberman = strval(cmdtext[GetPosSpace(cmdtext,1)]);
			            new cantidad    = strval(cmdtext[GetPosSpace(cmdtext,2)]);
			            PlayersData[id_bomberman][bomberman] = cantidad;
						new msjplayer[150];
						new msjlider[150];
						format(msjplayer,150,"Info: Has otorgado permiso para montar %i bombas a %s.",cantidad,PlayersDataOnline[id_bomberman][NameOnlineFix]);
						format(msjlider,150,"Info: %s te ha otorgado permiso para colocar %i bombas",PlayersDataOnline[playerid][NameOnlineFix], cantidad);
						SendInfoMessage(playerid, 2,"0",msjplayer);
						SendInfoMessage(id_bomberman, 2,"0",msjlider);
			        }
			        else
			        {
			            SendInfoMessage(playerid, 0, "1656", "Usted no puede dar estos privilegios!");
			        }
			    }
				// COMANDO: /Reportar [ID] [Razón]
				else if (strfind(cmdtext, "/Reportar ", true) == 0)
				{
					if (strval(cmdtext[10]) != playerid)
					{
						if (IsPlayerConnected(strval(cmdtext[10])))
						{
						    if(!IsPlayerNPC(strval(cmdtext[10]))) //Checks if the player that just spawned is an NPC.
  							{
								new MsgReportarInputText[MAX_TEXT_CHAT];
								PlayersDataOnline[playerid][MyLastIdReport] = strval(cmdtext[10]);
								format(MsgReportarInputText, sizeof(MsgReportarInputText), "{00A5FF}Reportar a %s", PlayersDataOnline[strval(cmdtext[10])][NameOnlineFix]);
							    ShowPlayerDialogEx(playerid, 11, DIALOG_STYLE_INPUT, MsgReportarInputText, "{F0F0F0}Describa brevemente la razón de su reporte", "Reportar", "Cancelar");
		   						return 1;
		   					}
		   					else
		   					{
		   					    SendInfoMessage(playerid, 0, "283", "No está permitido reportar a NPC's");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "283", "El jugador que desea reportar no se encuentra connectado");
							return 1;
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "284", "La ID que has introducído es la suya.");
	                    return 1;
					}
				}
				// COMANDO: /Aceptar
				else if (strfind(cmdtext, "/Aceptar", true) == 0)
				{
				    // COMANDO: /Aceptar Reparación
				  	if (strcmp("/Aceptar Reparación", cmdtext, true, 19) == 0 && strlen(cmdtext) == 19 ||
					    strcmp("/Aceptar Reparacion", cmdtext, true, 19) == 0 && strlen(cmdtext) == 19)
			    	{
			    	    if (PlayersDataOnline[playerid][VRepair][0] != -1)
			    	    {
				            if (IsPlayerInTallerEx(playerid))
				            {
				                if (IsPlayerInAnyVehicle(playerid))
				                {
						            if (PlayersData[playerid][Dinero] >= PlayersDataOnline[playerid][VRepair][1] ||(PlayersData[playerid][ModoPago] && PlayersData[playerid][Credito] >= PlayersDataOnline[playerid][VRepair][1]))
						            {
										new MsgRepair[MAX_TEXT_CHAT];
										format(MsgRepair, sizeof(MsgRepair), "Reparó este vehículo por $%i", PlayersDataOnline[playerid][VRepair][1]);
				                        SendInfoMessage(playerid, 3, "0", MsgRepair);
										if (IsPlayerConnected(PlayersDataOnline[playerid][VRepair][0]))
										{
											new MsgRepairToPlayer[MAX_TEXT_CHAT];
											format(MsgRepairToPlayer, sizeof(MsgRepairToPlayer), "Has reparado el vehículo de %s por $%i", PlayersDataOnline[playerid][NameOnlineFix], PlayersDataOnline[playerid][VRepair][1]);
					                        SendInfoMessage(PlayersDataOnline[playerid][VRepair][0], 3, "0", MsgRepairToPlayer);
										}
										FaccionData[PlayersData[PlayersDataOnline[playerid][VRepair][0]][Faccion]][Deposito] = FaccionData[PlayersData[PlayersDataOnline[playerid][VRepair][0]][Faccion]][Deposito] + PlayersDataOnline[playerid][VRepair][1];

										RepairVehicle(GetPlayerVehicleID(playerid));
										SetVehicleHealthEx(GetPlayerVehicleID(playerid), 1000.0);

										if(PlayersData[playerid][ModoPago] && PlayersData[playerid][Credito] >= PlayersDataOnline[playerid][VRepair][1])
										{
										    PlayersData[playerid][Credito] -= PlayersDataOnline[playerid][VRepair][1];
										}
										else
										{
											GivePlayerMoneyEx(playerid, -PlayersDataOnline[playerid][VRepair][1]);
										}


										PlayersDataOnline[playerid][VRepair][0] = -1;
										PlayersDataOnline[playerid][VRepair][1] = -1;
										new Float:SaveRepair = 1000.0;
								    	UpdateDamage(playerid, SaveRepair);
									}
									else
									{
										SendInfoMessage(playerid, 0, "696", "No tienes suficiente dinero para reparar el vehículo a ese precio!");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "697", "Suba nuevamente al vehículo q que deseaba reparar");
								}
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "698", "No has recibido ninguna oferta de reparación!");
						}
					}
				    // COMANDO: /Aceptar aceíte
				  	else if (strcmp("/Aceptar Aceíte", cmdtext, true, 15) == 0 && strlen(cmdtext) == 15 ||
					    strcmp("/Aceptar Aceite", cmdtext, true, 15) == 0 && strlen(cmdtext) == 15)
			    	{
			    	    if (PlayersDataOnline[playerid][VAceite][0] != -1)
			    	    {
				            if (IsPlayerInTallerEx(playerid))
				            {
				                if (IsPlayerInAnyVehicle(playerid))
				                {
						            if (PlayersData[playerid][Dinero] >= PlayersDataOnline[playerid][VAceite][1] ||
										(PlayersData[playerid][ModoPago] && PlayersData[playerid][Credito] >= PlayersDataOnline[playerid][VAceite][1]))
						            {
										new MsgRepair[MAX_TEXT_CHAT];
										format(MsgRepair, sizeof(MsgRepair), "Relleno de aceíte este vehículo por $%i", PlayersDataOnline[playerid][VAceite][1]);
				                        SendInfoMessage(playerid, 3, "0", MsgRepair);
										if (IsPlayerConnected(PlayersDataOnline[playerid][VAceite][0]))
										{
											new MsgRepairToPlayer[MAX_TEXT_CHAT];
											format(MsgRepairToPlayer, sizeof(MsgRepairToPlayer), "Has rellenado este vehículo de aceíte a %s por $%i", PlayersDataOnline[playerid][NameOnlineFix], PlayersDataOnline[playerid][VAceite][1]);
					                        SendInfoMessage(PlayersDataOnline[playerid][VAceite][0], 3, "0", MsgRepairToPlayer);
										}
										FaccionData[PlayersData[PlayersDataOnline[playerid][VAceite][0]][Faccion]][Deposito] = FaccionData[PlayersData[PlayersDataOnline[playerid][VAceite][0]][Faccion]][Deposito] + PlayersDataOnline[playerid][VAceite][1];

										DataCars[GetPlayerVehicleID(playerid)][Oil] = MAX_OIL_VEHICLE;

                                        if(PlayersData[playerid][ModoPago] && PlayersData[playerid][Credito] >= PlayersDataOnline[playerid][VAceite][1])
										{
										    PlayersData[playerid][Credito] -= PlayersDataOnline[playerid][VAceite][1];
										}
										else
										{
											GivePlayerMoneyEx(playerid, -PlayersDataOnline[playerid][VAceite][1]);
										}


										PlayersDataOnline[playerid][VAceite][0] = -1;
										PlayersDataOnline[playerid][VAceite][1] = -1;

										UpdateGasAndOil(GetPlayerVehicleID(playerid));
									}
									else
									{
										SendInfoMessage(playerid, 0, "1129", "No tienes suficiente dinero para rellenar de aceíte el vehículo a ese precio!");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1130", "Suba nuevamente al vehículo que deseaba rellenar de aceíte");
								}
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1131", "No has recibido ninguna oferta de aceíte!");
						}
					}
				    // COMANDO: /Aceptar Protección   VProteger
				  	else if (strcmp("/Aceptar Protección", cmdtext, true, 19) == 0 && strlen(cmdtext) == 19 ||
							 strcmp("/Aceptar Proteccion", cmdtext, true, 19) == 0 && strlen(cmdtext) == 19)
			    	{
			    	    if (PlayersDataOnline[playerid][VProteger][0] != -1)
			    	    {
						    if (IsPlayerNear(playerid, PlayersDataOnline[playerid][VProteger][0],
								 "727",
								 "728",
								 "729",
								 "El jugador que le iba a proteger se a desconectado",
								 "El jugador que le iba a proteger no se ha logueado",
								 "El jugador que le iba a proteger no se encuentra cerca de tí"))
						    {
					            if (PlayersData[playerid][Dinero] >= PlayersDataOnline[playerid][VProteger][1])
					            {
										new MsgProteger[MAX_TEXT_CHAT];
										new MsgProtegerToPlayer[MAX_TEXT_CHAT];
										format(MsgProteger, sizeof(MsgProteger), "Has aceptado que el Guardaespaldas %s te proteja por $%i", PlayersDataOnline[PlayersDataOnline[playerid][VProteger][0]][NameOnlineFix], PlayersDataOnline[playerid][VProteger][1]);
										format(MsgProtegerToPlayer, sizeof(MsgProtegerToPlayer), "%s a aceptado que lo protejas por $%i", PlayersDataOnline[playerid][NameOnlineFix],  PlayersDataOnline[playerid][VProteger][1]);

										SendInfoMessage(playerid, 3, "0", MsgProteger);
										SendInfoMessage(PlayersDataOnline[playerid][VProteger][0],3, "0", MsgProtegerToPlayer);

										GivePlayerMoneyEx(playerid, -PlayersDataOnline[playerid][VProteger][1]);
										GivePlayerMoneyEx(PlayersDataOnline[playerid][VProteger][0], PlayersDataOnline[playerid][VProteger][1]);

										SetPlayerArmourEx(playerid, 80.0);
										SetPlayerArmourEx(PlayersDataOnline[playerid][VProteger][0], 80.0);
								}
								else
								{
									SendInfoMessage(playerid, 0, "730", "No tienes suficiente dinero para que te protejan");
								}
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "731", "No has recibido ninguna oferta de protección!");
						}
						PlayersDataOnline[playerid][VProteger][0] = -1;
						PlayersDataOnline[playerid][VProteger][1] = -1;
			    	}
				    // COMANDO: /Aceptar Drogas
				  	else if (strcmp("/Aceptar Drogas", cmdtext, true, 15) == 0 && strlen(cmdtext) == 15)
			    	{
			    	    if (PlayersDataOnline[playerid][VDrogas][0] != -1)
			    	    {
						    if (IsPlayerNear(playerid, PlayersDataOnline[playerid][VDrogas][0],
								 "752",
								 "753",
								 "751",
								 "El jugador que le iba a comprar drogas se a desconectado",
								 "El jugador que le iba a comprar drogas no se ha logueado",
								 "El jugador que le iba a comprar drogas no se encuentra cerca de tí"))
						    {
					            if (PlayersData[playerid][Dinero] >= PlayersDataOnline[playerid][VDrogas][1])
					            {
										new MsgDrogas[MAX_TEXT_CHAT];
										new MsgDrogasToPlayer[MAX_TEXT_CHAT];
										format(MsgDrogas, sizeof(MsgDrogas), "Has comprado %i drogas, a el vendedor de drogas %s, por $%i", PlayersDataOnline[playerid][VDrogas][2], PlayersDataOnline[PlayersDataOnline[playerid][VDrogas][0]][NameOnlineFix], PlayersDataOnline[playerid][VDrogas][1]);
										format(MsgDrogasToPlayer, sizeof(MsgDrogasToPlayer), "%s te ha comprado %i drogas por $%i", PlayersDataOnline[playerid][NameOnlineFix],  PlayersDataOnline[playerid][VDrogas][2], PlayersDataOnline[playerid][VDrogas][1]);

										SendInfoMessage(playerid, 3, "0", MsgDrogas);
										SendInfoMessage(PlayersDataOnline[playerid][VDrogas][0],3, "0", MsgDrogasToPlayer);

										GivePlayerMoneyEx(playerid, -PlayersDataOnline[playerid][VDrogas][1]);
										GivePlayerMoneyEx(PlayersDataOnline[playerid][VDrogas][0], PlayersDataOnline[playerid][VDrogas][1]);

										PlayersData[playerid][Drogas] = PlayersData[playerid][Drogas] + PlayersDataOnline[playerid][VDrogas][2];
										PlayersData[PlayersDataOnline[playerid][VDrogas][0]][Drogas] = PlayersData[PlayersDataOnline[playerid][VDrogas][0]][Drogas] - PlayersDataOnline[playerid][VDrogas][2];
								}
								else
								{
									SendInfoMessage(playerid, 0, "754", "No tienes suficiente dinero para comprar esas drogas!");
								}
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "755", "No has recibido ninguna oferta de drogas!");
						}
						PlayersDataOnline[playerid][VDrogas][0] = -1;
						PlayersDataOnline[playerid][VDrogas][1] = -1;
						PlayersDataOnline[playerid][VDrogas][2] = -1;
			    	}
				    // COMANDO: /Aceptar Móvil
				  	else if (strcmp("/Aceptar Móvil", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14 ||
		  			    	 strcmp("/Aceptar Movil", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
			    	{
			    	    if (PlayersDataOnline[playerid][VPhone][0] != -1)
			    	    {
						    if (IsPlayerNear(playerid, PlayersDataOnline[playerid][VPhone][0],
								 "1470",
								 "1471",
								 "1472",
								 "El jugador que le iba a comprar un móvil se a desconectado",
								 "El jugador que le iba a comprar un móvil no se ha logueado",
								 "El jugador que le iba a comprar un móvil no se encuentra cerca de tí"))
						    {
						        if (!PlayersData[playerid][Phone])
						        {
						            if (PlayersData[playerid][Dinero] >= PlayersDataOnline[playerid][VPhone][1])
						            {
								        if (PlayersDataOnline[playerid][VPhone][2] == 0 && BuyPhone24_7(playerid) || BuyPhoneNow(playerid, PlayersDataOnline[playerid][VPhone][2]))
								        {
											new MsgMovil[MAX_TEXT_CHAT];
											new MsgMovilToPlayer[MAX_TEXT_CHAT];
											format(MsgMovil, sizeof(MsgMovil), "Has comprado un móvil a el vendedor de móviles %s, por $%i", PlayersDataOnline[PlayersDataOnline[playerid][VPhone][0]][NameOnlineFix], PlayersDataOnline[playerid][VPhone][1]);
											format(MsgMovilToPlayer, sizeof(MsgMovilToPlayer), "%s te ha comprado un móvil por $%i", PlayersDataOnline[playerid][NameOnlineFix], PlayersDataOnline[playerid][VPhone][1]);

											SendInfoMessage(playerid, 3, "0", MsgMovil);
											SendInfoMessage(PlayersDataOnline[playerid][VPhone][0],3, "0", MsgMovilToPlayer);

											GivePlayerMoneyEx(playerid, -PlayersDataOnline[playerid][VPhone][1]);
											GivePlayerMoneyEx(PlayersDataOnline[playerid][VPhone][0], PlayersDataOnline[playerid][VPhone][1]);
										}
										else
										{
											SendInfoMessage(playerid, 0, "1473", "El móvil que deseabas comprar ya fué comprado! Intenta comprar otro!");
										}
									}
									else
									{
										SendInfoMessage(playerid, 0, "1474", "No tienes suficiente dinero para comprar ese móvil!");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1475", "Ya usted tiene un móvil! Deshágase de él si quiere comprar uno nuevo");
								}
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1476", "No has recibido ninguna oferta para comprar un móvil!");
						}
						PlayersDataOnline[playerid][VPhone][0] = -1;
						PlayersDataOnline[playerid][VPhone][1] = -1;
						PlayersDataOnline[playerid][VPhone][2] = -1;
			    	}
				    // COMANDO: /Aceptar Ganzúas
				  	else if (strcmp("/Aceptar Ganzúas", cmdtext, true, 16) == 0 && strlen(cmdtext) == 16 ||
							 strcmp("/Aceptar Ganzuas", cmdtext, true, 16) == 0 && strlen(cmdtext) == 16)
			    	{
			    	    if (PlayersDataOnline[playerid][VGanzuas][0] != -1)
			    	    {
						    if (IsPlayerNear(playerid, PlayersDataOnline[playerid][VGanzuas][0],
								 "706",
								 "708",
								 "709",
								 "El jugador que le iba a comprar ganzúas se a desconectado",
								 "El jugador que le iba a comprar ganzúas no se ha logueado",
								 "El jugador que le iba a comprar ganzúas no se encuentra cerca de tí"))
						    {
					            if (PlayersData[playerid][Dinero] >= PlayersDataOnline[playerid][VGanzuas][1])
					            {
										new MsgGanzuas[MAX_TEXT_CHAT];
										new MsgGanzuasToPlayer[MAX_TEXT_CHAT];
										format(MsgGanzuas, sizeof(MsgGanzuas), "Has comprado ganzúas a el mecánico %s, por $%i", PlayersDataOnline[PlayersDataOnline[playerid][VGanzuas][0]][NameOnlineFix], PlayersDataOnline[playerid][VGanzuas][1]);
										format(MsgGanzuasToPlayer, sizeof(MsgGanzuasToPlayer), "%s te ha comprado las ganzúas por $%i", PlayersDataOnline[playerid][NameOnlineFix],  PlayersDataOnline[playerid][VGanzuas][1]);

										SendInfoMessage(playerid, 3, "0", MsgGanzuas);
										SendInfoMessage(PlayersDataOnline[playerid][VGanzuas][0],3, "0", MsgGanzuasToPlayer);

										GivePlayerMoneyEx(playerid, -PlayersDataOnline[playerid][VGanzuas][1]);
										GivePlayerMoneyEx(PlayersDataOnline[playerid][VGanzuas][0], PlayersDataOnline[playerid][VGanzuas][1]);

										PlayersData[playerid][Ganzuas] = PlayersData[playerid][Ganzuas] + 5;
								}
								else
								{
									SendInfoMessage(playerid, 0, "710", "No tienes suficiente dinero para comprar ganzúas!");
								}
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "711", "No has recibido ninguna oferta de ganzúas!");
						}
						PlayersDataOnline[playerid][VGanzuas][0] = -1;
						PlayersDataOnline[playerid][VGanzuas][1] = -1;
			    	}
				    // COMANDO: /Aceptar Factura
				  	else if (strcmp("/Aceptar Factura", cmdtext, true, 16) == 0 && strlen(cmdtext) == 16)
			    	{
			    	    if (PlayersDataOnline[playerid][VFactura][0] != -1)
			    	    {
				            if (PlayersData[playerid][Dinero] >= PlayersDataOnline[playerid][VFactura][1])
				            {
								new MsgFactura[MAX_TEXT_CHAT];
								format(MsgFactura, sizeof(MsgFactura), "Pagaste una factura de $%i", PlayersDataOnline[playerid][VFactura][1]);
		                        SendInfoMessage(playerid, 3, "0", MsgFactura);
								if (IsPlayerConnected(PlayersDataOnline[playerid][VFactura][0]))
								{
									new MsgFacturaToPlayer[MAX_TEXT_CHAT];
									format(MsgFacturaToPlayer, sizeof(MsgFacturaToPlayer), "%s pago la factura de $%i", PlayersDataOnline[playerid][NameOnlineFix], PlayersDataOnline[playerid][VFactura][1]);
			                        SendInfoMessage(PlayersDataOnline[playerid][VFactura][0], 3, "0", MsgFacturaToPlayer);
								}
								FaccionData[PlayersData[PlayersDataOnline[playerid][VFactura][0]][Faccion]][Deposito] = FaccionData[PlayersData[PlayersDataOnline[playerid][VFactura][0]][Faccion]][Deposito] + PlayersDataOnline[playerid][VFactura][1];

								GivePlayerMoneyEx(playerid, -PlayersDataOnline[playerid][VFactura][1]);

								PlayersDataOnline[playerid][VFactura][0] = -1;
								PlayersDataOnline[playerid][VFactura][1] = -1;
							}
							else
							{
								SendInfoMessage(playerid, 0, "683", "No tienes suficiente dinero para pagar esta factura!");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "684", "No has recibido ninguna factura!");
						}
					}
				    // COMANDO: /Aceptar Sexo
				  	else if (strcmp("/Aceptar Sexo", cmdtext, true, 13) == 0 && strlen(cmdtext) == 13)
				    {
				        if (PlayersDataOnline[playerid][PlayerSexo][0] != -1)
				        {
						    if (IsPlayerNear(playerid, PlayersDataOnline[playerid][PlayerSexo][0],
								 "1418",
								 "1419",
								 "1420",
								 "El jugador que deseas tener sexo con el no se encuentra conectado",
								 "El jugador que deseas tener sexo con el no se ha logueado",
								 "El jugador que deseas tener sexo con el no se encuentra cerca de tí"))
						    {
								new MsgSexoMe[MAX_TEXT_CHAT];
								new MsgSexoYou[MAX_TEXT_CHAT];
								format(MsgSexoMe, sizeof(MsgSexoMe), "Tuviste sexo con %s", PlayersDataOnline[PlayersDataOnline[playerid][PlayerSexo][0]][NameOnlineFix]);
								format(MsgSexoYou, sizeof(MsgSexoYou), "Tuviste sexo con %s", PlayersDataOnline[playerid][NameOnlineFix]);

								SendInfoMessage(playerid, 3, "0", MsgSexoMe);
								SendInfoMessage(PlayersDataOnline[playerid][PlayerSexo][0], 3, "0", MsgSexoYou);

								if (!IsPlayerHaveCondones(playerid) || !IsPlayerHaveCondones(PlayersDataOnline[playerid][PlayerSexo][0]))
								{
									new RandomSexo = random(8);
									if (RandomSexo)
									{
									    switch(RandomSexo)
									    {
									        case 1:
									        {
												ChangeEnfermedad(playerid, 3);
												ChangeEnfermedad(PlayersDataOnline[playerid][PlayerSexo][0], 3);
											}
									        case 2:
									        {
												ChangeEnfermedad(playerid, 6);
												ChangeEnfermedad(PlayersDataOnline[playerid][PlayerSexo][0], 6);
											}
										}
									}
								}
								PlayersDataOnline[PlayersDataOnline[playerid][PlayerSexo][0]][PlayerSexo][0] = -1;
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1421", "Nadie te ha ofrecido tener sexo contigo");
						}
						PlayersDataOnline[playerid][PlayerSexo][0] = -1;
				    }
				    // COMANDO: /Aceptar Saludo
				  	else if (strcmp("/Aceptar Saludo", cmdtext, true, 15) == 0 && strlen(cmdtext) == 15)
				    {
				        if (PlayersDataOnline[playerid][PlayerSexo][0] != -1)
				        {
						    if (IsPlayerNear(playerid, PlayersDataOnline[playerid][PlayerSexo][0],
								 "1418",
								 "1419",
								 "1420",
								 "El jugador al que deseas saludar no se encuentra conectado",
								 "El jugador al que deseas saludar no se ha logueado",
								 "El jugador al que deseas saludar no se encuentra cerca de tí"))
						    {
						        new MsgSaludar[MAX_TEXT_CHAT];
								new MsgSaludarMe[MAX_TEXT_CHAT];
								new MsgSaludarYou[MAX_TEXT_CHAT];
								format(MsgSaludarMe, sizeof(MsgSaludarMe), "Saludaste a %s", PlayersDataOnline[PlayersDataOnline[playerid][PlayerSexo][0]][NameOnlineFix]);
								format(MsgSaludarYou, sizeof(MsgSaludarYou), "Saludaste a %s", PlayersDataOnline[playerid][NameOnlineFix]);

								SendInfoMessage(playerid, 3, "0", MsgSaludarMe);
								SendInfoMessage(PlayersDataOnline[playerid][PlayerSexo][0], 3, "0", MsgSaludarYou);

								format(MsgSaludar, sizeof(MsgSaludar), "acepta el saludo de %s", PlayersDataOnline[PlayersDataOnline[playerid][PlayerSexo][0]][NameOnlineFix]);
        						Acciones_ROL(playerid, ACCION_ME, MsgSaludar);

                                ApplyAnimation(playerid,"GANGS","hndshkfa_swt",4.1,0,0,0,0,0);
			    				ApplyAnimation(PlayersDataOnline[playerid][PlayerSexo][0],"GANGS","hndshkfa_swt",4.1,0,0,0,0,0);

								PlayersDataOnline[PlayersDataOnline[playerid][PlayerSexo][0]][PlayerSexo][0] = -1;
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1421", "Nadie te ha ofrecido un saludo");
						}
						PlayersDataOnline[playerid][PlayerSexo][0] = -1;
				    }
				    // COMANDO: /Aceptar Saludo
				  	else if (strcmp("/Aceptar Beso", cmdtext, true, 13) == 0 && strlen(cmdtext) == 13)
				    {
				        if (PlayersDataOnline[playerid][PlayerSexo][0] != -1)
				        {
						    if (IsPlayerNear(playerid, PlayersDataOnline[playerid][PlayerSexo][0],
								 "1418",
								 "1419",
								 "1420",
								 "El jugador al que deseas saludar no se encuentra conectado",
								 "El jugador al que deseas saludar no se ha logueado",
								 "El jugador al que deseas saludar no se encuentra cerca de tí"))
						    {
						        new MsgBesar[MAX_TEXT_CHAT];
								new MsgBesarMe[MAX_TEXT_CHAT];
								new MsgBesarYou[MAX_TEXT_CHAT];
								format(MsgBesarMe, sizeof(MsgBesarMe), "Besaste a %s", PlayersDataOnline[PlayersDataOnline[playerid][PlayerSexo][0]][NameOnlineFix]);
								format(MsgBesarYou, sizeof(MsgBesarYou), "Besaste a %s", PlayersDataOnline[playerid][NameOnlineFix]);

								SendInfoMessage(playerid, 3, "0", MsgBesarMe);
								SendInfoMessage(PlayersDataOnline[playerid][PlayerSexo][0], 3, "0", MsgBesarYou);

								format(MsgBesar, sizeof(MsgBesar), "acepta el beso de %s", PlayersDataOnline[PlayersDataOnline[playerid][PlayerSexo][0]][NameOnlineFix]);
        						Acciones_ROL(playerid, ACCION_ME, MsgBesar);

								if (PlayersDataOnline[playerid][PlayerSexo][1] == 1)
								{
									ApplyAnimation(PlayersDataOnline[playerid][PlayerSexo][0],"KISSING","Playa_Kiss_01",4.1,0,0,0,0,0);
									ApplyAnimation(playerid,"KISSING","Grlfrd_Kiss_02",4.1,0,0,0,0,0);
								}
								else
								{
									ApplyAnimation(playerid,"KISSING","Playa_Kiss_01",4.1,0,0,0,0,0);
									ApplyAnimation(PlayersDataOnline[playerid][PlayerSexo][0],"KISSING","Grlfrd_Kiss_02",4.1,0,0,0,0,0);
								}

								PlayersDataOnline[PlayersDataOnline[playerid][PlayerSexo][0]][PlayerSexo][0] = -1;
								PlayersDataOnline[PlayersDataOnline[playerid][PlayerSexo][0]][PlayerSexo][1] = -1;
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1421", "Nadie te ha ofrecido un beso");
						}
						PlayersDataOnline[playerid][PlayerSexo][0] = -1;
						PlayersDataOnline[playerid][PlayerSexo][1] = -1;
				    }
				    // COMANDO: /Aceptar Servicios
				  	else if (strcmp("/Aceptar Servicios", cmdtext, true, 18) == 0 && strlen(cmdtext) == 18)
			    	{
			    	    if (PlayersDataOnline[playerid][VServicio][0] != -1)
			    	    {
						    if (IsPlayerNear(playerid, PlayersDataOnline[playerid][VServicio][0],
								 "1348",
								 "1349",
								 "1350",
								 "El jugador que desea aceptar sus servicios no se encuentra conectado",
								 "El jugador que desea aceptar sus servicios no se encuentra logueado",
								 "El jugador que desea aceptar sus servicios no se encuentra cerca de tí"))
						    {
					            if (PlayersData[playerid][Dinero] >= PlayersDataOnline[playerid][VServicio][1])
					            {
									new MsgFactura[MAX_TEXT_CHAT];
									new MsgFacturaToPlayer[MAX_TEXT_CHAT];
									format(MsgFactura, sizeof(MsgFactura), "Aceptaste los servicios por $%i", PlayersDataOnline[playerid][VServicio][1]);
									format(MsgFacturaToPlayer, sizeof(MsgFacturaToPlayer), "%s pago los servicios por el costo de $%i", PlayersDataOnline[playerid][NameOnlineFix], PlayersDataOnline[playerid][VServicio][1]);
			                        SendInfoMessage(PlayersDataOnline[playerid][VServicio][0], 3, "0", MsgFacturaToPlayer);
			                        SendInfoMessage(playerid, 3, "0", MsgFactura);

									FaccionData[ADP][Deposito] += PlayersDataOnline[playerid][VServicio][1] / 3;
									GivePlayerMoneyEx(playerid, -PlayersDataOnline[playerid][VServicio][1]);
									GivePlayerMoneyEx(PlayersDataOnline[playerid][VServicio][0], (PlayersDataOnline[playerid][VServicio][1] / 3) * 2);

									PlayersDataOnline[playerid][VServicio][0] = -1;
									PlayersDataOnline[playerid][VServicio][1] = -1;
								}
								else
								{
									SendInfoMessage(playerid, 0, "1351", "No tienes suficiente dinero para pagar esta factura!");
								}
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1352", "No has recibido ninguna factura!");
						}
					}
				    // COMANDO: /Aceptar Multa
				  	else if (strcmp("/Aceptar Multa", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
			    	{
			    	    if (PlayersDataOnline[playerid][VMulta][0] != -1)
			    	    {
				            if (PlayersData[playerid][Dinero] >= PlayersDataOnline[playerid][VMulta][1])
				            {
								new MsgMulta[MAX_TEXT_CHAT];
								format(MsgMulta, sizeof(MsgMulta), "Pagaste una multa de $%i", PlayersDataOnline[playerid][VMulta][1]);
		                        SendInfoMessage(playerid, 3, "0", MsgMulta);
								if (IsPlayerConnected(PlayersDataOnline[playerid][VMulta][0]))
								{
									new MsgMultaToPlayer[MAX_TEXT_CHAT];
									format(MsgMultaToPlayer, sizeof(MsgMultaToPlayer), "%s pago la multa de $%i", PlayersDataOnline[playerid][NameOnlineFix], PlayersDataOnline[playerid][VMulta][1]);
			                        SendInfoMessage(PlayersDataOnline[playerid][VMulta][0], 3, "0", MsgMultaToPlayer);
								}

								FaccionData[GOBIERNO][Deposito] = FaccionData[GOBIERNO][Deposito] + PlayersDataOnline[playerid][VMulta][1] / 2;
								new playerid_police = PlayersDataOnline[playerid][VMulta][0];
								if (PlayersData[playerid_police][Faccion] == SAPD)
								{
									FaccionData[SAPD][Deposito] = FaccionData[SAPD][Deposito] + PlayersDataOnline[playerid][VMulta][1] / 2;
								}
								else
								{
									FaccionData[SAPD][Deposito] = FaccionData[SAPD][Deposito] + PlayersDataOnline[playerid][VMulta][1] / 2;
								}
								GivePlayerMoneyEx(playerid, -PlayersDataOnline[playerid][VMulta][1]);

								PlayersDataOnline[playerid][VMulta][0] = -1;
								PlayersDataOnline[playerid][VMulta][1] = -1;
							}
							else
							{
								SendInfoMessage(playerid, 0, "818", "No tienes suficiente dinero para pagar esta multa!");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "819", "No has recibido ninguna multa!");
						}
					}
					//VMulta
					// COMANDO: /Aceptar Contrato
				  	else if (strcmp("/Aceptar Contrato", cmdtext, true, 17) == 0 && strlen(cmdtext) == 17)
			    	{
			    	    if (PlayersDataOnline[playerid][Contrato][0] != -1)
			    	    {
						    if (IsPlayerNear(playerid, PlayersDataOnline[playerid][Contrato][0],
								 "558",
								 "557",
								 "556",
								 "El jugador que le iba hacer el contrato no se encuentra conectado",
								 "El jugador que le iba hacer el contrato no se ha logueado",
								 "El jugador que le iba hacer el contrato no se encuentra cerca de tí"))
						    {
	   				            if (PlayersData[playerid][Dinero] >= PlayersDataOnline[playerid][Contrato][1])
	   				            {
									new MsgContrato[MAX_TEXT_CHAT];
									new MsgContratoToPlayer[MAX_TEXT_CHAT];
									format(MsgContrato, sizeof(MsgContrato), "Has aceptado el contrato de %s, por $%i", PlayersDataOnline[PlayersDataOnline[playerid][Contrato][0]][NameOnlineFix], PlayersDataOnline[playerid][Contrato][1]);
									format(MsgContratoToPlayer, sizeof(MsgContratoToPlayer), "%s ha aceptado su contrato por el monto de $%i", PlayersDataOnline[playerid][NameOnlineFix],  PlayersDataOnline[playerid][Contrato][1]);

									SendInfoMessage(playerid, 3, "0", MsgContrato);
									SendInfoMessage(PlayersDataOnline[playerid][Contrato][0],3, "0", MsgContratoToPlayer);

									GivePlayerMoneyEx(playerid, -PlayersDataOnline[playerid][Contrato][1]);
									GivePlayerMoneyEx(PlayersDataOnline[playerid][Contrato][0], PlayersDataOnline[playerid][Contrato][1]);
								}
								else
								{
									SendInfoMessage(playerid, 0, "559", "No tienes suficiente dinero para aceptar este contrato!");
								}
						    }
							PlayersDataOnline[playerid][Contrato][0] = -1;
							PlayersDataOnline[playerid][Contrato][1] = -1;
						}
						else
						{
							SendInfoMessage(playerid, 0, "560", "No has recibido ningún contrato!");
						}
				    }
					// COMANDO: /Aceptar Invite
				  	else if (strcmp("/Aceptar Invite", cmdtext, true, 15) == 0 && strlen(cmdtext) == 15)
			    	{
			    	    if (PlayersDataOnline[playerid][InviteFaccion] != 0)
			    	    {
						    if (IsPlayerNear(playerid, PlayersDataOnline[playerid][InvitePlayer],
								 "127",
								 "128",
								 "129",
								 "El líder que te invitó se ha desconectado",
								 "El líder que te invitó no se encuentra logueado",
								 "Te separaste mucho del líder que te invitó, inténtele de nuevo"))
						    {
	                            PlayersData[playerid][Faccion] = PlayersDataOnline[playerid][InviteFaccion];
	                            PlayersData[playerid][Rango]   = GetMaxFaccionRango(PlayersDataOnline[playerid][InviteFaccion]);
								new MsgAcceptUser[MAX_TEXT_CHAT]; format(MsgAcceptUser, sizeof(MsgAcceptUser), "Metíste a tu Facción a %s.", PlayersDataOnline[playerid][NameOnlineFix]);
								new MsgAcceptMe[MAX_TEXT_CHAT]; format(MsgAcceptMe, sizeof(MsgAcceptMe), "Bienvenido a la Facción \"%s\"!", FaccionData[PlayersDataOnline[playerid][InviteFaccion]][NameFaccion]);
	                            SendInfoMessage(PlayersDataOnline[playerid][InvitePlayer], 3, "0", MsgAcceptUser);
	                            SendInfoMessage(playerid, 3, "0", MsgAcceptMe);

	                            UpdateSpawnPlayer(playerid);
	  						   	PlayersDataOnline[playerid][InvitePlayer]  = 0;
								PlayersDataOnline[playerid][InviteFaccion] = 0;
								PlayersData[playerid][HorasWork] = 0;

								SetPlayerSelectedTypeSkin(playerid, true);
								SetPlayerLockAllVehicles(playerid);

								new OnServerFactionGroup = PlayersData[playerid][Faccion];
								new FactionGroup = OnServerFactionGroup+8;

								new QUERY[384];
								mysql_format(DatabaseForo, QUERY, sizeof(QUERY), "UPDATE `forostable_members` SET additional_groups = %i WHERE member_name = '%s';", FactionGroup, PlayersDataOnline[playerid][NameOnline]);
								mysql_tquery(DatabaseForo, QUERY);

								if (PlayersData[playerid][Job] == VENDEDOR_MOVIL)
								{
								    PlayersData[playerid][Job] = NINGUNO;
								}
							}
							else
							{
							   	PlayersDataOnline[playerid][InvitePlayer]  = 0;
								PlayersDataOnline[playerid][InviteFaccion] = 0;
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "122", "No has recibido ningún invite");
						}
			    	}
        			// COMANDO: /Aceptar Renovacion
       			    else if (strcmp("/Aceptar Renovación", cmdtext, true, 19) == 0 && strlen(cmdtext) == 19 ||
							 strcmp("/Aceptar Renovacion", cmdtext, true, 19) == 0 && strlen(cmdtext) == 19)
       			    {
       			        if (PlayersDataOnline[playerid][VCoche][0] != -1)
       			        {
       			            if (IsPlayerNear(playerid, PlayersDataOnline[playerid][VCoche][0],
								 "236",
								 "237",
								 "238",
								 "El jugador que te iba a renovar el vehículo se ha desconectado",
								 "El jugador que te iba a renovar el vehículo no se ha logueado",
								 "El jugador que te iba a renovar el vehículo no se encuentra cerca de tí"))
						    {
		        				if (IsVehicleMyVehicle(playerid, PlayersDataOnline[playerid][VCoche][1]))
			   				    {
			   				        if (PlayersData[PlayersDataOnline[playerid][VCoche][0]][Faccion] == NFS && PlayersData[PlayersDataOnline[playerid][VCoche][0]][Rango] <= 2)
									{
                                        if (PlayersData[playerid][Dinero] >= coches_Todos_PreciosEx[GetVehicleModel(PlayersDataOnline[playerid][VCoche][1]) - 400] || (PlayersData[playerid][Credito] >= coches_Todos_PreciosEx[GetVehicleModel(PlayersDataOnline[playerid][VCoche][1]) - 400] && PlayersData[playerid][ModoPago]))
  				            			{
											//- Renovamos el vehiculo
											DataCars[PlayersDataOnline[playerid][VCoche][1]][Time] = MAX_VEHICLE_TIME;
                                            SaveDataVehicle(PlayersDataOnline[playerid][VCoche][1], DIR_VEHICLES);

											//- Informativo
											new String[MAX_TEXT_CHAT];
											format(String, sizeof(String), "Has renovado tu \"%s\" con %s por $%i.", coches_Todos_Nombres[GetVehicleModel(PlayersDataOnline[playerid][VCoche][1]) - 400], PlayersDataOnline[PlayersDataOnline[playerid][VCoche][0]][NameOnline], coches_Todos_PreciosEx[GetVehicleModel(PlayersDataOnline[playerid][VCoche][1]) - 400]);
						                    SendInfoMessage(playerid, 3, "0", String);

						                    format(String, sizeof(String), "Renovaste el \"%s\" de %s por $%i.", coches_Todos_Nombres[GetVehicleModel(PlayersDataOnline[playerid][VCoche][1]) - 400], PlayersDataOnline[playerid][NameOnline], coches_Todos_PreciosEx[GetVehicleModel(PlayersDataOnline[playerid][VCoche][1]) - 400]);
						                    SendInfoMessage(PlayersDataOnline[playerid][VCoche][0], 3, "0", String);

											//- Gobierno
											FaccionData[NFS][Deposito] +=  coches_Todos_PreciosEx[GetVehicleModel(PlayersDataOnline[playerid][VCoche][1]) - 400] / 3;
           									FaccionData[NFS][Deposito] -= (coches_Todos_PreciosEx[GetVehicleModel(PlayersDataOnline[playerid][VCoche][1]) - 400] / 3) / 3;
											FaccionData[GOBIERNO][Deposito] += (coches_Todos_PreciosEx[GetVehicleModel(PlayersDataOnline[playerid][VCoche][1]) - 400] / 3) / 3;

											if(PlayersData[playerid][ModoPago] && PlayersData[playerid][Credito] >= coches_Todos_PreciosEx[GetVehicleModel(PlayersDataOnline[playerid][VCoche][1]) - 400])
											{
											    PlayersData[playerid][Credito] -= coches_Todos_PreciosEx[GetVehicleModel(PlayersDataOnline[playerid][VCoche][1]) - 400];
											}
											else
											{
												GivePlayerMoneyEx(playerid, -coches_Todos_PreciosEx[GetVehicleModel(PlayersDataOnline[playerid][VCoche][1]) - 400]);
											}
											GivePlayerMoneyEx(PlayersDataOnline[playerid][VCoche][0], (coches_Todos_PreciosEx[GetVehicleModel(PlayersDataOnline[playerid][VCoche][1]) - 400] / 3) * 2);

											//- Fin
                                            PlayersDataOnline[playerid][VCoche][0] = -1;
											PlayersDataOnline[playerid][VCoche][1] = -1;
										}
										else
										{
											SendInfoMessage(playerid, 0, "242", "No tienes suficiente dinero para comprar este vehículo!");
										}
									}
									else
									{
	       								SendInfoMessage(playerid, 0, "1457", "No te encuentras al lado de vendedor!");
									}
			   				    }
			   				    else
			   				    {
									SendInfoMessage(playerid, 0, "239", "Oops, el auto que intentas renovar ya no te pertenece!");
							   	}
						    }
       			        }
       			        else
						{
							SendInfoMessage(playerid, 0, "240", "No has recibido ninguna oferta para venta de vehículo");
						}
						PlayersDataOnline[playerid][VCoche][0] = -1;
						PlayersDataOnline[playerid][VCoche][1] = -1;
       			    }
	   				// COMANDO: /Aceptar Coche
       			    else if (strcmp("/Aceptar Coche", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
       			    {
       			        if (PlayersDataOnline[playerid][VCoche][0] != -1)
       			        {
       			            if (IsPlayerNear(playerid, PlayersDataOnline[playerid][VCoche][0],
								 "236",
								 "237",
								 "238",
								 "El jugador que te iba a vender el vehículo se ha desconectado",
								 "El jugador que te iba a vender el vehículo no se ha logueado",
								 "El jugador que te iba a vender el vehículo no se encuentra cerca de tí"))
						    {
		        				if ( strlen(DataCars[PlayersDataOnline[playerid][VCoche][1]][Dueno]) == 1)
			   				    {
			   				        if (PlayersData[PlayersDataOnline[playerid][VCoche][0]][Faccion] == NFS && PlayersData[PlayersDataOnline[playerid][VCoche][0]][Rango] <= 2)
									{
                                        if (PlayersData[playerid][Dinero] >= coches_Todos_Precios[GetVehicleModel(PlayersDataOnline[playerid][VCoche][1]) - 400] || (PlayersData[playerid][Credito] >= coches_Todos_Precios[GetVehicleModel(PlayersDataOnline[playerid][VCoche][1]) - 400] && PlayersData[playerid][ModoPago]))
  				            			{
											//- Validamos las cantidades según su nivel de VIP
                                            new Total_De_Vehiculos = GetPlayerVehiclesCount(playerid);

											if(PlayersData[playerid][VIP] == 0 && Total_De_Vehiculos >= MAX_AUTOS_USER) return SendInfoMessage(playerid, 0, "0", "¡No puedes tener más de 1 vehículo sin tener una membresia!");
											if(PlayersData[playerid][VIP] == 1 && Total_De_Vehiculos >= MAX_AUTOS_VIP1) return SendInfoMessage(playerid, 0, "0", "¡No puedes tener más de 2 vehículos siendo VIP!");
											if(PlayersData[playerid][VIP] == 2 && Total_De_Vehiculos >= MAX_AUTOS_VIP2) return SendInfoMessage(playerid, 0, "0", "¡No puedes tener más de 4 vehículos siendo  Super VIP!");

											//- Procedemos a comprar el vehiculo
											format(DataCars[PlayersDataOnline[playerid][VCoche][1]][Dueno], MAX_PLAYER_NAME, "%s", PlayersDataOnline[playerid][NameOnline]);
				   				            DataCars[PlayersDataOnline[playerid][VCoche][1]][Time] = MAX_VEHICLE_TIME;
				   				            DataCars[PlayersDataOnline[playerid][VCoche][1]][Fecha_Compra] = gettime();
				   				            SaveDataVehicle(PlayersDataOnline[playerid][VCoche][1], DIR_VEHICLES);
											if(PlayersData[playerid][Car] == -1) PlayersData[playerid][Car] = PlayersDataOnline[playerid][VCoche][1];

											//- Informativos
											new MsgToComprador[MAX_TEXT_CHAT], MsgToVendedor[MAX_TEXT_CHAT];
											format(MsgToVendedor, sizeof(MsgToVendedor),
											"Has comprado al vendedor de vehículos %s, un vehículo modelo \"%s\" por $%i",
											PlayersDataOnline[PlayersDataOnline[playerid][VCoche][0]][NameOnline],
											coches_Todos_Nombres[GetVehicleModel(PlayersDataOnline[playerid][VCoche][1]) - 400],
											coches_Todos_Precios[GetVehicleModel(PlayersDataOnline[playerid][VCoche][1]) - 400]);
											format(MsgToComprador, sizeof(MsgToComprador),
											"Vendiste a %s un vehículo modelo \"%s\" por $%i, con un coste de $%i en papeles",
											PlayersDataOnline[playerid][NameOnlineFix],
											coches_Todos_Nombres[GetVehicleModel(PlayersDataOnline[playerid][VCoche][1]) - 400],
											coches_Todos_Precios[GetVehicleModel(PlayersDataOnline[playerid][VCoche][1]) - 400],
											coches_Todos_Precios[GetVehicleModel(PlayersDataOnline[playerid][VCoche][1]) - 400] / 3);
											SendInfoMessage(PlayersDataOnline[playerid][VCoche][0], 3, "0", MsgToComprador);
											SendInfoMessage(playerid, 3, "0", MsgToVendedor);

											//- Gobierno
											FaccionData[NFS][Deposito] = FaccionData[NFS][Deposito] + coches_Todos_Precios[GetVehicleModel(PlayersDataOnline[playerid][VCoche][1]) - 400] / 3;
											FaccionData[NFS][Deposito] -= (coches_Todos_Precios[GetVehicleModel(PlayersDataOnline[playerid][VCoche][1]) - 400] / 3) / 3;
											FaccionData[GOBIERNO][Deposito] += (coches_Todos_Precios[GetVehicleModel(PlayersDataOnline[playerid][VCoche][1]) - 400] / 3) / 3;

											if(PlayersData[playerid][ModoPago] && PlayersData[playerid][Credito] >= coches_Todos_Precios[GetVehicleModel(PlayersDataOnline[playerid][VCoche][1]) - 400])
											{
											    PlayersData[playerid][Credito] -= coches_Todos_Precios[GetVehicleModel(PlayersDataOnline[playerid][VCoche][1]) - 400];
											}
											else
											{
												GivePlayerMoneyEx(playerid, -coches_Todos_Precios[GetVehicleModel(PlayersDataOnline[playerid][VCoche][1]) - 400]);
											}
											GivePlayerMoneyEx(PlayersDataOnline[playerid][VCoche][0], (coches_Todos_Precios[GetVehicleModel(PlayersDataOnline[playerid][VCoche][1]) - 400] / 3) * 2);
										}
										else
										{
											SendInfoMessage(playerid, 0, "242", "No tienes suficiente dinero para comprar este vehículo!");
										}
									}
									else
									{
	       								SendInfoMessage(playerid, 0, "1457", "No te encuentras al lado de vendedor!");
									}
			   				    }
			   				    else
			   				    {
									SendInfoMessage(playerid, 0, "239", "Oops, te han comprado otro el vehículo en los ojos!");
							   	}
						    }
       			        }
       			        else
						{
							SendInfoMessage(playerid, 0, "240", "No has recibido ninguna oferta para venta de vehículo");
						}
						PlayersDataOnline[playerid][VCoche][0] = -1;
						PlayersDataOnline[playerid][VCoche][1] = -1;
       			    }
  					// COMANDO: /Aceptar Licencia
			    	else if(strfind(cmdtext,"/Aceptar Licencia",true) == 0)
			    	{
    		    	    if(PlayersDataOnline[playerid][VLicencias][0] != -1)
			    	    {
			    	        if (IsPlayerNear(playerid, PlayersDataOnline[playerid][VLicencias][0] ,
								 "236",
								 "237",
								 "238",
								 "El jugador que te iba a vender la licencia se ha desconectado",
								 "El jugador que te va  a vender la licencia no se ha logueado",
								 "El jugador que te va a vender la licencia no se encuentra cerca de tí"))
						    {
				    	        if(PlayersData[playerid][Dinero] >= PlayersDataOnline[playerid][VLicencias][2] ||
								    PlayersData[playerid][ModoPago] && PlayersData[playerid][Credito] >= PlayersDataOnline[playerid][VLicencias][2])
								{


									if(PlayersData[playerid][ModoPago] && PlayersData[playerid][Credito] >= PlayersDataOnline[playerid][VLicencias][2])
									{
										PlayersData[playerid][Credito] -= PlayersDataOnline[playerid][VLicencias][2];
         							}
         							else
         							{
         							    GivePlayerMoneyEx(playerid,-PlayersDataOnline[playerid][VLicencias][2]);
         							}

									new Depfaccion = PlayersDataOnline[playerid][VLicencias][2] * 20 / 100;
									new Ganancia = PlayersDataOnline[playerid][VLicencias][2] - Depfaccion;
									GivePlayerMoneyEx(PlayersDataOnline[playerid][VLicencias][0],Ganancia);
									new MsgToComprador[MAX_TEXT_CHAT], MsgToVendedor[MAX_TEXT_CHAT];
									format(MsgToVendedor, sizeof(MsgToVendedor),"Has adquirido una licencia de %s ortogada por %s, por un costo de $%i",LicenciasNames[PlayersDataOnline[playerid][VLicencias][1]],PlayersDataOnline[PlayersDataOnline[playerid][VLicencias][0]][NameOnlineFix],PlayersDataOnline[playerid][VLicencias][2]);
									format(MsgToComprador, sizeof(MsgToComprador),"Entregaste una licencia a %s de %s, obtuviste $%i y en gasto de trámites $%i, irá al depósito",PlayersDataOnline[playerid][NameOnlineFix],LicenciasNames[PlayersDataOnline[playerid][VLicencias][1]], Ganancia,Depfaccion);

									FaccionData[LICENCIEROS][Deposito] = FaccionData[LICENCIEROS][Deposito] + Depfaccion;
									FaccionData[LICENCIEROS][Deposito] -= Depfaccion / 3;
									FaccionData[GOBIERNO][Deposito] += Depfaccion / 3;

									SendInfoMessage(playerid, 3,"0",MsgToVendedor);
									SendInfoMessage(PlayersDataOnline[playerid][VLicencias][0], 3,"0",MsgToComprador);

									PlayersData[playerid][Licencias][PlayersDataOnline[playerid][VLicencias][1]] = true;
                                    PlayersData[playerid][LicenciasTime][PlayersDataOnline[playerid][VLicencias][1]] = Tiempo_Licencias[PlayersDataOnline[playerid][VLicencias][1]];

									new MsgMeVendedor[MAX_TEXT_CHAT];
									format(MsgMeVendedor,sizeof(MsgMeVendedor),"ha entregado una licencia de %s a %s",LicenciasNames[PlayersDataOnline[playerid][VLicencias][1]],PlayersDataOnline[playerid][NameOnlineFix]);
                                    Acciones_ROL(PlayersDataOnline[playerid][VLicencias][0], ACCION_ME, MsgMeVendedor);

  					   				PlayersDataOnline[playerid][VLicencias][0] = false;
  					   				PlayersDataOnline[playerid][VLicencias][1] = false;
       				   				PlayersDataOnline[playerid][VLicencias][2] = false;
           						}
								else
								{
								    SendInfoMessage(playerid, 0, "242", "No tienes suficiente dinero para comprar/renovar esta licencia!");
								}
							}
			    	    }
			    	    else
						{
							SendInfoMessage(playerid, 0, "122", "No has recibido ninguna oferta de licencia");
						}
			    	}
			    	else
					{
						SendInfoMessage(playerid, 0, "123", "Quizás quiso decir: /Aceptar {Invite, Coche, Contrato, Factura, Reparación, Protección, Drogas, Multa, Ganzúas}");
						SendInfoMessage(playerid, 0, "123", "Quizás quiso decir: /Aceptar {Aceíte, Servicios, Sexo, Renovación}");
					}
				}
				// COMANDO: /Proteger
			  	else if (strfind(cmdtext, "/Proteger ", true) == 0)
			    {
			        new playerid_proteger = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
			        new dinero_proteger = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
					if (PlayersData[playerid][Faccion] == ADP && PlayersData[playerid][Rango] <= 1 ||
						 PlayersData[playerid][Faccion] == ADP && PlayersData[playerid][Rango] <= 5  ||
		                 PlayersData[playerid][Faccion] == GOBIERNO && PlayersData[playerid][Rango] == 6 ||
		                 PlayersData[playerid][Faccion] == GOBIERNO && PlayersData[playerid][Rango] == 4 ||
						 PlayersData[playerid][Faccion] == ADP && PlayersData[playerid][Rango] == 5)
				    {
					 	if (IsPlayerNear(playerid, playerid_proteger,
							 "726",
							 "722",
							 "723",
							 "El jugador que desea darle protección no se encuentra conectado",
							 "El jugador que desea darle protección no se encuentra logueado",
							 "El jugador que desea darle protección no se encuentra cerca de tí"))
					    {
					        if (dinero_proteger >= 50 && dinero_proteger <= 20000)
					        {
								new MsgProteger[MAX_TEXT_CHAT];
								new MsgProtegerToPlayer[MAX_TEXT_CHAT];
								format(MsgProteger, sizeof(MsgProteger), "Ofreciste protección a %s por $%i", PlayersDataOnline[playerid_proteger][NameOnlineFix], dinero_proteger);
								format(MsgProtegerToPlayer, sizeof(MsgProtegerToPlayer), "El guardaespaldas %s quiere protegerte por $%i usa (/Aceptar Protección)", PlayersDataOnline[playerid][NameOnlineFix], dinero_proteger);

	                            SendInfoMessage(playerid, 3, "0", MsgProteger);
	                            SendInfoMessage(playerid_proteger, 3, "0", MsgProtegerToPlayer);

								PlayersDataOnline[playerid_proteger][VProteger][0] = playerid;
								PlayersDataOnline[playerid_proteger][VProteger][1] = dinero_proteger;
							}
							else
							{
								SendInfoMessage(playerid, 0, "724", "El monto mínimo del contrato de protección es de $50 y máximo $20000");
							}
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "725", "Usted no es guardaespaldas");
					}
				}
			 	// COMANDO: /Renovar Coche [ID]
 				else if (strfind(cmdtext, "/Renovar Coche ", true) == 0)
				{
					if (PlayersData[playerid][Faccion] == NFS && PlayersData[playerid][Rango] <= 2)
					{
						new MyNearCar = IsPlayerInNearVehicle(playerid);
						if (MyNearCar)
						{
							if (MyNearCar <= MAX_CAR_DUENO)
							{
								if ( strlen(DataCars[MyNearCar][Dueno]) != 1)
								{
									new PriceCar = coches_Todos_PreciosEx[GetVehicleModel(MyNearCar) - 400];
									if (PlayersData[playerid][Dinero] >= PriceCar / 3)
									{
										if (IsPlayerNear(playerid, strval(cmdtext[15]),
											 "225",
											 "226",
											 "227",
											 "El jugador que desea venderle un vehículo no se encuentra conectado",
											 "El jugador que desea venderle un vehículo no se encuentra logueado",
											 "El jugador que desea venderle un vehículo no se encuentra cerca de tí"))
										{

										    if(IsVehicleMyVehicle(strval(cmdtext[15]), MyNearCar))
										    {
												new MsgToComprador[MAX_TEXT_CHAT], MsgToVendedor[MAX_TEXT_CHAT];
												format(MsgToComprador, sizeof(MsgToComprador),
												"%s, quiere renovarte tu vehículo \"%s\" por $%i (/Aceptar Renovación)",
												PlayersDataOnline[playerid][NameOnline],
												coches_Todos_NombresEx[GetVehicleModel(MyNearCar) - 400],
												coches_Todos_PreciosEx[GetVehicleModel(MyNearCar) - 400]);
												format(MsgToVendedor, sizeof(MsgToVendedor),
												"Ofreciste renovar el vehículo modelo \"%s\", a %s por $%i",
												coches_Todos_NombresEx[GetVehicleModel(MyNearCar) - 400],
												PlayersDataOnline[strval(cmdtext[15])][NameOnlineFix],
												coches_Todos_PreciosEx[GetVehicleModel(MyNearCar) - 400]);
												SendInfoMessage(strval(cmdtext[15]), 3, "0", MsgToComprador);
												SendInfoMessage(playerid, 3, "0", MsgToVendedor);

												PlayersDataOnline[strval(cmdtext[15])][VCoche][0] = playerid;
												PlayersDataOnline[strval(cmdtext[15])][VCoche][1] = MyNearCar;
											}
											else
											{
											    SendInfoMessage(playerid, 0, "232", "Este vehículo no le pertenece a esa persona.");
											}
										}
									}
									else
									{
										SendInfoMessage(playerid, 0, "234", "No tienes suficiente dinero para tramitar los papeles de este vehículo!");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "233", "Este vehículo no tiene dueño, use /vender coche!");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "232", "Este vehículo no se puede renovar!");
							}
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "229", "No eres vendedor de vehículos!");
					}
    			}
				// COMANDO: /Vender
				else if (strfind(cmdtext, "/Vender", true) == 0)
				{
					// COMANDO: /Vender Drogas
				  	if (strfind(cmdtext, "/Vender Drogas ", true) == 0 ||
	       				strfind(cmdtext, "/Vender Drogas ", true) == 0)
				    {
						if (PlayersData[playerid][Faccion] == TRAFICANTES && PlayersData[playerid][Rango] <= 1 ||
							 PlayersData[playerid][Faccion] == TRAFICANTES && PlayersData[playerid][Rango] == 3)
					    {
					        new playerid_drogas = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
					        new cantidad_drogas = strval(cmdtext[GetPosSpace(cmdtext, 3)]);
					        new dinero_drogas = strval(cmdtext[GetPosSpace(cmdtext, 4)]);
						 	if (IsPlayerNear(playerid, playerid_drogas,
								 "756",
								 "756",
								 "757",
								 "El jugador que desea venderle drogas no se encuentra conectado",
								 "El jugador que desea venderle drogas no se encuentra logueado",
								 "El jugador que desea venderle drogas no se encuentra cerca de tí"))
						    {
						        if (cantidad_drogas >= 1 && cantidad_drogas <= 500)
						        {
						            if (PlayersData[playerid][Drogas] >= cantidad_drogas)
						            {
								        if (dinero_drogas >= 2 && dinero_drogas <= 20000)
								        {
											new MsgDrogas[MAX_TEXT_CHAT];
											new MsgDrogasToPlayer[MAX_TEXT_CHAT];
											format(MsgDrogas, sizeof(MsgDrogas), "Ofreciste %i drogas a %s por $%i", cantidad_drogas, PlayersDataOnline[playerid_drogas][NameOnlineFix], dinero_drogas);
											format(MsgDrogasToPlayer, sizeof(MsgDrogasToPlayer), "El vendedor de drogas %s quiere venderte %i drogas por $%i usa (/Aceptar Drogas)", PlayersDataOnline[playerid][NameOnlineFix], cantidad_drogas, dinero_drogas);

				                            SendInfoMessage(playerid, 3, "0", MsgDrogas);
				                            SendInfoMessage(playerid_drogas, 3, "0", MsgDrogasToPlayer);

											PlayersDataOnline[playerid_drogas][VDrogas][0] = playerid;
											PlayersDataOnline[playerid_drogas][VDrogas][1] = dinero_drogas;
											PlayersDataOnline[playerid_drogas][VDrogas][2] = cantidad_drogas;
										}
										else
										{
											SendInfoMessage(playerid, 0, "758", "El monto mínimo de venta de drogas es $2 y máximo $20000");
										}
									}
									else
									{
										SendInfoMessage(playerid, 0, "759", "No tienes esa cantidad de drogas para vender");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "760", "El mínimo de drogas a vender 1 y máximo 500");
								}
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "761", "Usted no es vendedor de drogas");
						}
					}
					// COMANDO: /Vender Peces
					else if (strcmp("/Vender Peces", cmdtext, true, 13) == 0 && strlen(cmdtext) == 13)
				    {
				        if (PlayersData[playerid][Licencias][7])
						{
			            	if (PlayersData[playerid][Job] == PESCA)
			            	{
								if (PlayersDataOnline[playerid][InPickup] == TextDrawInfo[JobsData[PESCA_PickupidVender]][PickupidTextInfo])
								{
							        if (PlayersDataOnline[playerid][JobBonus])
							        {
								        PlayersDataOnline[playerid][JobBonus] = false;

										new MsgPescador[MAX_TEXT_CHAT];
										new rnd = random(500);
										format(MsgPescador, sizeof(MsgPescador), "Has vendido los peces por $%i dolares", rnd+200);
										GivePlayerMoneyEx(playerid, rnd+200);
										SendInfoMessage(playerid, 2, "0", MsgPescador);
									}
									else
									{
										SendInfoMessage(playerid, 0, "969", "No tienes peces para vender, ve y pesca unos, lo hemos marcado en el mapa por ti");
										SetPlayerCheckpoint(playerid, 913.3119, -2019.9932, 1.7141, 3.0);
										onCheck[playerid] = true;
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "970", "No estás en el punto de venta, lo hemos marcado en el mapa por tí");
									SetPlayerCheckpoint(playerid, 3093.5291,-2200.1331,4.0927, 2);
									onCheck[playerid] = true;
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "971", "No eres Pescador, si quieres ser uno, usá /Trabajos");
							}
                        }
						else
						{
							SendInfoMessage(playerid, 0, "971", "No Tienes licencia de pesca, adquiere una antes de trabajar como pescador");
						}
				    }
					// COMANDO: /Vender Ganzúas
				  	else if (strfind(cmdtext, "/Vender Ganzúas ", true) == 0 ||
	       				strfind(cmdtext, "/Vender Ganzuas ", true) == 0)
				    {
				        new playerid_ganzuas = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
				        new dinero_ganzuas = strval(cmdtext[GetPosSpace(cmdtext, 3)]);
						if (PlayersData[playerid][Faccion] == TALLER_LS || PlayersData[playerid][Faccion] == TALLER_LS)
					    {
						 	if (IsPlayerNear(playerid, playerid_ganzuas,
								 "701",
								 "702",
								 "703",
								 "El jugador que desea venderle ganzúas no se encuentra conectado",
								 "El jugador que desea venderle ganzúas no se encuentra logueado",
								 "El jugador que desea venderle ganzúas no se encuentra cerca de tí"))
						    {
						        if (dinero_ganzuas >= 10 && dinero_ganzuas <= 20000)
						        {
									new MsgGanzuas[MAX_TEXT_CHAT];
									new MsgGanzuasToPlayer[MAX_TEXT_CHAT];
									format(MsgGanzuas, sizeof(MsgGanzuas), "Ofreciste ganzúas a %s por $%i", PlayersDataOnline[playerid_ganzuas][NameOnlineFix], dinero_ganzuas);
									format(MsgGanzuasToPlayer, sizeof(MsgGanzuasToPlayer), "El mecánico %s quiere venderte 5 ganzúas por $%i usa (/Aceptar Ganzúas)", PlayersDataOnline[playerid][NameOnlineFix], dinero_ganzuas);

		                            SendInfoMessage(playerid, 3, "0", MsgGanzuas);
		                            SendInfoMessage(playerid_ganzuas, 3, "0", MsgGanzuasToPlayer);

									PlayersDataOnline[playerid_ganzuas][VGanzuas][0] = playerid;
									PlayersDataOnline[playerid_ganzuas][VGanzuas][1] = dinero_ganzuas;
								}
								else
								{
									SendInfoMessage(playerid, 0, "704", "El monto mínimo de venta de ganzúas es $10 y máximo $20000");
								}
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "705", "Usted no es mecánico");
						}
					}
					// COMANDO: /Vender Coche
				  	else if (strfind(cmdtext, "/Vender Coche ", true) == 0)
				    {
					    if (PlayersData[playerid][Faccion] == NFS && PlayersData[playerid][Rango] <= 2)
					    {
							new MyNearCar = IsPlayerInNearVehicle(playerid);
			   				if (MyNearCar)
						    {
			   				    if (MyNearCar <= MAX_CAR_DUENO)
			   				    {
				   				    if ( strlen(DataCars[MyNearCar][Dueno]) == 1)
				   				    {
				   				        new PriceCar = coches_Todos_Precios[GetVehicleModel(MyNearCar) - 400];
				   				    	if (PlayersData[playerid][Dinero] >= PriceCar / 3  )
				   				    	{
										    if (IsPlayerNear(playerid, strval(cmdtext[14]),
												 "225",
												 "226",
												 "227",
												 "El jugador que desea venderle un vehículo no se encuentra conectado",
												 "El jugador que desea venderle un vehículo no se encuentra logueado",
												 "El jugador que desea venderle un vehículo no se encuentra cerca de tí"))
										    {

												//- Validamos las cantidades según su nivel de VIP
                                                new Total_De_Vehiculos = GetPlayerVehiclesCount(strval(cmdtext[14]));

												if(PlayersData[strval(cmdtext[14])][VIP] == 0 && Total_De_Vehiculos >= MAX_AUTOS_USER) return SendInfoMessage(playerid, 0, "0", "¡Ese jugador no puede comprar más vehículos!");
												if(PlayersData[strval(cmdtext[14])][VIP] == 1 && Total_De_Vehiculos >= MAX_AUTOS_VIP1) return SendInfoMessage(playerid, 0, "0", "¡Ese jugador no puede comprar más vehículos!");
												if(PlayersData[strval(cmdtext[14])][VIP] == 2 && Total_De_Vehiculos >= MAX_AUTOS_VIP2) return SendInfoMessage(playerid, 0, "0", "¡Ese jugador no puede comprar más vehículos!");

										        //- Mensaje
												new MsgToComprador[MAX_TEXT_CHAT], MsgToVendedor[MAX_TEXT_CHAT];
												format(MsgToComprador, sizeof(MsgToComprador),
												"%s, quiere venderte un vehículo modelo \"%s\" por $%i, Usa (/Aceptar Coche)",
												PlayersDataOnline[playerid][NameOnlineFix],
												coches_Todos_Nombres[GetVehicleModel(MyNearCar) - 400],PriceCar);
												format(MsgToVendedor, sizeof(MsgToVendedor),
												"Ofreciste vender un vehículos modelo \"%s\", a %s por $%i",
												coches_Todos_Nombres[GetVehicleModel(MyNearCar) - 400],
												PlayersDataOnline[strval(cmdtext[14])][NameOnlineFix],
												PriceCar);
												SendInfoMessage(strval(cmdtext[14]), 3, "0", MsgToComprador);
												SendInfoMessage(playerid, 3, "0", MsgToVendedor);

												PlayersDataOnline[strval(cmdtext[14])][VCoche][0] = playerid;
												PlayersDataOnline[strval(cmdtext[14])][VCoche][1] = MyNearCar;
											}
										}
										else
										{
											SendInfoMessage(playerid, 0, "234", "No tienes suficiente dinero para tramitar los papeles de este vehículo!");
										}
									}
									else
									{
										SendInfoMessage(playerid, 0, "233", "Este vehículo ya tiene dueño!");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "232", "Este vehículo no está en venta!");
								}
							}
					    }
					    else
					    {
							SendInfoMessage(playerid, 0, "229", "No eres vendedor de vehículos!");
						}
				    }
					// COMANDO: /Vender Casa
				  	else if (strcmp("/Vender Casa", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
				    {
				        if (PlayersDataOnline[playerid][InPickup] >= HouseData[1][PickupId] &&
					         PlayersDataOnline[playerid][InPickup] <= HouseData[MAX_HOUSE][PickupId])
				        {
							new HouseId = PlayersDataOnline[playerid][MyPickupWorld];
							if (IsMyHouse(playerid, HouseId))
				            {
								PlayersDataOnline[playerid][MyPickupLock] = true;
                                format(HouseData[HouseId][Dueno], MAX_PLAYER_NAME, "No");
                                HouseData[HouseId][Lock] = true;
                                GivePlayerMoneyEx(playerid, HouseData[HouseId][Price]);
                                HouseData[HouseId][Fecha_Compra] = 0;
								SaveHouse(HouseId, true);
                                GameTextForPlayer(playerid, "~B~Ha ~R~vendido su casa!", 2000, 0);
								if(HouseId == PlayersData[playerid][House]) PlayersData[playerid][House] = -1;
                                PlayersData[playerid][Alquiler] = -1;

                                for (new i = 0; i < MAX_PLAYERS; i++)
                                {
									CheckIsPlayerRentAndRemove(i, HouseId);
								}
								RemoveAllHouseFriend(HouseId);
							}
							else
							{
								SendInfoMessage(playerid, 0, "586", "Esta no es su casa");
							}
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "587", "No te encuentras en ninguna casa");
						}
					}
					// COMANDO: /Vender Negocio
				  	else if (strcmp("/Vender Negocio", cmdtext, true, 15) == 0 && strlen(cmdtext) == 15)
				    {
				        if (PlayersDataOnline[playerid][InPickup] >= NegociosData[1][PickupOutId] &&
				             PlayersDataOnline[playerid][InPickup] <= NegociosData[MAX_BIZZ][PickupOutId])
				        {
							new BizzId = PlayersDataOnline[playerid][MyPickupWorld];
				            if (IsMyBizz(playerid, BizzId, true) )
				            {
				                if (!IsBizzOnRobo(playerid, PlayersDataOnline[playerid][MyPickupWorld]))
				                {
									PlayersDataOnline[playerid][MyPickupLock] = true;
									NegociosData[BizzId][Lock] = false;
	                                format(NegociosData[BizzId][Dueno], MAX_PLAYER_NAME, "0");
	                                format(NegociosData[BizzId][Extorsion], MAX_PLAYER_NAME, "No");
	                                GivePlayerMoneyEx(playerid, NegociosData[BizzId][Precio]);
	                                DataSaveBizz(BizzId, true);
	                                GameTextForPlayer(playerid, "~B~Has ~R~vendido un negocio!", 2000, 0);
                                }
                                else
                                {
                                    SendInfoMessage(playerid, 0, "301", "Actualmente están robando tu negocio, espera e intenta luego. !Llama a la policia!");
                                }
							}
							else
							{
							    SendInfoMessage(playerid, 0, "301", "Este negocio no te pertenece");
	   						}
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "301", "No te encuentras en ningún negocio");
						}
					}
					// COMANDO: /Vender Mi Coche
				  	else if (strcmp("/Vender Mi Coche", cmdtext, true, 16) == 0 && strlen(cmdtext) == 16)
				    {
						if (IsPlayerInAnyVehicle(playerid))
						{
							if (IsVehicleMyVehicle(playerid, GetPlayerVehicleID(playerid)) )
							{
								new MyNearCar = IsPlayerInNearVehicle(playerid);
								new MsgVenderMiCoche[256];

								format(MsgVenderMiCoche, sizeof(MsgVenderMiCoche),
								"{FF0000}¿Seguro que desea vender su vehículo?\n\n\
								{FFFFFF}Modelo: %s \n\
								Precio de reventa: $%i \n\n\
								Nota: El precio de reventa es lo que usted recibirá a cambio",
								coches_Todos_Nombres[GetVehicleModel(MyNearCar) - 400],
								coches_Todos_Precios[GetVehicleModel(MyNearCar) - 400] / 2);

								ShowPlayerDialogEx(playerid, 6, DIALOG_STYLE_MSGBOX, "{00A5FF}Venta de su vehículo al estado", MsgVenderMiCoche, "Si", "No");
							}
							else
							{
								SendInfoMessage(playerid, 0, "221", "Este no es su vehículo");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "218", "Suba a su vehículo para poder venderlo");
						}
				    }
					// COMANDO: /Vender Móvil [ID] [Precio] [Número]
				  	else if (strfind(cmdtext, "/Vender Móvil ", true) == 0 ||
					  		 strfind(cmdtext, "/Vender Movil ", true) == 0)
				    {
						if (PlayersData[playerid][Job] == VENDEDOR_MOVIL)
					    {
 					        new playerSell = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
					        new priceSell  = strval(cmdtext[GetPosSpace(cmdtext, 3)]);
					        new phoneNumber = strval(cmdtext[GetPosSpace(cmdtext, 4)]);
						 	if (IsPlayerNear(playerid, playerSell,
								 "1477",
								 "1478",
								 "1479",
								 "El jugador que desea venderle un móvil no se encuentra conectado",
								 "El jugador que desea venderle un móvil no se encuentra logueado",
								 "El jugador que desea venderle un móvil no se encuentra cerca de tí"))
						    {
						        if (priceSell >= 100 && priceSell <= 20000)
						        {
						            if (phoneNumber == 0 || phoneNumber > 1000 && phoneNumber <= 99999 && CheckNumberAvalible(phoneNumber))
						            {
										new MsgMovil[MAX_TEXT_CHAT];
										new MsgMovilToPlayer[MAX_TEXT_CHAT];
										if (phoneNumber == 0)
										{
											format(MsgMovil, sizeof(MsgMovil), "Ofreciste a %s venderle un móvil con número aleatorio por $%i", PlayersDataOnline[playerSell][NameOnlineFix], priceSell);
											format(MsgMovilToPlayer, sizeof(MsgMovilToPlayer), "%s quiere venderte un móvil con número aleatorio por $%i. Use (/Aceptar Móvil)", PlayersDataOnline[playerid][NameOnlineFix], priceSell);
										}
										else
										{
											format(MsgMovil, sizeof(MsgMovil), "Ofreciste a %s venderle un móvil con número personalizado (%i) por $%i", PlayersDataOnline[playerSell][NameOnlineFix], phoneNumber, priceSell);
											format(MsgMovilToPlayer, sizeof(MsgMovilToPlayer), "%s quiere venderte un móvil con número personalizado (%i) por $%i. Use (/Aceptar Móvil)", PlayersDataOnline[playerid][NameOnlineFix], phoneNumber, priceSell);
										}

			                            SendInfoMessage(playerid, 3, "0", MsgMovil);
			                            SendInfoMessage(playerSell, 3, "0", MsgMovilToPlayer);

										PlayersDataOnline[playerSell][VPhone][0] = playerid;
										PlayersDataOnline[playerSell][VPhone][1] = priceSell;
										PlayersDataOnline[playerSell][VPhone][2] = phoneNumber;
									}
									else
									{
										SendInfoMessage(playerid, 0, "1480", "El número introducido no esta disponible, recuerde que debe estar comprendido entre 1000 y 99999");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1481", "El precio del móvil debe ser como mínimo $100 y máximo $20000");
								}
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1482", "Usted no es vendedor de móviles");
						}
				    }
				    else
				    {
						SendInfoMessage(playerid, 0, "228", "Quizás quiso decir: /Vender {Coche [ID], Negocio, Mi Coche, Casa, Peces, Móvil [ID] [$] [Número]}");
					}
				}
				// COMANDO: /Cocinar [ID_Refrigerador]
		  		else if (strfind(cmdtext, "/Cocinar ", true) == 0)
			    {
			        if(PlayersData[playerid][IsPlayerInHouse])
			        {
			            if (IsOpenRefrigerador(playerid, PlayersData[playerid][IsPlayerInHouse]))
			            {
							new RefrigeradorID = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
			                Cocinar(playerid, PlayersData[playerid][IsPlayerInHouse], RefrigeradorID);
		                }
                	}
                	else
                	{
						SendInfoMessage(playerid, 0, "1270", "No te encuentras en una casa");
					}
			    }
				// COMANDO: /Usar
				else if (strfind(cmdtext, "/Usar ", true) == 0)
				{
					// COMANDO: /Usar Bolsa [ID_Bolsa]
			  		if (strfind(cmdtext, "/Usar Bolsa ", true) == 0)
				    {
						new BolsaID = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
						EatArticle(playerid, BolsaID);
				    }
					// COMANDO: /Usar Refrigerador [ID_Refrigerador]
			  		else if (strfind(cmdtext, "/Usar Refrigerador ", true) == 0)
				    {
				        if(PlayersData[playerid][IsPlayerInHouse])
				        {
				            if (IsOpenRefrigerador(playerid, PlayersData[playerid][IsPlayerInHouse]))
				            {
								new RefrigeradorID = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
				                EatArticleRefrigerador(playerid, PlayersData[playerid][IsPlayerInHouse], RefrigeradorID);
			                }
	                	}
	                	else
	                	{
							SendInfoMessage(playerid, 0, "1267", "No te encuentras en una casa");
						}
				    }
				    else
				    {
						SendInfoMessage(playerid, 0, "1259", "Quizás quiso decir: /Usar {Bolsa [ID_Bolsa], Refrigerador [ID_Refrigerador]}");
					}
				}
				// COMANDO: /Coger
				else if (strfind(cmdtext, "/Coger ", true) == 0)
				{
				    // ALL COGER
        			// COMANDO: /Coger Artículo [ID_Refrigerador]
			  		if (strfind(cmdtext, "/Coger Artículo ", true) == 0 ||
				  		 strfind(cmdtext, "/Coger Articulo ", true) == 0)
				    {
						new HouseId = PlayersData[playerid][IsPlayerInHouse];
						if (HouseId)
						{
						    if (IsOpenRefrigerador(playerid, HouseId))
					        {
						        new RefrigeradorID = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
								RemoveArticleRefrigeradorFun(playerid, HouseId, RefrigeradorID);
							}
						}
						else
						{
								SendInfoMessage(playerid, 0, "1582", "No estás en una casa");
						}
			    	}
        			// COMANDO: /Coger Objeto
        			else if (strcmp("/Coger Objeto", cmdtext, true, 13) == 0 && strlen(cmdtext) == 13)
        			{
        			    if (IsPlayerNotFullObjects(playerid, true) != -1)
						{
	        			    if (IsPlayerInsideVehicle(playerid))
	        			    {
							    if (IsGuanteraOpen(playerid))
							    {
		        			        new VehicleIDGuantera = IsGuanteraOpen(playerid);
		        			        new SlotIDGet = -1;
									for (new i = 0; i < MAX_GUANTERA_GAVETA_SLOTS; i++)
									{
									    if (DataCars[VehicleIDGuantera][GuanteraObjects][i])
									    {
									        SlotIDGet = i;
							                break;
									    }
									}
									if (SlotIDGet != -1)
									{
									    new saveType = GetObjectByType(playerid, GetTypeObjectEx(DataCars[VehicleIDGuantera][GuanteraObjects][SlotIDGet]));
									    if (saveType == -1)
									    {
											new MsgGiveGG[MAX_TEXT_CHAT];
											new MsgGiveGGME[MAX_TEXT_CHAT];
									        format(MsgGiveGG, sizeof(MsgGiveGG), "coge %s de la guantera", ObjectsNames[GetTypeObjectEx(DataCars[VehicleIDGuantera][GuanteraObjects][SlotIDGet])]);
									        format(MsgGiveGGME, sizeof(MsgGiveGGME), "has cogido %s de la guantera", ObjectsNames[GetTypeObjectEx(DataCars[VehicleIDGuantera][GuanteraObjects][SlotIDGet])]);
									        Acciones_ROL(playerid, ACCION_ME, MsgGiveGG);
									        SendInfoMessage(playerid, 2, "0", MsgGiveGGME);

									        AddObjectHoldToPlayer(playerid, DataCars[VehicleIDGuantera][GuanteraObjects][SlotIDGet]);
									        DataCars[VehicleIDGuantera][GuanteraObjects][SlotIDGet] = false;
									    }
									    else
									    {
											SendInfoMessage(playerid, 0, "1585", "No puedes llevar más objetos de este tipo!");
									    }
									}
									else
									{
										SendInfoMessage(playerid, 0, "1586", "La guantera se encuentra vacía!");
									}
								}
	        			    }
	        			    else if (PlayersData[playerid][IsPlayerInHouse])
	        			    {
	        			        new Houseid = PlayersData[playerid][IsPlayerInHouse];
								if (IsOpenGaveta(playerid, Houseid))
								{
		        			        new SlotIDGet = -1;
									for (new i = 0; i < MAX_GUANTERA_GAVETA_SLOTS; i++)
									{
									    if (HouseData[Houseid][GavetaObjects][i])
									    {
									        SlotIDGet = i;
							                break;
									    }
									}
									if (SlotIDGet != -1)
									{
									    new saveType = GetObjectByType(playerid, GetTypeObjectEx(HouseData[Houseid][GavetaObjects][SlotIDGet]));
									    if (saveType == -1)
									    {
											new MsgGiveGG[MAX_TEXT_CHAT];
											new MsgGiveGGME[MAX_TEXT_CHAT];
									        format(MsgGiveGG, sizeof(MsgGiveGG), "coge %s de la gaveta", ObjectsNames[GetTypeObjectEx(HouseData[Houseid][GavetaObjects][SlotIDGet])]);
									        format(MsgGiveGGME, sizeof(MsgGiveGGME), "has cogido %s de la gaveta", ObjectsNames[GetTypeObjectEx(HouseData[Houseid][GavetaObjects][SlotIDGet])]);
									        Acciones_ROL(playerid, ACCION_ME, MsgGiveGG);
									        SendInfoMessage(playerid, 2, "0", MsgGiveGGME);

									        AddObjectHoldToPlayer(playerid, HouseData[Houseid][GavetaObjects][SlotIDGet]);
									        HouseData[Houseid][GavetaObjects][SlotIDGet] = false;
									    }
									    else
									    {
											SendInfoMessage(playerid, 0, "1588", "No puedes llevar más objetos de este tipo!");
									    }
								    }
								    else
								    {
										SendInfoMessage(playerid, 0, "1593", "La gaveta se encuentra vacía!");
								    }
								}
	        			    }
	        			    else
	        			    {
								SendInfoMessage(playerid, 0, "1589", "No te encuentras en la guantera del coche ni en la gaveta de la casa!");
	        			    }
        			    }
        			}
        			// COMANDO: /Coger ObjetoEx
			  		else if (strfind(cmdtext, "/Coger ObjetoEx ", true) == 0)
			    	{
						new SlotIDGet = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
        			    if (IsPlayerNotFullObjects(playerid, true) != -1)
						{
	        			    if (IsPlayerInsideVehicle(playerid))
	        			    {
							    if (IsGuanteraOpen(playerid))
							    {
									if (SlotIDGet >= 1 && SlotIDGet <= MAX_GUANTERA_GAVETA_SLOTS)
								    {
								        SlotIDGet--;
			        			        new VehicleIDGuantera = IsGuanteraOpen(playerid);
										if (DataCars[VehicleIDGuantera][GuanteraObjects][SlotIDGet])
										{
										    new saveType = GetObjectByType(playerid, GetTypeObjectEx(DataCars[VehicleIDGuantera][GuanteraObjects][SlotIDGet]));
										    if (saveType == -1)
										    {
												new MsgGiveGG[MAX_TEXT_CHAT];
												new MsgGiveGGME[MAX_TEXT_CHAT];
										        format(MsgGiveGG, sizeof(MsgGiveGG), "coge %s de la guantera", ObjectsNames[GetTypeObjectEx(DataCars[VehicleIDGuantera][GuanteraObjects][SlotIDGet])]);
										        format(MsgGiveGGME, sizeof(MsgGiveGGME), "has cogido %s de la guantera", ObjectsNames[GetTypeObjectEx(DataCars[VehicleIDGuantera][GuanteraObjects][SlotIDGet])]);
										        Acciones_ROL(playerid, ACCION_ME, MsgGiveGG);
										        SendInfoMessage(playerid, 2, "0", MsgGiveGGME);

										        AddObjectHoldToPlayer(playerid, DataCars[VehicleIDGuantera][GuanteraObjects][SlotIDGet]);
										        DataCars[VehicleIDGuantera][GuanteraObjects][SlotIDGet] = false;
										    }
										    else
										    {
												SendInfoMessage(playerid, 0, "1598", "No puedes llevar más objetos de este tipo!");
										    }
										}
										else
										{
								            new TempError[50];
								            format(TempError, sizeof(TempError), "El Slot número \"%i\" esta vacío", SlotIDGet + 1);
								            SendInfoMessage(playerid, 0, "1599", TempError);
										}
									}
									else
									{
	 									SendInfoMessage(playerid, 0, "1600", "El número del SLOT para la gaveta debe estar comprendido entre 1 y 8.");
									}
								}
	        			    }
	        			    else if (PlayersData[playerid][IsPlayerInHouse])
	        			    {
	        			        new Houseid = PlayersData[playerid][IsPlayerInHouse];
								if (IsOpenGaveta(playerid, Houseid))
								{
									if (SlotIDGet >= 1 && SlotIDGet <= MAX_GUANTERA_GAVETA_SLOTS)
								    {
								        SlotIDGet--;
										if (HouseData[Houseid][GavetaObjects][SlotIDGet])
										{
										    new saveType = GetObjectByType(playerid, GetTypeObjectEx(HouseData[Houseid][GavetaObjects][SlotIDGet]));
										    if (saveType == -1)
										    {
												new MsgGiveGG[MAX_TEXT_CHAT];
												new MsgGiveGGME[MAX_TEXT_CHAT];
										        format(MsgGiveGG, sizeof(MsgGiveGG), "coge %s de la gaveta", ObjectsNames[GetTypeObjectEx(HouseData[Houseid][GavetaObjects][SlotIDGet])]);
										        format(MsgGiveGGME, sizeof(MsgGiveGGME), "has cogido %s de la gaveta", ObjectsNames[GetTypeObjectEx(HouseData[Houseid][GavetaObjects][SlotIDGet])]);
										        Acciones_ROL(playerid, ACCION_ME, MsgGiveGG);
										        SendInfoMessage(playerid, 2, "0", MsgGiveGGME);

										        AddObjectHoldToPlayer(playerid, HouseData[Houseid][GavetaObjects][SlotIDGet]);
										        HouseData[Houseid][GavetaObjects][SlotIDGet] = false;
										    }
										    else
										    {
												SendInfoMessage(playerid, 0, "1594", "No puedes llevar más objetos de este tipo!");
										    }
										}
										else
										{
								            new TempError[50];
								            format(TempError, sizeof(TempError), "El Slot número \"%i\" esta vacío", SlotIDGet + 1);
								            SendInfoMessage(playerid, 0, "1595", TempError);
										}
									}
									else
									{
	 									SendInfoMessage(playerid, 0, "1596", "El número del SLOT para la gaveta debe estar comprendido entre 1 y 8.");
									}
								}
	        			    }
	        			    else
	        			    {
								SendInfoMessage(playerid, 0, "1597", "No te encuentras en la guantera del coche ni en la gaveta de la casa!");
	        			    }
        			    }
			    	}
				    // COGER ALMACENES
					else if (IsPlayerInAlmacen(playerid, false) != -1)
					{
						new MyNearAlmacen = IsPlayerInAlmacen(playerid, false);
						new FaccionID = PlayersData[playerid][Faccion];
						if (FaccionData[FaccionID][LockA][MyNearAlmacen])
						{
		        			// COMANDO: /Coger Chaleco
					  		if (strfind(cmdtext, "/Coger Chaleco ", true) == 0)
					    	{
					    	    new ChalecoID = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
					    	    if (ChalecoID >= 1 && ChalecoID <= 4)
					    	    {
					    	        ChalecoID--;
									if (FaccionesChaleco[FaccionID][MyNearAlmacen][ChalecoID] != 0)
									{
		                                SetPlayerArmourEx(playerid, FaccionesChaleco[FaccionID][MyNearAlmacen][ChalecoID]);
									    FaccionesChaleco[FaccionID][MyNearAlmacen][ChalecoID] = 0;
								        Acciones_ROL(playerid, ACCION_ME, "ha cogido un chaleco del almacén");
								        SendInfoMessage(playerid, 2, "0", "Has cogido un chaleco del almacén.");
									}
									else
									{
							            new TempError[50];
							            format(TempError, sizeof(TempError), "El Slot número \"%i\" esta vacío", ChalecoID + 1);
							            SendInfoMessage(playerid, 0, "1383", TempError);
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1384", "El número del SLOT para chaleco debe estar comprendido entre 1 y 4.");
								}
					    	}
		        			// COMANDO: /Coger Arma
							else if (strcmp("/Coger Arma", cmdtext, true, 11) == 0 && strlen(cmdtext) == 11)
					    	{
								new EmpySlot = -1;
								for (new i = 0; i < 10; i++)
								{
								    if ( WeaponsFaccion[FaccionID][MyNearAlmacen][i] != 0)
								    {
		                                EmpySlot = i;
										break;
								    }
								}
								if (CheckWeapondCheat(playerid) && EmpySlot != -1)
								{
									GivePlayerWeaponEx(playerid, WeaponsFaccion[FaccionID][MyNearAlmacen][EmpySlot], AmmoFaccion[FaccionID][MyNearAlmacen][EmpySlot]);

									new MsgCoger[MAX_TEXT_CHAT];
									new MsgCogerMe[MAX_TEXT_CHAT];
							        format(MsgCoger, sizeof(MsgCoger), "Has cogido un %s del almacén.", SlotNameWeapon[WeaponsFaccion[FaccionID][MyNearAlmacen][EmpySlot]]);
							        format(MsgCogerMe, sizeof(MsgCogerMe), "ha cogido %s del almacén", SlotNameWeapon[WeaponsFaccion[FaccionID][MyNearAlmacen][EmpySlot]]);
							        Acciones_ROL(playerid, ACCION_ME, MsgCogerMe);
							        SendInfoMessage(playerid, 2, "0", MsgCoger);
		                            WeaponsFaccion[FaccionID][MyNearAlmacen][EmpySlot] = 0;
		                            AmmoFaccion[FaccionID][MyNearAlmacen][EmpySlot] = 0;
								}
								else
								{
									SendInfoMessage(playerid, 0, "1385", "El almacén se encuentra vacío!");
								}
					    	}
		        			// COMANDO: /Coger ArmaEx [ID_Slot]
					  		else if (strfind(cmdtext, "/Coger ArmaEx ", true) == 0)
						    {
					    	    new SlotID = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
								if (SlotID >= 1 && SlotID <= 10)
							    {
							        SlotID--;
							        if (CheckWeapondCheat(playerid) && WeaponsFaccion[FaccionID][MyNearAlmacen][SlotID] != 0)
							        {
			            				GivePlayerWeaponEx(playerid, WeaponsFaccion[FaccionID][MyNearAlmacen][SlotID], AmmoFaccion[FaccionID][MyNearAlmacen][SlotID]);
										new MsgCoger[MAX_TEXT_CHAT];
										new MsgCogerMe[MAX_TEXT_CHAT];
								        format(MsgCoger, sizeof(MsgCoger), "Has cogido %s del almacén.", SlotNameWeapon[WeaponsFaccion[FaccionID][MyNearAlmacen][SlotID]]);
								        format(MsgCogerMe, sizeof(MsgCogerMe), "ha cogido %s del almacén", SlotNameWeapon[WeaponsFaccion[FaccionID][MyNearAlmacen][SlotID]]);
								        Acciones_ROL(playerid, ACCION_ME, MsgCogerMe);
								        SendInfoMessage(playerid, 2, "0", MsgCoger);
		                                WeaponsFaccion[FaccionID][MyNearAlmacen][SlotID] 	= 0;
		                                AmmoFaccion[FaccionID][MyNearAlmacen][SlotID] 		= 0;
									}
									else
									{
							            new TempError[50];
							            format(TempError, sizeof(TempError), "En Slot número \"%i\" esta vacío", SlotID + 1);
							            SendInfoMessage(playerid, 0, "1386", TempError);
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1387", "La ID de el Slot a coger el arma tiene que estar comprendio entre 1 y 10");
								}
						    }
		        			// COMANDO: /Coger Drogas [Cantidad]
					  		else if (strfind(cmdtext, "/Coger Drogas ", true) == 0)
						    {
					    	    new CantidadItem = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
						        if (FaccionData[FaccionID][Drogas][MyNearAlmacen] > 0 && FaccionData[FaccionID][Drogas][MyNearAlmacen] >= CantidadItem)
						        {
							        PlayersData[playerid][Drogas]  += CantidadItem;
							        FaccionData[FaccionID][Drogas][MyNearAlmacen] -= CantidadItem;

									new MsgCoger[MAX_TEXT_CHAT];
							        format(MsgCoger, sizeof(MsgCoger), "Has cogido %i drogas del almacén.", CantidadItem);
							        Acciones_ROL(playerid, ACCION_ME, "ha cogido drogas del almacén");
							        SendInfoMessage(playerid, 2, "0", MsgCoger);
								}
								else
								{
									SendInfoMessage(playerid, 0, "1388", "El almacén no tiene esa cantidad de drogas a coger!");
								}
					    	}
		        			// COMANDO: /Coger Ganzúas [Cantidad]
					  		else if (strfind(cmdtext, "/Coger Ganzúas ", true) == 0 || strfind(cmdtext, "/Coger Ganzuas ", true) == 0)
						    {
					    	    new CantidadItem = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
						        if (FaccionData[FaccionID][Ganzuas][MyNearAlmacen] > 0 && FaccionData[FaccionID][Ganzuas][MyNearAlmacen] >= CantidadItem)
						        {
							        PlayersData[playerid][Ganzuas]  += CantidadItem;
							        FaccionData[FaccionID][Ganzuas][MyNearAlmacen] -= CantidadItem;

									new MsgCoger[MAX_TEXT_CHAT];
							        format(MsgCoger, sizeof(MsgCoger), "Has cogido %i ganzúas del almacén.", CantidadItem);
							        Acciones_ROL(playerid, ACCION_ME, "ha cogido ganzúas del almacén");
							        SendInfoMessage(playerid, 2, "0", MsgCoger);
								}
								else
								{
									SendInfoMessage(playerid, 0, "1389", "El almacén no tiene esa cantidad de ganzúas a coger!");
								}
					    	}
		        			// COMANDO: /Coger Materiales [Cantidad]
					  		else if (strfind(cmdtext, "/Coger Materiales ", true) == 0)
						    {
								if (PlayersData[playerid][Faccion] == CAMIONEROS && PlayersData[playerid][Rango] <= 3 ||
									 PlayersData[playerid][Rango] <= 1)
								{
						    	    new CantidadItem = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
							        if (FaccionData[FaccionID][Almacen][MyNearAlmacen] > 0 && FaccionData[FaccionID][Almacen][MyNearAlmacen] >= CantidadItem)
							        {
						                if (IsNotFullMaterialsPlayer(playerid, CantidadItem))
							            {
									        PlayersData[playerid][Materiales] 			   += CantidadItem;
									        FaccionData[FaccionID][Almacen][MyNearAlmacen] -= CantidadItem;

											new MsgCoger[MAX_TEXT_CHAT];
											format(MsgCoger, sizeof(MsgCoger), "Has cogido %i materiales del almacén.", CantidadItem);
											Acciones_ROL(playerid, ACCION_ME, "ha cogido materiales del almacén");
									        SendInfoMessage(playerid, 2, "0", MsgCoger);
								        }
								        else
								        {
									    	SendInfoMessage(playerid, 0, "1390", "No puedes cargar esa cantidad de materiales encima! Recuerda que el máximo es 2500");
										}
									}
									else
									{
										SendInfoMessage(playerid, 0, "1391", "El almacén no tiene esa cantidad de materiales a coger!");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1392", "Usted no puede retirar materiales del almacén");
								}
					    	}
					    	/*else if (strfind(cmdtext, "/Coger Piezas ", true) == 0)
						    {
								if (PlayersData[playerid][Rango] <= 1)
								{
						    	    new CantidadItem = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
							        if (FaccionData[FaccionID][Piezas][MyNearAlmacen] > 0 && FaccionData[FaccionID][Piezas][MyNearAlmacen] >= CantidadItem)
							        {
						                if (IsNotFullPiezasPlayer(playerid, CantidadItem))
							            {
									        PlayersData[playerid][Piezas] 			   += CantidadItem;
									        FaccionData[FaccionID][Piezas][MyNearAlmacen] -= CantidadItem;

											new MsgCoger[MAX_TEXT_CHAT];
											format(MsgCoger, sizeof(MsgCoger), "Has cogido %i piezas del almacén.", CantidadItem);
											Acciones_ROL(playerid, ACCION_ME, "ha cogido piezas del almacén");
									        SendInfoMessage(playerid, 2, "0", MsgCoger);
								        }
								        else
								        {
									    	SendInfoMessage(playerid, 0, "1390", "No puedes cargar esa cantidad de materiales encima! Recuerda que el máximo es 2500");
										}
									}
									else
									{
										SendInfoMessage(playerid, 0, "1391", "El almacén no tiene esa cantidad de materiales a coger!");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1392", "Usted no puede retirar materiales del almacén");
								}
					    	}*/
		        			// COMANDO: /Coger Bombas [Cantidad]
					  		else if (strfind(cmdtext, "/Coger Bombas ", true) == 0)
						    {
					    	    new CantidadItem = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
						        if (FaccionData[FaccionID][Bombas][MyNearAlmacen] > 0 && FaccionData[FaccionID][Bombas][MyNearAlmacen] >= CantidadItem)
						        {
							        PlayersData[playerid][Bombas] 					+= CantidadItem;
							        FaccionData[FaccionID][Bombas][MyNearAlmacen] 	-= CantidadItem;

									new MsgCoger[MAX_TEXT_CHAT];
							        format(MsgCoger, sizeof(MsgCoger), "Has cogido %i bombas del almacén.", CantidadItem);
							        Acciones_ROL(playerid, ACCION_ME, "ha cogido bombas del almacén");
							        SendInfoMessage(playerid, 2, "0", MsgCoger);
								}
								else
								{
									SendInfoMessage(playerid, 0, "1393", "El almacén no tiene esa cantidad de bombas a coger!");
								}
					    	}
					    	else
					    	{
								SendInfoMessage(playerid, 0, "1394", "Quizás quiso decir: /Coger {Arma, ArmaEx [ID_SLOT], Chaleco, Drogas [Cantidad], Bombas [Cantidad], Ganzúas [Cantidad]}");
								SendInfoMessage(playerid, 0, "1394", "Quizás quiso decir: /Coger {Materiales [Cantidad], Artículo [ID_Refrigerador], Objeto, ObjetoEx [ID_SLOT]}");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1396", "El almacén se encuentra cerrado.");
						}
				    }
				    // COGER COCHES
				    else if (GetPlayerInteriorEx(playerid) == 0 || PlayersData[playerid][IsPlayerInGarage] >= 0 || !PlayersData[playerid][IsPlayerInHouse])
				    {
					    new MyMalteroOpen = IsMaleteroOpen(playerid);
					    if (MyMalteroOpen)
					    {
		        			// COMANDO: /Coger Chaleco
						  	if (strcmp("/Coger Chaleco", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
					    	{
								if (coches_Todos_Maleteros[MyMalteroOpen][7][0] != 0)
								{
	                                SetPlayerArmourEx(playerid, coches_Todos_Maleteros[MyMalteroOpen][7][0]);
								    coches_Todos_Maleteros[MyMalteroOpen][7][0] = 0;
							        Acciones_ROL(playerid, ACCION_ME, "ha cogido un chaleco del maletero");
							        SendInfoMessage(playerid, 2, "0", "Has cogido un chaleco del maletero.");
								}
								else
								{
									SendInfoMessage(playerid, 0, "263", "En el maletero no hay ningún chaleco.");
								}
					    	}
		        			// COMANDO: /Coger Arma
							else if (strcmp("/Coger Arma", cmdtext, true, 11) == 0 && strlen(cmdtext) == 11)
					    	{
								new EmpySlot = -1;
								for (new i = 0; i < 7; i++)
								{
								    if (coches_Todos_Maleteros[MyMalteroOpen][i][0] != 0)
								    {
		                                EmpySlot = i;
										break;
								    }
								}
								if (CheckWeapondCheat(playerid) && EmpySlot != -1)
								{
								    GivePlayerWeaponEx(playerid, coches_Todos_Maleteros[MyMalteroOpen][EmpySlot][0], coches_Todos_Maleteros[MyMalteroOpen][EmpySlot][1]);
									new MsgCoger[MAX_TEXT_CHAT];
									new MsgCogerMe[MAX_TEXT_CHAT];
							        format(MsgCoger, sizeof(MsgCoger), "Has cogido un %s del maletero.", SlotNameWeapon[coches_Todos_Maleteros[MyMalteroOpen][EmpySlot][0]]);
							        format(MsgCogerMe, sizeof(MsgCogerMe), "ha cogido %s del maletero", SlotNameWeapon[coches_Todos_Maleteros[MyMalteroOpen][EmpySlot][0]]);
							        Acciones_ROL(playerid, ACCION_ME, MsgCogerMe);
							        SendInfoMessage(playerid, 2, "0", MsgCoger);
		                            coches_Todos_Maleteros[MyMalteroOpen][EmpySlot][0] = 0;
		                            coches_Todos_Maleteros[MyMalteroOpen][EmpySlot][1] = 0;
								}
								else
								{
									SendInfoMessage(playerid, 0, "262", "El maletero se encuentra vacío!");
								}
					    	}
		        			// COMANDO: /Coger ArmaEx [ID_Slot]
					  		else if (strfind(cmdtext, "/Coger ArmaEx ", true) == 0)
						    {
								if (strval(cmdtext[14]) >= 1 && strval(cmdtext[14]) <= 7)
							    {
							        if (CheckWeapondCheat(playerid) && coches_Todos_Maleteros[MyMalteroOpen][strval(cmdtext[14]) - 1][0] != 0)
							        {
							            GivePlayerWeaponEx(playerid, coches_Todos_Maleteros[MyMalteroOpen][strval(cmdtext[14]) - 1][0], coches_Todos_Maleteros[MyMalteroOpen][strval(cmdtext[14]) - 1][1]);
										new MsgCoger[MAX_TEXT_CHAT];
										new MsgCogerMe[MAX_TEXT_CHAT];
								        format(MsgCoger, sizeof(MsgCoger), "Has cogido %s del maletero.", SlotNameWeapon[coches_Todos_Maleteros[MyMalteroOpen][strval(cmdtext[14]) - 1][0]]);
								        format(MsgCogerMe, sizeof(MsgCogerMe), "ha cogido %s del maletero", SlotNameWeapon[coches_Todos_Maleteros[MyMalteroOpen][strval(cmdtext[14]) - 1][0]]);
								        Acciones_ROL(playerid, ACCION_ME, MsgCogerMe);
								        SendInfoMessage(playerid, 2, "0", MsgCoger);
		                                coches_Todos_Maleteros[MyMalteroOpen][strval(cmdtext[14]) - 1][0] = 0;
		                                coches_Todos_Maleteros[MyMalteroOpen][strval(cmdtext[14]) - 1][1] = 0;
									}
									else
									{
							            new TempError[50];
							            format(TempError, sizeof(TempError), "En Slot número \"%i\" esta vacío", strval(cmdtext[14]));
							            SendInfoMessage(playerid, 0, "261", TempError);
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "260", "La ID de el Slot a coger el arma tiene que estar comprendio entre 1 y 7");
								}
						    }
		        			// COMANDO: /Coger Drogas [Cantidad]
					  		else if (strfind(cmdtext, "/Coger Drogas ", true) == 0)
						    {
						        if (coches_Todos_Maleteros[MyMalteroOpen][8][0] > 0 && coches_Todos_Maleteros[MyMalteroOpen][8][0] >= strval(cmdtext[14]))
						        {
							        PlayersData[playerid][Drogas] = PlayersData[playerid][Drogas] + strval(cmdtext[14]);
							        coches_Todos_Maleteros[MyMalteroOpen][8][0] = coches_Todos_Maleteros[MyMalteroOpen][8][0] - strval(cmdtext[14]);

									new MsgCoger[MAX_TEXT_CHAT];
							        format(MsgCoger, sizeof(MsgCoger), "Has cogido %i drogas del maletero.", strval(cmdtext[14]));
							        Acciones_ROL(playerid, ACCION_ME, "ha cogido drogas del maletero");
							        SendInfoMessage(playerid, 2, "0", MsgCoger);
								}
								else
								{
									SendInfoMessage(playerid, 0, "271", "El maletero no tiene esa cantidad de drogas a coger!");
								}
					    	}
		        			// COMANDO: /Coger Ganzúas [Cantidad]
					  		else if (strfind(cmdtext, "/Coger Ganzúas ", true) == 0 || strfind(cmdtext, "/Coger Ganzuas ", true) == 0)
						    {
						        if (coches_Todos_Maleteros[MyMalteroOpen][9][0] > 0 && coches_Todos_Maleteros[MyMalteroOpen][9][0] >= strval(cmdtext[15]))
						        {
							        PlayersData[playerid][Ganzuas] = PlayersData[playerid][Ganzuas] + strval(cmdtext[15]);
							        coches_Todos_Maleteros[MyMalteroOpen][9][0] = coches_Todos_Maleteros[MyMalteroOpen][9][0] - strval(cmdtext[15]);

									new MsgCoger[MAX_TEXT_CHAT];
							        format(MsgCoger, sizeof(MsgCoger), "Has cogido %i ganzúas del maletero.", strval(cmdtext[15]));
							        Acciones_ROL(playerid, ACCION_ME, "ha cogido ganzúas del maletero");
							        SendInfoMessage(playerid, 2, "0", MsgCoger);
								}
								else
								{
									SendInfoMessage(playerid, 0, "270", "El maletero no tiene esa cantidad de ganzúas a coger!");
								}
					    	}
		        			// COMANDO: /Coger Materiales [Cantidad]
					  		else if (strfind(cmdtext, "/Coger Materiales ", true) == 0)
						    {
						        if (coches_Todos_Maleteros[MyMalteroOpen][10][0] > 0 && coches_Todos_Maleteros[MyMalteroOpen][10][0] >= strval(cmdtext[17]))
						        {
					                if (IsNotFullMaterialsPlayer(playerid, strval(cmdtext[GetPosSpace(cmdtext, 2)])))
						            {
								        PlayersData[playerid][Materiales] += strval(cmdtext[GetPosSpace(cmdtext, 2)]);
								        coches_Todos_Maleteros[MyMalteroOpen][10][0] -= strval(cmdtext[GetPosSpace(cmdtext, 2)]);

										new MsgCoger[MAX_TEXT_CHAT];
								        format(MsgCoger, sizeof(MsgCoger), "Has cogido %i materiales del maletero.", strval(cmdtext[GetPosSpace(cmdtext, 2)]));
								        Acciones_ROL(playerid, ACCION_ME, "ha cogido materiales del maletero");
								        SendInfoMessage(playerid, 2, "0", MsgCoger);
							        }
							        else
							        {
								    	SendInfoMessage(playerid, 0, "1041", "No puedes cargar esa cantidad de materiales encima! Recuerda que el máximo es 2500");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "269", "El maletero no tiene esa cantidad de materiales a coger!");
								}
					    	}
					    	/*else if (strfind(cmdtext, "/Coger Piezas ", true) == 0)
						    {
						        if (coches_Todos_Maleteros[MyMalteroOpen][12][0] > 0 && coches_Todos_Maleteros[MyMalteroOpen][12][0] >= strval(cmdtext[13]))
						        {
					                if (IsNotFullPiezasPlayer(playerid, strval(cmdtext[GetPosSpace(cmdtext, 2)])))
						            {
								        PlayersData[playerid][Piezas] += strval(cmdtext[GetPosSpace(cmdtext, 2)]);
								        coches_Todos_Maleteros[MyMalteroOpen][12][0] -= strval(cmdtext[GetPosSpace(cmdtext, 2)]);

										new MsgCoger[MAX_TEXT_CHAT];
								        format(MsgCoger, sizeof(MsgCoger), "Has cogido %i piezas del maletero.", strval(cmdtext[GetPosSpace(cmdtext, 2)]));
								        Acciones_ROL(playerid, ACCION_ME, "ha cogido piezas del maletero");
								        SendInfoMessage(playerid, 2, "0", MsgCoger);
							        }
							        else
							        {
								    	SendInfoMessage(playerid, 0, "1041", "No puedes cargar esa cantidad de piezas encima! Recuerda que el máximo es 2500");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "269", "El maletero no tiene esa cantidad de materiales a coger!");
								}
					    	}*/
		        			// COMANDO: /Coger Bombas [Cantidad]
					  		else if (strfind(cmdtext, "/Coger Bombas ", true) == 0)
						    {
						        if (coches_Todos_Maleteros[MyMalteroOpen][11][0] > 0 && coches_Todos_Maleteros[MyMalteroOpen][11][0] >= strval(cmdtext[14]))
						        {
							        PlayersData[playerid][Bombas] = PlayersData[playerid][Bombas] + strval(cmdtext[14]);
							        coches_Todos_Maleteros[MyMalteroOpen][11][0] = coches_Todos_Maleteros[MyMalteroOpen][11][0] - strval(cmdtext[14]);

									new MsgCoger[MAX_TEXT_CHAT];
							        format(MsgCoger, sizeof(MsgCoger), "Has cogido %i bombas del maletero.", strval(cmdtext[14]));
							        Acciones_ROL(playerid, ACCION_ME, "ha cogido bombas del maletero");
							        SendInfoMessage(playerid, 2, "0", MsgCoger);
								}
								else
								{
									SendInfoMessage(playerid, 0, "268", "El maletero no tiene esa cantidad de bombas a coger!");
								}
					    	}
					    	else
					    	{
								SendInfoMessage(playerid, 0, "259", "Quizás quiso decir: /Coger {Arma, ArmaEx [ID_SLOT], Chaleco, Drogas [Cantidad], Bombas [Cantidad], Ganzúas [Cantidad]}");
								SendInfoMessage(playerid, 0, "259", "Quizás quiso decir: /Coger {Materiales [Cantidad], Artículo [ID_Refrigerador], Objeto, ObjetoEx [ID_SLOT]}");
							}
						}
				    }
				    // COGER CASAS
					else if (PlayersData[playerid][IsPlayerInHouse])
					{
						new HouseId = PlayersData[playerid][IsPlayerInHouse];
	        			// COMANDO: /Coger Chaleco
					  	if (strcmp("/Coger Chaleco", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
				    	{
							if (IsOpenCloset(playerid, HouseId))
							{
								if (HouseData[HouseId][Chaleco] != 0)
								{
									SetPlayerArmourEx(playerid, HouseData[HouseId][Chaleco]);
								    HouseData[HouseId][Chaleco] = 0;
							        Acciones_ROL(playerid, ACCION_ME, "ha cogido un chaleco del armario");
							        SendInfoMessage(playerid, 2, "0", "Has cogido un chaleco del armario.");
								}
								else
								{
									SendInfoMessage(playerid, 0, "641", "En el armario no hay ningún chaleco.");
								}
							}
				    	}
	        			// COMANDO: /Coger Arma
						else if (strcmp("/Coger Arma", cmdtext, true, 11) == 0 && strlen(cmdtext) == 11)
				    	{
							if (IsOpenCloset(playerid, HouseId))
							{
								new EmpySlot = -1;
								for (new i = 0; i < 7; i++)
								{
								    if (HouseData[HouseId][ArmarioWeapon][i] != 0)
								    {
		                                EmpySlot = i;
										break;
								    }
								}
								if (CheckWeapondCheat(playerid) && EmpySlot != -1)
								{
								    GivePlayerWeaponEx(playerid, HouseData[HouseId][ArmarioWeapon][EmpySlot], HouseData[HouseId][ArmarioAmmo][EmpySlot]);
									new MsgCoger[MAX_TEXT_CHAT];
									new MsgCogerMe[MAX_TEXT_CHAT];
							        format(MsgCoger, sizeof(MsgCoger), "Has cogido un %s del armario.", SlotNameWeapon[HouseData[HouseId][ArmarioWeapon][EmpySlot]]);
							        format(MsgCogerMe, sizeof(MsgCogerMe), "ha cogido %s del armario", SlotNameWeapon[HouseData[HouseId][ArmarioWeapon][EmpySlot]]);
							        Acciones_ROL(playerid, ACCION_ME, MsgCogerMe);
							        SendInfoMessage(playerid, 2, "0", MsgCoger);
		                            HouseData[HouseId][ArmarioWeapon][EmpySlot] = 0;
		                            HouseData[HouseId][ArmarioAmmo][EmpySlot] = 0;
								}
								else
								{
									SendInfoMessage(playerid, 0, "642", "El armario se encuentra vacío!");
								}
							}
				    	}
	        			// COMANDO: /Coger ArmaEx [ID_Slot]
				  		else if (strfind(cmdtext, "/Coger ArmaEx ", true) == 0)
					    {
							if (IsOpenCloset(playerid, HouseId))
							{
								if (strval(cmdtext[14]) >= 1 && strval(cmdtext[14]) <= 7)
							    {
							        if (CheckWeapondCheat(playerid) && HouseData[HouseId][ArmarioWeapon][strval(cmdtext[14]) - 1] != 0)
							        {
							            GivePlayerWeaponEx(playerid, HouseData[HouseId][ArmarioWeapon][strval(cmdtext[14]) - 1], HouseData[HouseId][ArmarioAmmo][strval(cmdtext[14]) - 1]);
										new MsgCoger[MAX_TEXT_CHAT];
										new MsgCogerMe[MAX_TEXT_CHAT];
								        format(MsgCoger, sizeof(MsgCoger), "Has cogido %s del armario.", SlotNameWeapon[HouseData[HouseId][ArmarioWeapon][strval(cmdtext[14]) - 1]]);
								        format(MsgCogerMe, sizeof(MsgCogerMe), "ha cogido %s del armario", SlotNameWeapon[HouseData[HouseId][ArmarioWeapon][strval(cmdtext[14]) - 1]]);
								        Acciones_ROL(playerid, ACCION_ME, MsgCogerMe);
								        SendInfoMessage(playerid, 2, "0", MsgCoger);
		                                HouseData[HouseId][ArmarioWeapon][strval(cmdtext[14]) - 1] = 0;
		                                HouseData[HouseId][ArmarioAmmo][strval(cmdtext[14]) - 1] = 0;
									}
									else
									{
							            new TempError[50];
							            format(TempError, sizeof(TempError), "En Slot número \"%i\" esta vacío", strval(cmdtext[14]));
							            SendInfoMessage(playerid, 0, "643", TempError);
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "644", "La ID de el Slot a coger el arma tiene que estar comprendio entre 1 y 7");
								}
							}
					    }
	        			// COMANDO: /Coger Drogas [Cantidad]
				  		else if (strfind(cmdtext, "/Coger Drogas ", true) == 0)
					    {
							if (IsOpenCloset(playerid, HouseId))
							{
						        if (HouseData[HouseId][Drogas] > 0 && HouseData[HouseId][Drogas] >= strval(cmdtext[14]))
						        {
							        PlayersData[playerid][Drogas] = PlayersData[playerid][Drogas] + strval(cmdtext[14]);
							        HouseData[HouseId][Drogas] = HouseData[HouseId][Drogas] - strval(cmdtext[14]);

									new MsgCoger[MAX_TEXT_CHAT];
							        format(MsgCoger, sizeof(MsgCoger), "Has cogido %i drogas del armario.", strval(cmdtext[14]));
							        Acciones_ROL(playerid, ACCION_ME, "ha cogido drogas del armario");
							        SendInfoMessage(playerid, 2, "0", MsgCoger);
								}
								else
								{
									SendInfoMessage(playerid, 0, "645", "El armario no tiene esa cantidad de drogas a coger!");
								}
							}
				    	}
	        			// COMANDO: /Coger Ganzúas [Cantidad]
				  		else if (strfind(cmdtext, "/Coger Ganzúas ", true) == 0 || strfind(cmdtext, "/Coger Ganzuas ", true) == 0)
					    {
							if (IsOpenCloset(playerid, HouseId))
							{
						        if (HouseData[HouseId][Ganzuas] > 0 && HouseData[HouseId][Ganzuas] >= strval(cmdtext[15]))
						        {
							        PlayersData[playerid][Ganzuas] = PlayersData[playerid][Ganzuas] + strval(cmdtext[15]);
							        HouseData[HouseId][Ganzuas] = HouseData[HouseId][Ganzuas] - strval(cmdtext[15]);

									new MsgCoger[MAX_TEXT_CHAT];
							        format(MsgCoger, sizeof(MsgCoger), "Has cogido %i ganzúas del armario.", strval(cmdtext[15]));
							        Acciones_ROL(playerid, ACCION_ME, "ha cogido ganzúas del armario");
							        SendInfoMessage(playerid, 2, "0", MsgCoger);
								}
								else
								{
									SendInfoMessage(playerid, 0, "646", "El armario no tiene esa cantidad de ganzúas a coger!");
								}
							}
				    	}
	        			// COMANDO: /Coger Materiales [Cantidad]
				  		else if (strfind(cmdtext, "/Coger Materiales ", true) == 0)
					    {
							if (IsOpenCloset(playerid, HouseId))
							{
						        if (HouseData[HouseId][Materiales] > 0 && HouseData[HouseId][Materiales] >= strval(cmdtext[17]))
						        {
					                if (IsNotFullMaterialsPlayer(playerid, strval(cmdtext[17])))
						            {
								        PlayersData[playerid][Materiales] = PlayersData[playerid][Materiales] + strval(cmdtext[17]);
								        HouseData[HouseId][Materiales] = HouseData[HouseId][Materiales] - strval(cmdtext[17]);

										new MsgCoger[MAX_TEXT_CHAT];
								        format(MsgCoger, sizeof(MsgCoger), "Has cogido %i materiales del armario.", strval(cmdtext[17]));
								        Acciones_ROL(playerid, ACCION_ME, "ha cogido materiales del armario");
								        SendInfoMessage(playerid, 2, "0", MsgCoger);
							        }
							        else
							        {
								    	SendInfoMessage(playerid, 0, "1042", "No puedes cargar esa cantidad de materiales encima! Recuerda que el máximo es 2500");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "647", "El armario no tiene esa cantidad de materiales a coger!");
								}
							}
				    	}
				  	/*	else if (strfind(cmdtext, "/Coger Piezas ", true) == 0)
					    {
							if (IsOpenCloset(playerid, HouseId))
							{
						        if (HouseData[HouseId][Piezas] > 0 && HouseData[HouseId][Piezas] >= strval(cmdtext[17]))
						        {
					                if (IsNotFullPiezasPlayer(playerid, strval(cmdtext[17])))
						            {
								        PlayersData[playerid][Piezas] = PlayersData[playerid][Piezas] + strval(cmdtext[17]);
								        HouseData[HouseId][Piezas] = HouseData[HouseId][Piezas] - strval(cmdtext[17]);

										new MsgCoger[MAX_TEXT_CHAT];
								        format(MsgCoger, sizeof(MsgCoger), "Has cogido %i piezas del armario.", strval(cmdtext[17]));
								        Acciones_ROL(playerid, ACCION_ME, "ha cogido piezas del armario");
								        SendInfoMessage(playerid, 2, "0", MsgCoger);
							        }
							        else
							        {
								    	SendInfoMessage(playerid, 0, "1042", "No puedes cargar esa cantidad de piezas encima! Recuerda que el máximo es 2500");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "647", "El armario no tiene esa cantidad de piezas a coger!");
								}
							}
				    	}*/
	        			// COMANDO: /Coger Bombas [Cantidad]
				  		else if (strfind(cmdtext, "/Coger Bombas ", true) == 0)
					    {
							if (IsOpenCloset(playerid, HouseId))
							{
						        if (HouseData[HouseId][Bombas] > 0 && HouseData[HouseId][Bombas] >= strval(cmdtext[14]))
						        {
							        PlayersData[playerid][Bombas] = PlayersData[playerid][Bombas] + strval(cmdtext[14]);
							        HouseData[HouseId][Bombas] = HouseData[HouseId][Bombas] - strval(cmdtext[14]);

									new MsgCoger[MAX_TEXT_CHAT];
							        format(MsgCoger, sizeof(MsgCoger), "Has cogido %i bombas del armario.", strval(cmdtext[14]));
							        Acciones_ROL(playerid, ACCION_ME, "ha cogido bombas del armario");
							        SendInfoMessage(playerid, 2, "0", MsgCoger);
								}
								else
								{
									SendInfoMessage(playerid, 0, "648", "El armario no tiene esa cantidad de bombas a coger!");
								}
							}
				    	}
				    	else
				    	{
							SendInfoMessage(playerid, 0, "649", "Quizás quiso decir: /Coger {Arma, ArmaEx [ID_SLOT], Chaleco, Drogas [Cantidad], Bombas [Cantidad], Ganzúas [Cantidad]}");
							SendInfoMessage(playerid, 0, "649", "Quizás quiso decir: /Coger {Materiales [Cantidad], Artículo [ID_Refrigerador], Objeto, ObjetoEx [ID_SLOT]}");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "628", "No estás en una casa");
					}
				}
				// COMANDO: /Dejar
				else if (strfind(cmdtext, "/Dejar ", true) == 0)
				{
				    // ALL DEJAR
					// COMANDO: /Dejar Artículo [ID_Bolsa]
			  		if (strfind(cmdtext, "/Dejar Artículo ", true) == 0 ||
				  		 strfind(cmdtext, "/Dejar Articulo ", true) == 0)
				    {
						new HouseId = PlayersData[playerid][IsPlayerInHouse];
						if (HouseId)
						{
					        if (IsOpenRefrigerador(playerid, HouseId))
					        {
						        new BolsaID = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
								if (AddArticleRefrigeradorFun(playerid, HouseId, BolsaID) == -1)
								{
									SendInfoMessage(playerid, 0, "1590", "El refrigerador se encuentra lleno!");
								}
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1591", "No estás en una casa");
						}
			    	}
				    // DEJAR ALAMACENES
					else if (IsPlayerInAlmacen(playerid, false) != -1)
					{
						new MyNearAlmacen = IsPlayerInAlmacen(playerid, false);
						new FaccionID = PlayersData[playerid][Faccion];
						if (FaccionData[FaccionID][LockA][MyNearAlmacen])
						{
		        			// COMANDO: /Dejar Chaleco
					  		if (strfind(cmdtext, "/Dejar Chaleco ", true) == 0)
					    	{
					    	    new ChalecoID = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
					    	    if (ChalecoID >= 1 && ChalecoID <= 4)
					    	    {
					    	        ChalecoID--;
									new Float:Chaleco1;
									GetPlayerArmour(playerid, Chaleco1);
									if (Chaleco1 != 0.0)
									{
										SetPlayerArmourEx(playerid, -Chaleco1);
									    FaccionesChaleco[FaccionID][MyNearAlmacen][ChalecoID] = Chaleco1;

								        Acciones_ROL(playerid, ACCION_ME, "ha dejado un chaleco en el almacén");
								        SendInfoMessage(playerid, 2, "0", "Has dejado un chaleco en el almacén.");
									}
									else
									{
										SendInfoMessage(playerid, 0, "1397", "Usted no tienes ningún chaleco puesto encima.");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1398", "El número del SLOT para chaleco debe estar comprendido entre 1 y 4.");
								}
					    	}
		        			// COMANDO: /Dejar Arma
						  	else if (strcmp("/Dejar Arma", cmdtext, true, 11) == 0 && strlen(cmdtext) == 11)
					    	{
								new MyWeapons, MyAmmo; MyWeapons = GetPlayerWeapon(playerid); MyAmmo = GetPlayerAmmo(playerid);
						        if (CheckWeapondCheat(playerid) && MyWeapons != 0)
						        {
									new EmpySlot = -1;
									for (new i = 0; i < 10; i++)
									{
									    if (WeaponsFaccion[FaccionID][MyNearAlmacen][i] == 0)
									    {
		                                    EmpySlot = i;
											break;
									    }
									}
									if (EmpySlot != -1)
									{
			                            WeaponsFaccion[FaccionID][MyNearAlmacen][EmpySlot] 	= MyWeapons;
			                            AmmoFaccion[FaccionID][MyNearAlmacen][EmpySlot] 	= MyAmmo;

			                            RemovePlayerWeapond(playerid, MyWeapons);

										new MsgDejar[MAX_TEXT_CHAT];
										new MsgDejarMe[MAX_TEXT_CHAT];
								        format(MsgDejar, sizeof(MsgDejar), "Has dejado un %s en el almacén.", SlotNameWeapon[MyWeapons]);
								        format(MsgDejarMe, sizeof(MsgDejarMe), "ha dejado %s en el almacén", SlotNameWeapon[MyWeapons]);
								        Acciones_ROL(playerid, ACCION_ME, MsgDejarMe);
								        SendInfoMessage(playerid, 2, "0", MsgDejar);
									}
									else
									{
										SendInfoMessage(playerid, 0, "1399", "El almacén se encuentra lleno!");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1400", "No tienes un arma en las manos!");
								}
					    	}
		        			// COMANDO: /Dejar ArmaEx [ID_Slot]
					  		else if (strfind(cmdtext, "/Dejar ArmaEx ", true) == 0)
						    {
								new MyWeapons, MyAmmo; MyWeapons = GetPlayerWeapon(playerid); MyAmmo = GetPlayerAmmo(playerid);
						        if (CheckWeapondCheat(playerid) && MyWeapons != 0)
						        {
									new SlotID = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
								    if (SlotID >= 1 && SlotID <= 10)
								    {
								        SlotID--;
								        if (WeaponsFaccion[FaccionID][MyNearAlmacen][SlotID] == 0)
								        {
			                                WeaponsFaccion[FaccionID][MyNearAlmacen][SlotID] = MyWeapons;
			                                AmmoFaccion[FaccionID][MyNearAlmacen][SlotID]    = MyAmmo;
			                                RemovePlayerWeapond(playerid, MyWeapons);

											new MsgDejar[MAX_TEXT_CHAT];
											new MsgDejarMe[MAX_TEXT_CHAT];
									        format(MsgDejar, sizeof(MsgDejar), "Has dejado un %s en el almacén.", SlotNameWeapon[MyWeapons]);
									        format(MsgDejarMe, sizeof(MsgDejarMe), "ha dejado %s en el almacén", SlotNameWeapon[MyWeapons]);
									        Acciones_ROL(playerid, ACCION_ME, MsgDejarMe);
									        SendInfoMessage(playerid, 2, "0", MsgDejar);
										}
										else
										{
								            new TempError[60];
								            format(TempError, sizeof(TempError), "En Slot número \"%i\" ya esta ocupado por otra arma",SlotID + 1);
								            SendInfoMessage(playerid, 0, "1401", TempError);
										}
									}
									else
									{
										SendInfoMessage(playerid, 0, "1402", "La ID de el Slot a dejar el arma tiene que estar comprendio entre 1 y 10");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1403", "No tienes un arma en las manos!");
								}
						    }
		        			// COMANDO: /Dejar Drogas [Cantidad]
					  		else if (strfind(cmdtext, "/Dejar Drogas ", true) == 0)
						    {
					    	    new CantidadItem = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
						        if (PlayersData[playerid][Drogas] > 0 && PlayersData[playerid][Drogas] >= CantidadItem)
						        {
							        FaccionData[FaccionID][Drogas][MyNearAlmacen] += CantidadItem;
							        PlayersData[playerid][Drogas] -= CantidadItem;

									new MsgDejar[MAX_TEXT_CHAT];
							        format(MsgDejar, sizeof(MsgDejar), "Has dejado %i drogas en el almacén.", CantidadItem);
							        Acciones_ROL(playerid, ACCION_ME, "ha dejado drogas en el almacén");
							        SendInfoMessage(playerid, 2, "0", MsgDejar);
								}
								else
								{
									SendInfoMessage(playerid, 0, "1404", "No tienes esa cantidad de drogas para dejar!");
								}
					    	}
	        			// COMANDO: /Dejar Ganzúas [Cantidad]
					  		else if (strfind(cmdtext, "/Dejar Ganzúas ", true) == 0 || strfind(cmdtext, "/Dejar Ganzuas ", true) == 0)
						    {
					    	    new CantidadItem = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
						        if (PlayersData[playerid][Ganzuas] > 0 && PlayersData[playerid][Ganzuas] >= CantidadItem)
						        {
							        FaccionData[FaccionID][Ganzuas][MyNearAlmacen] += CantidadItem;
							        PlayersData[playerid][Ganzuas] -= CantidadItem;

									new MsgDejar[MAX_TEXT_CHAT];
							        format(MsgDejar, sizeof(MsgDejar), "Has dejado %i ganzúas en el almacén.", CantidadItem);
							        Acciones_ROL(playerid, ACCION_ME, "ha dejado ganzúas en el almacén");
							        SendInfoMessage(playerid, 2, "0", MsgDejar);
								}
								else
								{
									SendInfoMessage(playerid, 0, "1405", "No tienes esa cantidad de ganzúas para dejar!");
								}
					    	}
		        			// COMANDO: /Dejar Materiales [Cantidad]
					  		else if (strfind(cmdtext, "/Dejar Materiales ", true) == 0)
						    {
					    	    new CantidadItem = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
						        if (PlayersData[playerid][Materiales] > 0 && PlayersData[playerid][Materiales] >= CantidadItem)
						        {
							        FaccionData[FaccionID][Almacen][MyNearAlmacen] += CantidadItem;
							        PlayersData[playerid][Materiales] -= CantidadItem;

									new MsgDejar[MAX_TEXT_CHAT];
							        format(MsgDejar, sizeof(MsgDejar), "Has dejado %i materiales en el almacén.", CantidadItem);
							        Acciones_ROL(playerid, ACCION_ME, "ha dejado materiales en el almacén");
							        SendInfoMessage(playerid, 2, "0", MsgDejar);
								}
								else
								{
									SendInfoMessage(playerid, 0, "1406", "No tienes esa cantidad de materiales para dejar!");
								}
					    	}
					    /*	else if (strfind(cmdtext, "/Dejar Piezas ", true) == 0)
						    {
					    	    new CantidadItem = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
						        if (PlayersData[playerid][Piezas] > 0 && PlayersData[playerid][Piezas] >= CantidadItem )
						        {
						            FaccionData[FaccionID][Piezas][MyNearAlmacen] += CantidadItem;
					                FaccionData[MyNearAlmacen][Piezas][0] +=  FaccionData[MyNearAlmacen][Piezas][0]+CantidadItem;
							        PlayersData[playerid][Piezas] -= CantidadItem;

									new MsgDejar[MAX_TEXT_CHAT];
							        format(MsgDejar, sizeof(MsgDejar), "Has dejado %i Piezas en el almacén.", CantidadItem);
							        Acciones_ROL(playerid, ACCION_ME, "ha dejado piezas en el almacén");
							        SendInfoMessage(playerid, 2, "0", MsgDejar);
								}
								else
								{
									SendInfoMessage(playerid, 0, "1406", "No tienes esa cantidad de piezas para dejar!");
								}
					    	}*/

		        			// COMANDO: /Dejar Bombas [Cantidad]
					  		else if (strfind(cmdtext, "/Dejar Bombas ", true) == 0)
						    {
					    	    new CantidadItem = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
						        if (PlayersData[playerid][Bombas] > 0 && PlayersData[playerid][Bombas] >= CantidadItem)
						        {
							        FaccionData[FaccionID][Bombas][MyNearAlmacen] += CantidadItem;
							        PlayersData[playerid][Bombas] -= CantidadItem;

									new MsgDejar[MAX_TEXT_CHAT];
							        format(MsgDejar, sizeof(MsgDejar), "Has dejado %i bombas en el almacén.", CantidadItem);
							        Acciones_ROL(playerid, ACCION_ME, "ha dejado bombas en el almacén");
							        SendInfoMessage(playerid, 2, "0", MsgDejar);
								}
								else
								{
									SendInfoMessage(playerid, 0, "1382", "No tienes esa cantidad de bombas para dejar!");
								}
					    	}
					    	else
					    	{
								SendInfoMessage(playerid, 0, "1381", "Quizás quiso decir: /Dejar {Arma, ArmaEx [ID_SLOT], Chaleco [ID_SLOT], Drogas [Cantidad], Ganzúas [Cantidad]}");
								SendInfoMessage(playerid, 0, "1381", "Quizás quiso decir: /Dejar {Materiales [Cantidad], Bombas [Cantidad], Artículo [ID_Bolsa]}");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "901", "El almacén se encuentra cerrado.");
						}
					}
					// DEJAR COCHES
				    else if (GetPlayerInteriorEx(playerid) == 0 || PlayersData[playerid][IsPlayerInGarage] >= 0 || !PlayersData[playerid][IsPlayerInHouse])
				    {
					    new MyMalteroOpen = IsMaleteroOpen(playerid);
					    if (MyMalteroOpen)
					    {
		        			// COMANDO: /Dejar Chaleco
						  	if (strcmp("/Dejar Chaleco", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
					    	{
							    new Float:Chaleco1;
								GetPlayerArmour(playerid, Chaleco1);
								if (Chaleco1 != 0.0)
								{
								    coches_Todos_Maleteros[MyMalteroOpen][7][0] = floatround(Chaleco1);
									SetPlayerArmourEx(playerid, -Chaleco1);
							        Acciones_ROL(playerid, ACCION_ME, "ha dejado un chaleco en el maletero");
							        SendInfoMessage(playerid, 2, "0", "Has dejado un chaleco en el maletero.");
								}
								else
								{
									SendInfoMessage(playerid, 0, "253", "Usted no tienes ningún chaleco puesto encima.");
								}
					    	}
		        			// COMANDO: /Dejar Arma
						  	else if (strcmp("/Dejar Arma", cmdtext, true, 11) == 0 && strlen(cmdtext) == 11)
					    	{
								new MyWeapons, MyAmmo; MyWeapons = GetPlayerWeapon(playerid); MyAmmo = GetPlayerAmmo(playerid);
						        if (CheckWeapondCheat(playerid) && MyWeapons != 0)
						        {
									new EmpySlot = -1;
									for (new i = 0; i < 7; i++)
									{
									    if (coches_Todos_Maleteros[MyMalteroOpen][i][0] == 0)
									    {
		                                    EmpySlot = i;
											break;
									    }
									}
									if (EmpySlot != -1)
									{
			                            coches_Todos_Maleteros[MyMalteroOpen][EmpySlot][0] = MyWeapons;
			                            coches_Todos_Maleteros[MyMalteroOpen][EmpySlot][1] = MyAmmo;
			                            RemovePlayerWeapond(playerid, MyWeapons);

										new MsgDejar[MAX_TEXT_CHAT];
										new MsgDejarMe[MAX_TEXT_CHAT];
								        format(MsgDejar, sizeof(MsgDejar), "Has dejado un %s en el maletero.", SlotNameWeapon[MyWeapons]);
								        format(MsgDejarMe, sizeof(MsgDejarMe), "ha dejado %s en el maletero", SlotNameWeapon[MyWeapons]);
								        Acciones_ROL(playerid, ACCION_ME, MsgDejarMe);
								        SendInfoMessage(playerid, 2, "0", MsgDejar);
									}
									else
									{
										SendInfoMessage(playerid, 0, "258", "El maletero se encuentra lleno!");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "256", "No tienes un arma en las manos!");
								}
					    	}
		        			// COMANDO: /Dejar ArmaEx [ID_Slot]
					  		else if (strfind(cmdtext, "/Dejar ArmaEx ", true) == 0)
						    {
								new MyWeapons, MyAmmo; MyWeapons = GetPlayerWeapon(playerid); MyAmmo = GetPlayerAmmo(playerid);
						        if (CheckWeapondCheat(playerid) && MyWeapons != 0)
						        {
								    if (strval(cmdtext[14]) >= 1 && strval(cmdtext[14]) <= 7)
								    {
								        if (coches_Todos_Maleteros[MyMalteroOpen][strval(cmdtext[14]) - 1][0] == 0)
								        {
			                                coches_Todos_Maleteros[MyMalteroOpen][strval(cmdtext[14]) - 1][0] = MyWeapons;
			                                coches_Todos_Maleteros[MyMalteroOpen][strval(cmdtext[14]) - 1][1] = MyAmmo;
			                                RemovePlayerWeapond(playerid, MyWeapons);

											new MsgDejar[MAX_TEXT_CHAT];
											new MsgDejarMe[MAX_TEXT_CHAT];
									        format(MsgDejar, sizeof(MsgDejar), "Has dejado un %s en el maletero.", SlotNameWeapon[MyWeapons]);
									        format(MsgDejarMe, sizeof(MsgDejarMe), "ha dejado %s en el maletero", SlotNameWeapon[MyWeapons]);
									        Acciones_ROL(playerid, ACCION_ME, MsgDejarMe);
									        SendInfoMessage(playerid, 2, "0", MsgDejar);
										}
										else
										{
								            new TempError[50];
								            format(TempError, sizeof(TempError), "En Slot número \"%i\" ya esta ocupado por otra arma", strval(cmdtext[14]));
								            SendInfoMessage(playerid, 0, "255", TempError);
										}
									}
									else
									{
										SendInfoMessage(playerid, 0, "254", "La ID de el Slot a dejar el arma tiene que estar comprendio entre 1 y 7");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "257", "No tienes un arma en las manos!");
								}
						    }
		        			// COMANDO: /Dejar Drogas [Cantidad]
					  		else if (strfind(cmdtext, "/Dejar Drogas ", true) == 0)
						    {
						        if (PlayersData[playerid][Drogas] > 0 && PlayersData[playerid][Drogas] >= strval(cmdtext[14]))
						        {
							        coches_Todos_Maleteros[MyMalteroOpen][8][0] = coches_Todos_Maleteros[MyMalteroOpen][8][0] + strval(cmdtext[14]);
							        PlayersData[playerid][Drogas] = PlayersData[playerid][Drogas] - strval(cmdtext[14]);

									new MsgDejar[MAX_TEXT_CHAT];
							        format(MsgDejar, sizeof(MsgDejar), "Has dejado %i drogas en el maletero.", strval(cmdtext[14]));
							        Acciones_ROL(playerid, ACCION_ME, "ha dejado drogas en el maletero");
							        SendInfoMessage(playerid, 2, "0", MsgDejar);
								}
								else
								{
									SendInfoMessage(playerid, 0, "267", "No tienes esa cantidad de drogas para dejar!");
								}
					    	}
		        			// COMANDO: /Dejar Ganzúas [Cantidad]
					  		else if (strfind(cmdtext, "/Dejar Ganzúas ", true) == 0 || strfind(cmdtext, "/Dejar Ganzuas ", true) == 0)
						    {
						        if (PlayersData[playerid][Ganzuas] > 0 && PlayersData[playerid][Ganzuas] >= strval(cmdtext[15]))
						        {
							        coches_Todos_Maleteros[MyMalteroOpen][9][0] = coches_Todos_Maleteros[MyMalteroOpen][9][0] + strval(cmdtext[15]);
							        PlayersData[playerid][Ganzuas] = PlayersData[playerid][Ganzuas] - strval(cmdtext[15]);

									new MsgDejar[MAX_TEXT_CHAT];
							        format(MsgDejar, sizeof(MsgDejar), "Has dejado %i ganzúas en el maletero.", strval(cmdtext[15]));
							        Acciones_ROL(playerid, ACCION_ME, "ha dejado ganzúas en el maletero");
							        SendInfoMessage(playerid, 2, "0", MsgDejar);
								}
								else
								{
									SendInfoMessage(playerid, 0, "266", "No tienes esa cantidad de ganzúas para dejar!");
								}
					    	}
		        			// COMANDO: /Dejar Materiales [Cantidad]
					  		else if (strfind(cmdtext, "/Dejar Materiales ", true) == 0)
						    {
						        if (PlayersData[playerid][Materiales] > 0 && PlayersData[playerid][Materiales] >= strval(cmdtext[17]))
						        {
							        coches_Todos_Maleteros[MyMalteroOpen][10][0] = coches_Todos_Maleteros[MyMalteroOpen][10][0] + strval(cmdtext[17]);
							        PlayersData[playerid][Materiales] = PlayersData[playerid][Materiales] - strval(cmdtext[17]);

									new MsgDejar[MAX_TEXT_CHAT];
							        format(MsgDejar, sizeof(MsgDejar), "Has dejado %i materiales en el maletero.", strval(cmdtext[17]));
							        Acciones_ROL(playerid, ACCION_ME, "ha dejado materiales en el maletero");
							        SendInfoMessage(playerid, 2, "0", MsgDejar);
								}
								else
								{
									SendInfoMessage(playerid, 0, "265", "No tienes esa cantidad de materiales para dejar!");
								}
					    	}
                            // COMANDO: /Dejar Piezas [Cantidad]
					  		/*else if (strfind(cmdtext, "/Dejar Piezas ", true) == 0)
						    {
						        if (PlayersData[playerid][Piezas] > 0 && PlayersData[playerid][Piezas] >= strval(cmdtext[GetPosSpace(cmdtext,2)]))
						        {
							        coches_Todos_Maleteros[MyMalteroOpen][12][0] += strval(cmdtext[GetPosSpace(cmdtext,2)]);
							        PlayersData[playerid][Piezas] -= strval(cmdtext[GetPosSpace(cmdtext,2)]);

									new MsgDejar[MAX_TEXT_CHAT];
							        format(MsgDejar, sizeof(MsgDejar), "Has dejado %i piezas en el maletero.", strval(cmdtext[GetPosSpace(cmdtext,2)]));
							        Acciones_ROL(playerid, ACCION_ME, "ha dejado piezas en el maletero");
							        SendInfoMessage(playerid, 2, "0", MsgDejar);
								}
								else
								{
									SendInfoMessage(playerid, 0, "265", "No tienes esa cantidad de piezas para dejar!");
								}
					    	}*/
		        			// COMANDO: /Dejar Bombas [Cantidad]
					  		else if (strfind(cmdtext, "/Dejar Bombas ", true) == 0)
						    {
						        if (PlayersData[playerid][Bombas] > 0 && PlayersData[playerid][Bombas] >= strval(cmdtext[14]))
						        {
							        coches_Todos_Maleteros[MyMalteroOpen][11][0] = coches_Todos_Maleteros[MyMalteroOpen][11][0] + strval(cmdtext[14]);
							        PlayersData[playerid][Bombas] = PlayersData[playerid][Bombas] - strval(cmdtext[14]);

									new MsgDejar[MAX_TEXT_CHAT];
							        format(MsgDejar, sizeof(MsgDejar), "Has dejado %i bombas en el maletero.", strval(cmdtext[14]));
							        Acciones_ROL(playerid, ACCION_ME, "ha dejado bombas en el maletero");
							        SendInfoMessage(playerid, 2, "0", MsgDejar);
								}
								else
								{
									SendInfoMessage(playerid, 0, "264", "No tienes esa cantidad de bombas para dejar!");
								}
					    	}
					    	else
					    	{
								SendInfoMessage(playerid, 0, "252", "Quizás quiso decir: /Dejar {Arma, ArmaEx [ID_SLOT], Chaleco [ID_SLOT], Drogas [Cantidad], Ganzúas [Cantidad]}");
								SendInfoMessage(playerid, 0, "252", "Quizás quiso decir: /Dejar {Materiales [Cantidad], Bombas [Cantidad], Artículo [ID_Bolsa]}");
							}
						}
					}
					// DEJAR CASA
					else if (PlayersData[playerid][IsPlayerInHouse])
					{
						new HouseId = PlayersData[playerid][IsPlayerInHouse];
						// COMANDO: /Dejar Chaleco
					  	if (strcmp("/Dejar Chaleco", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
				    	{
							if (IsOpenCloset(playerid, HouseId))
							{
							    new Float:Chaleco1;
								GetPlayerArmour(playerid, Chaleco1);
								if (Chaleco1 != 0.0)
								{
								    HouseData[HouseId][Chaleco] = PlayersData[playerid][Chaleco];
									SetPlayerArmourEx(playerid, -Chaleco1);
							        Acciones_ROL(playerid, ACCION_ME, "ha dejado un chaleco en el armario");
							        SendInfoMessage(playerid, 2, "0", "Has dejado un chaleco en el armario");
								}
								else
								{
									SendInfoMessage(playerid, 0, "640", "Usted no tienes ningún chaleco puesto encima.");
								}
							}
				    	}
	        			// COMANDO: /Dejar Arma
					  	else if (strcmp("/Dejar Arma", cmdtext, true, 11) == 0 && strlen(cmdtext) == 11)
				    	{
							if (IsOpenCloset(playerid, HouseId))
							{
								new MyWeapons, MyAmmo; MyWeapons = GetPlayerWeapon(playerid); MyAmmo = GetPlayerAmmo(playerid);
						        if (MyWeapons != 0)
						        {
									new EmpySlot = -1;
									for (new i = 0; i < 7; i++)
									{
									    if (HouseData[HouseId][ArmarioWeapon][i] == 0)
									    {
		                                    EmpySlot = i;
											break;
									    }
									}
									if (EmpySlot != -1)
									{
			                            HouseData[HouseId][ArmarioWeapon][EmpySlot] = MyWeapons;
			                            HouseData[HouseId][ArmarioAmmo][EmpySlot] 	= MyAmmo;
			                            RemovePlayerWeapond(playerid, MyWeapons);

										new MsgDejar[MAX_TEXT_CHAT];
										new MsgDejarMe[MAX_TEXT_CHAT];
								        format(MsgDejar, sizeof(MsgDejar), "Has dejado un %s en el armario", SlotNameWeapon[MyWeapons]);
								        format(MsgDejarMe, sizeof(MsgDejarMe), "ha dejado %s en el armario", SlotNameWeapon[MyWeapons]);
								        Acciones_ROL(playerid, ACCION_ME, MsgDejarMe);
								        SendInfoMessage(playerid, 2, "0", MsgDejar);
									}
									else
									{
										SendInfoMessage(playerid, 0, "639", "El armario se encuentra lleno!");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "638", "No tienes un arma en las manos!");
								}
							}
				    	}
	        			// COMANDO: /Dejar ArmaEx [ID_Slot]
				  		else if (strfind(cmdtext, "/Dejar ArmaEx ", true) == 0)
					    {
							if (IsOpenCloset(playerid, HouseId))
							{
								new MyWeapons, MyAmmo; MyWeapons = GetPlayerWeapon(playerid); MyAmmo = GetPlayerAmmo(playerid);
						        if (MyWeapons != 0)
						        {
								    if (strval(cmdtext[14]) >= 1 && strval(cmdtext[14]) <= 7)
								    {
								        if (HouseData[HouseId][ArmarioWeapon][strval(cmdtext[14]) - 1] == 0)
								        {
			                                HouseData[HouseId][ArmarioWeapon][strval(cmdtext[14]) - 1] = MyWeapons;
			                                HouseData[HouseId][ArmarioAmmo][strval(cmdtext[14]) - 1] = MyAmmo;
			                                RemovePlayerWeapond(playerid, MyWeapons);

											new MsgDejar[MAX_TEXT_CHAT];
											new MsgDejarMe[MAX_TEXT_CHAT];
									        format(MsgDejar, sizeof(MsgDejar), "Has dejado un %s en el armario", SlotNameWeapon[MyWeapons]);
									        format(MsgDejarMe, sizeof(MsgDejarMe), "ha dejado %s en el armario", SlotNameWeapon[MyWeapons]);
									        Acciones_ROL(playerid, ACCION_ME, MsgDejarMe);
									        SendInfoMessage(playerid, 2, "0", MsgDejar);
										}
										else
										{
								            new TempError[50];
								            format(TempError, sizeof(TempError), "En Slot número \"%i\" ya esta ocupado por otra arma", strval(cmdtext[14]));
								            SendInfoMessage(playerid, 0, "630", TempError);
										}
									}
									else
									{
										SendInfoMessage(playerid, 0, "637", "La ID de el Slot a dejar el arma tiene que estar comprendio entre 1 y 7");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "636", "No tienes un arma en las manos!");
								}
							}
					    }
	        			// COMANDO: /Dejar Drogas [Cantidad]
				  		else if (strfind(cmdtext, "/Dejar Drogas ", true) == 0)
					    {
							if (IsOpenCloset(playerid, HouseId))
							{
						        if (PlayersData[playerid][Drogas] > 0 && PlayersData[playerid][Drogas] >= strval(cmdtext[14]))
						        {
							        HouseData[HouseId][Drogas] = HouseData[HouseId][Drogas] + strval(cmdtext[14]);
							        PlayersData[playerid][Drogas] = PlayersData[playerid][Drogas] - strval(cmdtext[14]);

									new MsgDejar[MAX_TEXT_CHAT];
							        format(MsgDejar, sizeof(MsgDejar), "Has dejado %i drogas en el armario", strval(cmdtext[14]));
							        Acciones_ROL(playerid, ACCION_ME, "ha dejado drogas en el armario");
							        SendInfoMessage(playerid, 2, "0", MsgDejar);
								}
								else
								{
									SendInfoMessage(playerid, 0, "635", "No tienes esa cantidad de drogas para dejar!");
								}
							}
				    	}
	        			// COMANDO: /Dejar Ganzúas [Cantidad]
				  		else if (strfind(cmdtext, "/Dejar Ganzúas ", true) == 0 || strfind(cmdtext, "/Dejar Ganzuas ", true) == 0)
					    {
							if (IsOpenCloset(playerid, HouseId))
							{
						        if (PlayersData[playerid][Ganzuas] > 0 && PlayersData[playerid][Ganzuas] >= strval(cmdtext[15]))
						        {
							        HouseData[HouseId][Ganzuas] = HouseData[HouseId][Ganzuas] + strval(cmdtext[15]);
							        PlayersData[playerid][Ganzuas] = PlayersData[playerid][Ganzuas] - strval(cmdtext[15]);

									new MsgDejar[MAX_TEXT_CHAT];
							        format(MsgDejar, sizeof(MsgDejar), "Has dejado %i ganzúas en el armario.", strval(cmdtext[15]));
							        Acciones_ROL(playerid, ACCION_ME, "ha dejado ganzúas en el armario");
							        SendInfoMessage(playerid, 2, "0", MsgDejar);
								}
								else
								{
									SendInfoMessage(playerid, 0, "634", "No tienes esa cantidad de ganzúas para dejar!");
								}
							}
				    	}
	        			// COMANDO: /Dejar Materiales [Cantidad]
				  		else if (strfind(cmdtext, "/Dejar Materiales ", true) == 0)
					    {
							if (IsOpenCloset(playerid, HouseId))
							{
						        if (PlayersData[playerid][Materiales] > 0 && PlayersData[playerid][Materiales] >= strval(cmdtext[17]))
						        {
							        HouseData[HouseId][Materiales] = HouseData[HouseId][Materiales] + strval(cmdtext[17]);
							        PlayersData[playerid][Materiales] = PlayersData[playerid][Materiales] - strval(cmdtext[17]);

									new MsgDejar[MAX_TEXT_CHAT];
							        format(MsgDejar, sizeof(MsgDejar), "Has dejado %i materiales en el armario.", strval(cmdtext[17]));
							        Acciones_ROL(playerid, ACCION_ME, "ha dejado materiales en el armario");
							        SendInfoMessage(playerid, 2, "0", MsgDejar);
								}
								else
								{
									SendInfoMessage(playerid, 0, "633", "No tienes esa cantidad de materiales para dejar!");
								}
							}
				    	}
				    /*	else if (strfind(cmdtext, "/Dejar Piezas ", true) == 0)
					    {
							if (IsOpenCloset(playerid, HouseId))
							{
						        if (PlayersData[playerid][Piezas] > 0 && PlayersData[playerid][Piezas] >= strval(cmdtext[GetPosSpace(cmdtext,2)]))
						        {
							        HouseData[HouseId][Piezas] = HouseData[HouseId][Materiales] + strval(cmdtext[GetPosSpace(cmdtext,2)]);
							        PlayersData[playerid][Piezas] -= strval(cmdtext[GetPosSpace(cmdtext,2)]);

									new MsgDejar[MAX_TEXT_CHAT];
							        format(MsgDejar, sizeof(MsgDejar), "Has dejado %i piezas en el armario.", strval(cmdtext[GetPosSpace(cmdtext,2)]));
							        Acciones_ROL(playerid, ACCION_ME, "ha dejado piezas en el armario");
							        SendInfoMessage(playerid, 2, "0", MsgDejar);
								}
								else
								{
									SendInfoMessage(playerid, 0, "633", "No tienes esa cantidad de piezas para dejar!");
								}
							}
				    	}*/
	        			// COMANDO: /Dejar Bombas [Cantidad]
				  		else if (strfind(cmdtext, "/Dejar Bombas ", true) == 0)
					    {
							if (IsOpenCloset(playerid, HouseId))
							{
						        if (PlayersData[playerid][Bombas] > 0 && PlayersData[playerid][Bombas] >= strval(cmdtext[14]))
						        {
							        HouseData[HouseId][Bombas] = HouseData[HouseId][Bombas] + strval(cmdtext[14]);
							        PlayersData[playerid][Bombas] = PlayersData[playerid][Bombas] - strval(cmdtext[14]);

									new MsgDejar[MAX_TEXT_CHAT];
							        format(MsgDejar, sizeof(MsgDejar), "Has dejado %i bombas en el armario.", strval(cmdtext[14]));
							        Acciones_ROL(playerid, ACCION_ME, "ha dejado bombas en el armario");
							        SendInfoMessage(playerid, 2, "0", MsgDejar);
								}
								else
								{
									SendInfoMessage(playerid, 0, "632", "No tienes esa cantidad de bombas para dejar!");
								}
							}
				    	}
				    	else
				    	{
							SendInfoMessage(playerid, 0, "631", "Quizás quiso decir: /Dejar {Arma, ArmaEx [ID_SLOT], Chaleco [ID_SLOT], Drogas [Cantidad], Ganzúas [Cantidad]}");
							SendInfoMessage(playerid, 0, "631", "Quizás quiso decir: /Dejar {Materiales [Cantidad], Bombas [Cantidad], Artículo [ID_Bolsa]}");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "629", "No estás en una casa");
					}
				}
				// COMANDO: /SuperMercado
				else if (strcmp("/SuperMercado", cmdtext, true, 13) == 0 && strlen(cmdtext) == 13)
				{
					if (PlayersDataOnline[playerid][InPickup] == TextDrawInfo[SuperMercadosPickupid[0]][PickupidTextInfo] ||
      					 PlayersDataOnline[playerid][InPickup] == TextDrawInfo[SuperMercadosPickupid[1]][PickupidTextInfo])
					{
						ShowMenuForPlayer(SupermercadoArticulos, playerid);
						TogglePlayerControllableEx(playerid, 0);
						PlayersDataOnline[playerid][InMenu] = GetPlayerMenu(playerid);
					}
					else
					{
						SendInfoMessage(playerid, 0, "1225", "No estás en el Super Mercado!");
					}
				}
				// COMANDO: /Armario
				else if (strcmp("/Armario", cmdtext, true, 8) == 0 && strlen(cmdtext) == 8)
				{
					if (PlayersData[playerid][IsPlayerInHouse])
					{
					    new HouseId = PlayersData[playerid][IsPlayerInHouse];
					    if (IsOpenCloset(playerid, HouseId))
					    {
							new MsgsArmario[MAX_TEXT_CHAT];
		                    Acciones_ROL(playerid, ACCION_ME, "mira hacia dentro del armario");
							SendClientMessage(playerid, COLOR_MALETERO_ARMARIO_CAJA_FUERTE,
							 ">>>>>>>>>> .:Armario:. <<<<<<<<<");
							for (new i = 0; i < 7; i++)
							{
							    if (HouseData[HouseId][ArmarioWeapon][i] == 0)
							    {
							        format(MsgsArmario, sizeof(MsgsArmario), "** Armario Slot %i: Vacío", i + 1);
							    }
							    else
							    {
									format(MsgsArmario, sizeof(MsgsArmario), "** Armario Slot %i: %s ::: Munición: %i", i + 1, SlotNameWeapon[HouseData[HouseId][ArmarioWeapon][i]],
									HouseData[HouseId][ArmarioAmmo][i]);
								}
								SendClientMessage(playerid, COLOR_MALETERO_ARMARIO_CAJA_FUERTE,
								MsgsArmario);
							}
							format(MsgsArmario, sizeof(MsgsArmario), "** Armario Chaleco: %.2f | Drogas: %i | Ganzúas: %i | Materiales: %i | Bombas: %i",
							HouseData[HouseId][Chaleco],
							HouseData[HouseId][Drogas],
							HouseData[HouseId][Ganzuas],
							HouseData[HouseId][Materiales],
							HouseData[HouseId][Bombas]);

							SendClientMessage(playerid, COLOR_MALETERO_ARMARIO_CAJA_FUERTE,
							MsgsArmario);

							format(MsgsArmario, sizeof(MsgsArmario), "** Armario Piezas: %i",
							HouseData[HouseId][Piezas]);

							SendClientMessage(playerid, COLOR_MALETERO_ARMARIO_CAJA_FUERTE,
							MsgsArmario);

							// 7 - CHALECO | 8 - DROGAS | 9 - GANZÚAS | 10 - MATERIALES | 11 - BOMBAS

							new Float:player_pos_x, Float:player_pos_y, Float:player_pos_z;
							GetPlayerPos(playerid, player_pos_x, player_pos_y, player_pos_z);
							PlayerPlaySound(playerid, 1002,
							player_pos_x,
							player_pos_y,
							player_pos_z);
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "610", "No se encuentra dentro de una casa");
					}
				}
				// COMANDO: /Almacén
				else if (strcmp("/Almacén", cmdtext, true, 8) == 0 && strlen(cmdtext) == 8 ||
						 strcmp("/Almacen", cmdtext, true, 8) == 0 && strlen(cmdtext) == 8)
				{
					new MyNearAlmacen = IsPlayerInAlmacen(playerid, true);
					if (MyNearAlmacen != -1)
					{
						new FaccionID = PlayersData[playerid][Faccion];
						if (FaccionData[FaccionID][LockA][MyNearAlmacen])
						{
							new MsgsAlmacen[256];
		                    Acciones_ROL(playerid, ACCION_ME, "mira hacia dentro del almacén");
							SendClientMessage(playerid, COLOR_MALETERO_ARMARIO_CAJA_FUERTE,
							 ">>>>>>>>>> .:Almacén:. <<<<<<<<<");
							for (new i = 0; i < 10; i++)
							{
							    if (WeaponsFaccion[FaccionID][MyNearAlmacen][i] == 0)
							    {
							        format(MsgsAlmacen, sizeof(MsgsAlmacen), "** Almacén Slot %i: Vacío", i + 1);
							    }
							    else
							    {
									format(MsgsAlmacen, sizeof(MsgsAlmacen), "** Almacén Slot %i: %s ::: Munición: %i", i + 1,
									 SlotNameWeapon[WeaponsFaccion[FaccionID][MyNearAlmacen][i]],
									AmmoFaccion[FaccionID][MyNearAlmacen][i]);
								}
								SendClientMessage(playerid, COLOR_MALETERO_ARMARIO_CAJA_FUERTE,
								MsgsAlmacen);
							}
							format(MsgsAlmacen, sizeof(MsgsAlmacen), "** Almacén Chaleco 1: %.2f | Chaleco 2: %.2f | Chaleco 3: %.2f | Chaleco 4: %.2f | Drogas: %i | Ganzúas: %i | Materiales: %i | Bombas: %i",
							FaccionesChaleco[FaccionID][MyNearAlmacen][0],
							FaccionesChaleco[FaccionID][MyNearAlmacen][1],
							FaccionesChaleco[FaccionID][MyNearAlmacen][2],
							FaccionesChaleco[FaccionID][MyNearAlmacen][3],
							FaccionData[FaccionID][Drogas][MyNearAlmacen],
							FaccionData[FaccionID][Ganzuas][MyNearAlmacen],
							FaccionData[FaccionID][Almacen][MyNearAlmacen],
							FaccionData[FaccionID][Bombas][MyNearAlmacen]);

							SendClientMessage(playerid, COLOR_MALETERO_ARMARIO_CAJA_FUERTE,
							MsgsAlmacen);

							format(MsgsAlmacen, sizeof(MsgsAlmacen), "** Almacén Piezas: %i",
							FaccionData[FaccionID][Piezas][MyNearAlmacen]);

							SendClientMessage(playerid, COLOR_MALETERO_ARMARIO_CAJA_FUERTE,MsgsAlmacen);

							// 7 - CHALECO | 8 - DROGAS | 9 - GANZÚAS | 10 - MATERIALES | 11 - BOMBAS

							new Float:player_pos_x, Float:player_pos_y, Float:player_pos_z;
							GetPlayerPos(playerid, player_pos_x, player_pos_y, player_pos_z);
							PlayerPlaySound(playerid, 1002,
							player_pos_x,
							player_pos_y,
							player_pos_z);
						}
						else
						{
							SendInfoMessage(playerid, 0, "1407", "Este almacén se encuentra cerrado");
						}
					}
				}
				// COMANDO: /Refrigerador
				else if (strcmp("/Refrigerador", cmdtext, true, 13) == 0 && strlen(cmdtext) == 13)
				{
					if (PlayersData[playerid][IsPlayerInHouse])
					{
					    new Houseid = PlayersData[playerid][IsPlayerInHouse];
					    if (IsOpenRefrigerador(playerid, Houseid))
					    {
							new MsgRefrigerador[MAX_TEXT_CHAT];
		                    Acciones_ROL(playerid, ACCION_ME, "mira dentro del refrigerador");
							SendClientMessage(playerid, COLOR_MALETERO_ARMARIO_CAJA_FUERTE,
							 ">>>>>>>>>> .:Refrigerador:. <<<<<<<<<");
							for (new i = 0; i < MAX_REFRIGERADOR_SLOTS_COUNT; i++)
							{
								format(MsgRefrigerador, sizeof(MsgRefrigerador), "** Refrigerador Artículo %i: %s (%i)", i + 1, Articulos[Refrigerador[Houseid][Articulo][i]][NameA], Refrigerador[Houseid][Cantidad][i]);
								SendClientMessage(playerid, COLOR_MALETERO_ARMARIO_CAJA_FUERTE,	MsgRefrigerador);
							}
							new Float:player_pos_x, Float:player_pos_y, Float:player_pos_z;
							GetPlayerPos(playerid, player_pos_x, player_pos_y, player_pos_z);
							PlayerPlaySound(playerid, 1002,
							player_pos_x,
							player_pos_y,
							player_pos_z);
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "610", "No se encuentra dentro de una casa");
					}
				}
				// COMANDO: /Guantera
				else if (strcmp("/Guantera", cmdtext, true, 9) == 0 && strlen(cmdtext) == 9)
				{
				    if (IsPlayerInsideVehicle(playerid))
				    {
					    new MyGuanteraOpen = IsGuanteraOpen(playerid);
					    if (MyGuanteraOpen)
					    {
							new MsgsGuantera[MAX_TEXT_CHAT];

		                    Acciones_ROL(playerid, ACCION_ME, "mira hacia dentro de la guantera del vehículo");
							SendClientMessage(playerid, COLOR_MALETERO_ARMARIO_CAJA_FUERTE,
							 ">>>>>>>>>> .:Guantera:. <<<<<<<<<");
							for (new i = 0; i < MAX_GUANTERA_GAVETA_SLOTS; i++)
							{
							    if (!DataCars[MyGuanteraOpen][GuanteraObjects][i])
							    {
							        format(MsgsGuantera, sizeof(MsgsGuantera), "** Guantera Slot %i: %s",i + 1, ObjectsNames[0]);
							    }
							    else
							    {
									format(MsgsGuantera, sizeof(MsgsGuantera), "** Guantera Slot %i: %s", i + 1, ObjectsNames[GetTypeObjectEx(DataCars[MyGuanteraOpen][GuanteraObjects][i])]);
								}
								SendClientMessage(playerid, COLOR_MALETERO_ARMARIO_CAJA_FUERTE,
								MsgsGuantera);
							}
							new Float:player_pos_x, Float:player_pos_y, Float:player_pos_z;
							GetPlayerPos(playerid, player_pos_x, player_pos_y, player_pos_z);
							PlayerPlaySound(playerid, 1002,
							player_pos_x,
							player_pos_y,
							player_pos_z);
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "1592", "No se encuentra dentro del vehículo!");
					}
				}
				// COMANDO: /Gaveta
				else if (strcmp("/Gaveta", cmdtext, true, 7) == 0 && strlen(cmdtext) == 7)
				{
					if (PlayersData[playerid][IsPlayerInHouse])
					{
					    new Houseid = PlayersData[playerid][IsPlayerInHouse];
					    if (IsOpenGaveta(playerid, Houseid))
					    {
							new MsgGaveta[MAX_TEXT_CHAT];
		                    Acciones_ROL(playerid, ACCION_ME, "mira dentro de la gaveta");
							SendClientMessage(playerid, COLOR_MALETERO_ARMARIO_CAJA_FUERTE,
							 ">>>>>>>>>> .:Gaveta:. <<<<<<<<<");
							for (new i = 0; i < MAX_GUANTERA_GAVETA_SLOTS; i++)
							{
							    if (!HouseData[Houseid][GavetaObjects][i])
							    {
							        format(MsgGaveta, sizeof(MsgGaveta), "** Gaveta Slot %i: %s", i + 1, ObjectsNames[0]);
							    }
							    else
							    {
									format(MsgGaveta, sizeof(MsgGaveta), "** Gaveta Slot %i: %s", i + 1, ObjectsNames[GetTypeObjectEx(HouseData[Houseid][GavetaObjects][i])]);
								}
								SendClientMessage(playerid, COLOR_MALETERO_ARMARIO_CAJA_FUERTE,	MsgGaveta);
							}
							new Float:player_pos_x, Float:player_pos_y, Float:player_pos_z;
							GetPlayerPos(playerid, player_pos_x, player_pos_y, player_pos_z);
							PlayerPlaySound(playerid, 1002,
							player_pos_x,
							player_pos_y,
							player_pos_z);
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "1584", "No se encuentra dentro de una casa");
					}
				}
				// COMANDO: /Maletero
				else if (strcmp("/Maletero", cmdtext, true, 9) == 0 && strlen(cmdtext) == 9)
				{
					    new MyMalteroOpen = IsMaleteroOpen(playerid);
					    if (MyMalteroOpen || PlayersData[playerid][Admin] >= 6 && PlayersDataOnline[playerid][AdminOn])
					    {
							new MsgsMaletero[MAX_TEXT_CHAT];

		                    Acciones_ROL(playerid, ACCION_ME, "mira hacia dentro del maletero del vehículo");
							SendClientMessage(playerid, COLOR_MALETERO_ARMARIO_CAJA_FUERTE,
							 ">>>>>>>>>> .:Maletero:. <<<<<<<<<");
							for (new i = 0; i < 7; i++)
							{
							    if (coches_Todos_Maleteros[MyMalteroOpen][i][0] == 0)
							    {
							        format(MsgsMaletero, sizeof(MsgsMaletero), "** Maletero Slot %i: Vacío", i + 1);
							    }
							    else
							    {
									format(MsgsMaletero, sizeof(MsgsMaletero), "** Maletero Slot %i: %s ::: Munición: %i", i + 1, SlotNameWeapon[coches_Todos_Maleteros[MyMalteroOpen][i][0]],
									coches_Todos_Maleteros[MyMalteroOpen][i][1]);
								}
								SendClientMessage(playerid, COLOR_MALETERO_ARMARIO_CAJA_FUERTE,
								MsgsMaletero);
							}
							format(MsgsMaletero, sizeof(MsgsMaletero), "** Maletero Chaleco: %i | Drogas: %i | Ganzúas: %i | Materiales: %i | Bombas: %i | Piezas: %i",
							coches_Todos_Maleteros[MyMalteroOpen][7][0],
							coches_Todos_Maleteros[MyMalteroOpen][8][0],
							coches_Todos_Maleteros[MyMalteroOpen][9][0],
							coches_Todos_Maleteros[MyMalteroOpen][10][0],
							coches_Todos_Maleteros[MyMalteroOpen][11][0],
							coches_Todos_Maleteros[MyMalteroOpen][12][0]
							);
							SendClientMessage(playerid, COLOR_MALETERO_ARMARIO_CAJA_FUERTE,
							MsgsMaletero);

							// 7 - CHALECO | 8 - DROGAS | 9 - GANZÚAS | 10 - MATERIALES | 11 - BOMBAS | 12 - PIEZAS


							new Float:player_pos_x, Float:player_pos_y, Float:player_pos_z;
							GetPlayerPos(playerid, player_pos_x, player_pos_y, player_pos_z);
							PlayerPlaySound(playerid, 1002,
							player_pos_x,
							player_pos_y,
							player_pos_z);
						}
				}
				// COMANDO: /Pescar
				else if (strcmp("/Pescar", cmdtext, true, 7) == 0 && strlen(cmdtext) == 7)
				{
					if (PlayersData[playerid][Licencias][7])
					{
						if (PlayersData[playerid][Job] == PESCA)
		            	{
							if (PlayersDataOnline[playerid][InPickup] == TextDrawInfo[JobsData[PESCA_PickupidPescar]][PickupidTextInfo])
							{
							    if (!PlayersDataOnline[playerid][JobBonus])
							    {
				            	    if (IntentarAccion(playerid, "pescar algo", random(3)))
				            	    {
					            		PlayersDataOnline[playerid][JobBonus] = true;
					            		SendInfoMessage(playerid, 3, "0", "Haz capturado unos peces! Ahora puedes ir a venderlos!");

										SetPlayerCheckpoint(playerid, TextDrawInfo[JobsData[PESCA_PickupidVender]][PosInfoX], TextDrawInfo[JobsData[PESCA_PickupidVender]][PosInfoY], TextDrawInfo[JobsData[PESCA_PickupidVender]][PosInfoZ], 2.0);
										onCheck[playerid] = true;
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "964", "Ya tienes peces, vende esos antes de pescar más");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "965", "No te encuentras en la zona de pesca, la hemos marcado en el mapa por tí");
								SetPlayerCheckpoint(playerid, TextDrawInfo[JobsData[PESCA_PickupidPescar]][PosInfoX], TextDrawInfo[JobsData[PESCA_PickupidPescar]][PosInfoY], TextDrawInfo[JobsData[PESCA_PickupidPescar]][PosInfoZ], 3.0);
								onCheck[playerid] = true;
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "966", "No eres Pescador, si quieres ser uno de ellos, usá /Trabajos");
						}
                    }
					else
					{
						SendInfoMessage(playerid, 0, "966", "No Tienes licencia de pesca, adquiere una antes de trabajar como pescador");
					}
				}
								// COMANDO: /Coins
				else if (strfind(cmdtext, "/Coins", true) == 0 || strfind(cmdtext, "/Coin", true) == 0)
				{
					if (strfind(cmdtext, "/Coins ", true) == 0 || strfind(cmdtext, "/Coin ", true) == 0)
					{
					    new playeridcoin = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
					    new Coinpagar = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
						if (playeridcoin != playerid)
						{
							if (IsPlayerConnected(playeridcoin))
							{
							if(GetPlayerScore(playerid) >= 3)
					            {
							    if (Coinpagar <= 20000 && Coinpagar >= 1)
							    {
						        	new Float:Xplayerid, Float:Yplayerid, Float:Zplayerid;
									GetPlayerPos(playeridcoin, Xplayerid, Yplayerid, Zplayerid);

									if(IsPlayerInRangeOfPoint(playerid, 3.0, Xplayerid, Yplayerid, Zplayerid) && GetPlayerVirtualWorld(playeridcoin) == GetPlayerVirtualWorld(playerid))
									{
									    if ( PlayersData[playerid][cFamCoin] >= Coinpagar)
									    {
											new Mensaje_Coin[81];
											new Mensaje_CoinME[70];

											// FORMATEO DEL MENSAJE MENSAJES
											format(Mensaje_Coin, sizeof(Mensaje_Coin),
											"Has recibido %i Coin de el jugador %s."
											, Coinpagar, PlayersDataOnline[playerid][NameOnlineFix]);

											format(Mensaje_CoinME, sizeof(Mensaje_CoinME),
											"Le has dado %i Coin a el jugador %s."
											,Coinpagar, PlayersDataOnline[playeridcoin][NameOnlineFix]);

											// ENVIO DEL MENSAJE
											SendInfoMessage(playeridcoin, 3, "0", Mensaje_Coin);
											SendInfoMessage(playerid, 3, "0", Mensaje_CoinME);

											// PAGO COINS
                                            PlayersData[playeridcoin][cFamCoin] += Coinpagar;
						            		PlayersData[playerid][cFamCoin] -= Coinpagar;

											new Float:player_pos_x, Float:player_pos_y, Float:player_pos_z;
											GetPlayerPos(playeridcoin, player_pos_x, player_pos_y, player_pos_z);
											PlayerPlaySound(playeridcoin, 1002,
											player_pos_x,
											player_pos_y,
											player_pos_z);

											GetPlayerPos(playerid, player_pos_x, player_pos_y, player_pos_z);
											PlayerPlaySound(playerid, 1002,
											player_pos_x,
											player_pos_y,
											player_pos_z);
						            		return 1;
						            	}
						            	else
						            	{
											SendInfoMessage(playerid, 0, "243", "No tiene suficientes Coins para pagar.");
											return 1;
						            	}
					            	}
					            	else
									{
										SendInfoMessage(playerid, 0, "244", "El jugador que desea transferir coins no se encuentra cerca de tí.");
										return 1;
						            }
								}
								else
								{
									SendInfoMessage(playerid, 0, "245", "No puedes pagar más de 100 Coins de una sola véz ni menos de 1 Coin");
									return 1;
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "247", "Debes ser nivel 3 para utilizar el comando /Coins.");
						       	return 1;
						    }
						}
			                else
							{
								SendInfoMessage(playerid, 0, "247", "El jugador que desea transferir coins no se encuentra conectado.");
						       	return 1;
						    }
						}
						else
						{
							SendInfoMessage(playerid, 0, "248", "Has introducído tu misma ID a pagar.");
							return 1;
						}
				    }
				    else
				    {
						SendInfoMessage(playerid, 0, "249", "Recuerde al utilizar el comando /Coins o /Coin [ID] [CANTIDAD] dejar un [ESPACIO]. Ejemplo: /Coin 22 5");
						return 1; //cFamCoin
				    }
				}
				// COMANDO: /PAGAR Y /PAY
				else if (strfind(cmdtext, "/Pagar", true) == 0 || strfind(cmdtext, "/Pay", true) == 0)
				{
					if (strfind(cmdtext, "/Pagar ", true) == 0 || strfind(cmdtext, "/Pay ", true) == 0)
					{
					    new playeridpagar = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
					    new Dineropagar = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
						if (playeridpagar != playerid)
						{
							if (IsPlayerConnected(playeridpagar))
							{
							if(GetPlayerScore(playerid) >= 3)
					            {
							    if (Dineropagar <= 20000 && Dineropagar >= 1)
							    {
						        	new Float:Xplayerid, Float:Yplayerid, Float:Zplayerid;
									GetPlayerPos(playeridpagar, Xplayerid, Yplayerid, Zplayerid);

									if(IsPlayerInRangeOfPoint(playerid, 3.0, Xplayerid, Yplayerid, Zplayerid) && GetPlayerVirtualWorld(playeridpagar) == GetPlayerVirtualWorld(playerid))
									{
									    if ( PlayersData[playerid][Dinero] >= Dineropagar)
									    {
											new Mensaje_Pagar[81];
											new Mensaje_PagarME[70];

											// FORMATEO DEL MENSAJE MENSAJES
											format(Mensaje_Pagar, sizeof(Mensaje_Pagar),
											"Has recibido $%i de el jugador %s."
											, Dineropagar, PlayersDataOnline[playerid][NameOnlineFix]);

											format(Mensaje_PagarME, sizeof(Mensaje_PagarME),
											"Le has dado $%i a el jugador %s."
											,Dineropagar, PlayersDataOnline[playeridpagar][NameOnlineFix]);

										    new Texto_ME_PagarPay[70];
											format(Texto_ME_PagarPay, sizeof(Texto_ME_PagarPay), "le ha dado algo de dinero a %s", PlayersDataOnline[playeridpagar][NameOnlineFix]);
						                    Acciones_ROL(playerid, ACCION_ME, Texto_ME_PagarPay);

											// ENVIO DEL MENSAJE
											SendInfoMessage(playeridpagar, 3, "0", Mensaje_Pagar);
											SendInfoMessage(playerid, 3, "0", Mensaje_PagarME);

											// PAGO
						            		GivePlayerMoneyEx(playeridpagar, Dineropagar);
						            		GivePlayerMoneyEx(playerid, -Dineropagar);

											new Float:player_pos_x, Float:player_pos_y, Float:player_pos_z;
											GetPlayerPos(playeridpagar, player_pos_x, player_pos_y, player_pos_z);
											PlayerPlaySound(playeridpagar, 1002,
											player_pos_x,
											player_pos_y,
											player_pos_z);

											GetPlayerPos(playerid, player_pos_x, player_pos_y, player_pos_z);
											PlayerPlaySound(playerid, 1002,
											player_pos_x,
											player_pos_y,
											player_pos_z);
						            		return 1;
						            	}
						            	else
						            	{
											SendInfoMessage(playerid, 0, "243", "No tiene suficiente dinero para pagar.");
											return 1;
						            	}
					            	}
					            	else
									{
										SendInfoMessage(playerid, 0, "244", "El jugador que desea pagarle no se encuentra cerca de tí.");
										return 1;
						            }
								}
								else
								{
									SendInfoMessage(playerid, 0, "245", "No puedes pagar más de $20000 de una sola véz ni menos de $1");
									return 1;
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "247", "Debes ser nivel 3 para utilizar el comando /pagar.");
						       	return 1;
						    }
						}
			                else
							{
								SendInfoMessage(playerid, 0, "247", "El jugador que desea pagarle no se encuentra conectado.");
						       	return 1;
						    }
						}
						else
						{
							SendInfoMessage(playerid, 0, "248", "Has introducído tu misma ID a pagar.");
							return 1;
						}
				    }
				    else
				    {
						SendInfoMessage(playerid, 0, "249", "Recuerde al utilizar el comando /Pagar o /Pay [ID] [CANTIDAD] dejar un [ESPACIO]. Ejemplo: /Pay 22 500");
						return 1;
				    }
				}
				// COMANDO: /Matrícula
			  	else if (strcmp("/Matrícula", cmdtext, true, 10) == 0 && strlen(cmdtext) == 10 ||
			 	  	     strcmp("/Matricula", cmdtext, true, 10) == 0 && strlen(cmdtext) == 10)
		    	{
		    	    if (!IsPlayerInAnyVehicle(playerid))
		    	    {
						new MyNearCar = IsPlayerInNearVehicle(playerid);
						if (MyNearCar)
						{
						    if (MyNearCar <= MAX_CAR_FACCION)
						    {
								new MsgMatricula[20];
								format(MsgMatricula, sizeof(MsgMatricula), "~B~%i", DataCars[MyNearCar][Matricula]);
								GameTextForPlayer(playerid, MsgMatricula, 3000, 5);
								Acciones_ROL(playerid, ACCION_ME, "mira la matrícula del vehículo");
							}
							else
							{
								SendInfoMessage(playerid, 0, "399", "Este vehículo no tiene matrícula");
							}
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "400", "Desde dentro del vehículo no puedes ver la matrícula del vehículo");
					}
				}
				// COMANDO: /Localizar
				else if (strfind(cmdtext, "/Localizar ", true) == 0)
				{
					// COMANDO: /Localizar Coche [Matrícula]
					if (strfind(cmdtext, "/Localizar Coche ", true) == 0)
					{
					    if (PlayersData[playerid][Faccion] == ADP && PlayersData[playerid][Rango] <= 5 ||
							 PlayersData[playerid][Faccion] == ADP && PlayersData[playerid][Rango] == 4 ||
							 PlayersData[playerid][Admin] >= 8 && PlayersDataOnline[playerid][AdminOn] ||
 						     PlayersData[playerid][Faccion] == GOBIERNO && PlayersData[playerid][Rango] == 6 ||
						     PlayersData[playerid][Faccion] == GOBIERNO && PlayersData[playerid][Rango] == 4 ||
						     PlayersData[playerid][Faccion] == PODERJUDICIAL && PlayersData[playerid][Rango] == 1 ||
						     PlayersData[playerid][Faccion] == PODERJUDICIAL && PlayersData[playerid][Rango] == 2 ||
						     PlayersData[playerid][Faccion] == PODERJUDICIAL && PlayersData[playerid][Rango] == 3 ||
						     PlayersData[playerid][Faccion] == PODERJUDICIAL && PlayersData[playerid][Rango] == 4 ||
							 PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] == 4)
						{
						    if (PlayersData[playerid][Admin] >= 8 && PlayersDataOnline[playerid][AdminOn])
						    {

				        	}
				        	else
				        	{
								Acciones_ROL(playerid, ACCION_ME, "utilizá su GPS");
							}
						    for(new i = 1; i <= MAX_CAR_FACCION; i++)
						    {
						        if(DataCars[i][Matricula] == strval(cmdtext[17]))
						        {
						            if (DataCars[i][WorldLast] > 999)
						            {
						                new HouseID = GetHouseidIdByWorld(DataCars[i][WorldLast]);
						                if (HouseID)
						                {
						                    new GarageID = GetGarageIdByWorld(HouseID, DataCars[i][WorldLast]);
											if (GarageID != -1)
											{
											    if (PlayersData[playerid][Admin] >= 8 && PlayersDataOnline[playerid][AdminOn])
											    {
													new MsgDatos[MAX_TEXT_CHAT];
													format(MsgDatos, sizeof(MsgDatos), "Matrícula: %i ID: %i", DataCars[i][Matricula], i);
													SendInfoMessage(playerid, 1, MsgDatos, "Datos:");
       								        	}
       								        	else
       								        	{
	       								        	Acciones_ROL(playerid, ACCION_AME, "GPS: Vehículo localizado");
												}
                                                SetPlayerCheckpoint(playerid, Garages[HouseID][GarageID][Xg], Garages[HouseID][GarageID][Yg], Garages[HouseID][GarageID][Zg], 2.0);
       											return 1;
   											}
						                }
									}
									else if (DataCars[i][WorldLast] == 4)
									{

									    new GarageExID = IsVehicleInGarageEx(i);
									    if (GarageExID != -1)
									    {
										    if (PlayersData[playerid][Admin] >= 8 && PlayersDataOnline[playerid][AdminOn])
										    {
												new MsgDatos[MAX_TEXT_CHAT];
												format(MsgDatos, sizeof(MsgDatos), "Matrícula: %i ID: %i", DataCars[i][Matricula], i);
												SendInfoMessage(playerid, 1, MsgDatos, "Datos:");
   								        	}
   								        	else
   								        	{
       								        	Acciones_ROL(playerid, ACCION_AME, "GPS: Vehículo localizado");
											}
									        SetPlayerCheckpoint(playerid, GaragesEx[GarageExID][PosXTwoP], GaragesEx[GarageExID][PosYTwoP], GaragesEx[GarageExID][PosZTwoP], 2.0);
	   									    return 1;
									    }
									}
									else if (DataCars[i][WorldLast] == 0)
									{
									    if (PlayersData[playerid][Admin] >= 8 && PlayersDataOnline[playerid][AdminOn])
									    {
											new MsgDatos[MAX_TEXT_CHAT];
											format(MsgDatos, sizeof(MsgDatos), "Matrícula: %i ID: %i", DataCars[i][Matricula], i);
											SendInfoMessage(playerid, 1, MsgDatos, "Datos:");
							        	}
							        	else
							        	{
   								        	Acciones_ROL(playerid, ACCION_AME, "GPS: Vehículo localizado");
										}
								        new Float:VehPos[3]; GetVehiclePos(i, VehPos[0], VehPos[1], VehPos[2]);
								        SetPlayerCheckpoint(playerid, VehPos[0], VehPos[1], VehPos[2], 8.0);
							            return 1;
						            }
								    if (PlayersData[playerid][Admin] >= 8 && PlayersDataOnline[playerid][AdminOn])
								    {

						        	}
						        	else
						        	{
							        	Acciones_ROL(playerid, ACCION_AME, "GPS: Error al localizar el vehículo.");
									}
					                return 1;
								}
							}
						    if (PlayersData[playerid][Admin] >= 8 && PlayersDataOnline[playerid][AdminOn])
						    {

				        	}
				        	else
				        	{
						        Acciones_ROL(playerid, ACCION_AME, "GPS: La Matrícula insertada es inválida");
							}
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "401", "Usted no es detective");
						}
					}
					// COMANDO: /Localizar Persona [NUMERO]
					else if (strfind(cmdtext, "/Localizar Persona ", true) == 0)
					{
					    if (PlayersData[playerid][Faccion] == ADP && PlayersData[playerid][Rango] <= 2 ||
							 PlayersData[playerid][Faccion] == ADP && PlayersData[playerid][Rango] == 4 ||
							 PlayersData[playerid][Faccion] == ADP && PlayersData[playerid][Rango] == 3 ||
			                 PlayersData[playerid][Faccion] == GOBIERNO && PlayersData[playerid][Rango] == 6 ||
						     PlayersData[playerid][Faccion] == GOBIERNO && PlayersData[playerid][Rango] == 4 ||
						     PlayersData[playerid][Faccion] == PODERJUDICIAL && PlayersData[playerid][Rango] == 1 ||
						     PlayersData[playerid][Faccion] == PODERJUDICIAL && PlayersData[playerid][Rango] == 2 ||
						     PlayersData[playerid][Faccion] == PODERJUDICIAL && PlayersData[playerid][Rango] == 3 ||
						     PlayersData[playerid][Faccion] == PODERJUDICIAL && PlayersData[playerid][Rango] == 4 ||
							 PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] == 4)
						{
						    new numberphone = strval(cmdtext[19]);
							Acciones_ROL(playerid, ACCION_ME, "utilizá su GPS");
				            for (new i = 0; i < MAX_PLAYERS; i++)
				            {
								if (IsPlayerConnected(i) && PlayersDataOnline[i][State] == 3 && PlayersData[i][Phone] == numberphone && PlayersDataOnline[i][PhoneOnline] && GetPlayerInteriorEx(i) == 0)
								{
									if (PlayersDataOnline[i][InCall] == -1)
									{
								        Acciones_ROL(playerid, ACCION_AME, "GPS: Persona localizada");
								        new Float:PersonPos[3]; GetPlayerPos(i, PersonPos[0], PersonPos[1], PersonPos[2]);
								        SetPlayerCheckpoint(playerid, PersonPos[0], PersonPos[1], PersonPos[2], 3.0);
							            return 1;
						            }
								}
							}
					        Acciones_ROL(playerid, ACCION_AME, "GPS: Está persona está fuera del alcanze en el GPS");
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "402", "Usted no es detective");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "403", "Quizás quiso decir: /Localizar {Coche [Matrícula], Persona [ID]}");
					}
				}
				// COMANDO: /Prueba [ID]
		  		else if (strfind(cmdtext, "/Prueba ", true) == 0)
			    {
					if (PlayersData[playerid][Faccion] == LICENCIEROS && PlayersData[playerid][Rango] == 0 ||
						 PlayersData[playerid][Faccion] == LICENCIEROS && PlayersData[playerid][Rango] == 1 ||
						 PlayersData[playerid][Faccion] == LICENCIEROS && PlayersData[playerid][Rango] == 2 ||
						 PlayersData[playerid][Faccion] == LICENCIEROS && PlayersData[playerid][Rango] == 4)
				    {
						new IdTest = strval(cmdtext[8]);
					    if (IsPlayerNear(playerid, IdTest,
								 "1143",
								 "1144",
								 "1145",
								 "El jugador que le deseas hacer una prueba de Coche no se encuentra conectado",
								 "El jugador que le deseas hacer una prueba de Coche no se ha logueado",
								 "El jugador que le deseas hacer una prueba de Coche no se encuentra cerca de tí"))
					    {
							new MyNearCar = IsPlayerInNearVehicle(playerid);
							if (MyNearCar)
							{
						        if (!PlayersData[IdTest][Licencias][coches_Todos_Type[GetVehicleModel(MyNearCar) - 400]])
						        {
								    if (IsVehicleMyFaccion(playerid, MyNearCar))
								    {
								        if (!DataCars[MyNearCar][Lock])
								        {
	                                        new Empty = true;
											for (new i = 0; i < MAX_PLAYERS; i++)
											{
											    if (IsPlayerInAnyVehicle(i) && GetPlayerVehicleID(i) == MyNearCar && GetPlayerVehicleSeat(i) == 0)
											    {
	                                                Empty = false;
													break;
												}
											}
											if (Empty)
											{
											    new MsgToPrueba[MAX_TEXT_CHAT];
											    new MsgToPruebaYou[MAX_TEXT_CHAT];
											    new MsgToPruebaMe[MAX_TEXT_CHAT];
										        format(MsgToPrueba, sizeof(MsgToPrueba), "Le has dado una licencia de pruebas a %s", PlayersDataOnline[IdTest][NameOnlineFix]);
										        format(MsgToPruebaYou, sizeof(MsgToPruebaYou), "%s te ha dado una licencia de pruebas.", PlayersDataOnline[playerid][NameOnlineFix]);
										        format(MsgToPruebaMe, sizeof(MsgToPruebaMe), "le da una licencia de pruebas a %s", PlayersDataOnline[IdTest][NameOnlineFix]);
										        Acciones_ROL(playerid, ACCION_ME, MsgToPruebaMe);
										        SendInfoMessage(playerid, 2, "0", MsgToPrueba);
										        SendInfoMessage(IdTest, 2, "0", MsgToPruebaYou);
										        PlayersDataOnline[IdTest][LicenciaTest] = true;
										        PutPlayerInVehicle(IdTest, MyNearCar, 0);
											}
											else
											{
												SendInfoMessage(playerid, 0, "1139", "El asiento del conductor de este vehículo ya se encuentra ocupado!");
											}
										}
										else
										{
											SendInfoMessage(playerid, 0, "1146", "Este vehículo se encuentra cerrado! No puedes hacer una prueba de conducción en el!");
										}
							        }
									else
									{
										SendInfoMessage(playerid, 0, "1140", "Este coche no pertenece a tu facción!");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1141", "Ya ese jugador tiene una licencia de este vehículo, no necesitas hacerle una prueba!");
								}
							}
					    }
					}
					else
					{
						SendInfoMessage(playerid, 0, "1142", "Usted no es licenciero");
					}
			    }
				// COMANDO: /Tiempo Coche
			  	else if (strcmp("/Tiempo Coche", cmdtext, true, 13) == 0 && strlen(cmdtext) == 13)
		    	{
					new MyNearCar = IsPlayerInNearVehicle(playerid);
					if (MyNearCar)
					{
					    if (MyNearCar <= MAX_CAR_DUENO && IsVehicleMyVehicle(playerid, MyNearCar))
					    {
					        new MsgTiempoCoche[MAX_TEXT_CHAT];
					        format(MsgTiempoCoche, sizeof(MsgTiempoCoche), "Le falta, %i días, %i horas para que los papeles del vehículo caduquen", DataCars[MyNearCar][Time] / 24, DataCars[MyNearCar][Time] % 24);
							SendInfoMessage(playerid, 2, "0", MsgTiempoCoche);
					    }
						else
						{
							SendInfoMessage(playerid, 0, "555", "Este no es su vehículo");
						}
					}
			    }
				// COMANDO: /Papeles [ID]
				else if (strfind(cmdtext, "/Papeles ", true) == 0)
				{
					new MyNearCar = IsPlayerInNearVehicle(playerid);
					if (MyNearCar)
					{
					    if (MyNearCar <= MAX_CAR_DUENO && IsVehicleMyVehicle(playerid, MyNearCar))
					    {
					        if (strval(cmdtext[9]) == playerid)
					        {
								Acciones_ROL(playerid, ACCION_ME, "mira los papeles de su vehículo");
								ShowPapelesToPlayer(playerid, playerid, MyNearCar);
					        }
						    else if (IsPlayerNear(playerid, strval(cmdtext[9]),
								 "410",
								 "411",
								 "412",
								 "El jugador que desea mostrarle los papeles del vehículo no se encuentra conectado",
								 "El jugador que desea mostrarle los papeles del vehículo no se encuentra logueado",
								 "El jugador que desea mostrarle los papeles del vehículo no se encuentra cerca de tí"))
						    {
								new MsgPapelesMe[MAX_TEXT_CHAT];
								format(MsgPapelesMe, sizeof(MsgPapelesMe), "le muestra los papeles de su vehículo a %s", PlayersDataOnline[strval(cmdtext[9])][NameOnlineFix]);
								Acciones_ROL(playerid, ACCION_ME, MsgPapelesMe);

								ShowPapelesToPlayer(playerid, strval(cmdtext[9]),MyNearCar);
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "413", "Este no es su vehículo");
						}
					}
				}
						//Propiedades
 			  	else if (strcmp("/Vehiculos", cmdtext, true, 10) == 0 && strlen(cmdtext) == 10)
                 {
				  ShowVehiclesToPlayer(playerid, strval(cmdtext[10]));
				}
			  	else if (strcmp("/Casas", cmdtext, true, 6) == 0 && strlen(cmdtext) == 6)
                 {
				  ShowHousesToPlayer(playerid, strval(cmdtext[6]));
				}
			  	else if (strcmp("/Negocios", cmdtext, true, 9) == 0 && strlen(cmdtext) == 9)
                 {
				  ShowNegociosToPlayer(playerid, strval(cmdtext[9]));
				}
				// COMANDO: /Datos [ID] -Mejorado-
				else if (strfind(cmdtext, "/Datos ", true) == 0)
				{
				    if (PlayersData[playerid][Faccion] == ADP && PlayersData[playerid][Rango] <= 2 ||
						 PlayersData[playerid][Faccion] == ADP && PlayersData[playerid][Rango] <= 5	||
						 PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] == 4 ||
						 PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] <= 1 ||
						 PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] <= 2 ||
						 PlayersData[playerid][Faccion] == GOBIERNO && PlayersData[playerid][Rango] == 6 ||
						 PlayersData[playerid][Faccion] == GOBIERNO && PlayersData[playerid][Rango] == 4 ||
						 PlayersData[playerid][Faccion] == PODERJUDICIAL && PlayersData[playerid][Rango] == 1 ||
		                 PlayersData[playerid][Faccion] == PODERJUDICIAL && PlayersData[playerid][Rango] == 2 ||
				         PlayersData[playerid][Faccion] == PODERJUDICIAL && PlayersData[playerid][Rango] == 3 ||
					     PlayersData[playerid][Faccion] == PODERJUDICIAL && PlayersData[playerid][Rango] == 4 ||
						 PlayersData[playerid][Admin] >= 6)
					{
				        if(IsPlayerConnected(strval(cmdtext[7])) && PlayersDataOnline[strval(cmdtext[7])][State] == 3)
				        {
					        new MsgDatos[MAX_TEXT_CHAT];
				            if (PlayersData[playerid][Admin] >= 6 && PlayersDataOnline[playerid][AdminOn] || PlayersData[playerid][Admin] >= 9)
				            {
				            //- Casas
				                new TieneCasas = 0;
							    SendInfoMessage(playerid, 1, "{FF8000}Casas", "");
								for (new i = 1; i < MAX_HOUSE_COUNT; i++)
								{
				    				if(IsMyHouse(strval(cmdtext[6]), i))
				    				{
				    				    format(MsgDatos, sizeof(MsgDatos), "{FFFFFF}CasaID: {FF8000}%i", i);
				    				    SendInfoMessage(playerid, 1, MsgDatos, "{FFFFFF}Datos:");
				    				    TieneCasas ++;
				    				}
								}
								if(!TieneCasas) SendInfoMessage(playerid, 1, "{FFFFFF}El jugador no posee casas.", "Datos:");
                                format(MsgDatos, sizeof(MsgDatos), "{FFFFFF}Alquiler: {FF8000}%i", PlayersData[strval(cmdtext[7])][Alquiler]);
						    	SendInfoMessage(playerid, 1, MsgDatos, "{FFFFFF}Datos:");
                                format(MsgDatos, sizeof(MsgDatos), "{FFFFFF}Amigo: {FF8000}%i", PlayersData[strval(cmdtext[7])][SpawnAmigo]);
						    	SendInfoMessage(playerid, 1, MsgDatos, "{FFFFFF}Datos:");
					        }
					        else
					        {
								Acciones_ROL(playerid, ACCION_ME, "utilizá su GPS");
						        Acciones_ROL(playerid, ACCION_AME, "GPS: Datos localizados");
							}
					        format(MsgDatos, sizeof(MsgDatos), "{FFFFFF}Nombre: {FF8000}%s", PlayersDataOnline[strval(cmdtext[7])][NameOnlineFix]);
					    	SendInfoMessage(playerid, 1, MsgDatos, "{FFFFFF}Datos:");

							if (PlayersData[playerid][Admin] >= 6 && PlayersDataOnline[playerid][AdminOn] || PlayersData[playerid][Admin] >= 9)
							    {
							    //- Negocios
							       new TieneNegocios = 0;
							       SendInfoMessage(playerid, 1, "{FF8000}Negocios", "");
							       for (new n = 1; n <= MAX_BIZZ; n++)
                                   {
									if(IsMyBizz(strval(cmdtext[7]), n, false))
									{
									    format(MsgDatos, sizeof(MsgDatos), "{FFFFFF}NegocioID: {FF8000}%i", n);
									    SendInfoMessage(playerid, 1, MsgDatos, "");
								     	++TieneNegocios;
     								}
 								}
						}

							//- Vehiculos
							new TieneAutos = 0;
							SendInfoMessage(playerid, 1, "{FF8000}Vehiculos", "");
							for (new i = 1; i <= MAX_CAR_DUENO; i++)
						    {
                                if(IsVehicleMyVehicle(strval(cmdtext[7]), i))
                                {
                                    format(MsgDatos, sizeof(MsgDatos), "{FFFFFF}Vehículo: {FF8000}%s", coches_Todos_Nombres[GetVehicleModel(i) - 400]);
						    		SendInfoMessage(playerid, 1, MsgDatos, "{FFFFFF}Datos:");
                                    if (PlayersData[playerid][Admin] >= 6 && PlayersDataOnline[playerid][AdminOn] || PlayersData[playerid][Admin] >= 9)
						            {
				 						format(MsgDatos, sizeof(MsgDatos), "{FFFFFF}Matrícula: {FF8000}%i {FFFFFF}ID: {FF8000}%i", DataCars[i][Matricula], i);
          							}
			 						else
			 						{
				 						format(MsgDatos, sizeof(MsgDatos), "{FFFFFF}Matrícula: {FF8000}%i", DataCars[i][Matricula]);
									}
                                    SendInfoMessage(playerid, 1, MsgDatos, "{FFFFFF}Datos:");
									++TieneAutos;
								}
							}
							if(!TieneAutos) SendInfoMessage(playerid, 1, "{FFFFFF}Vehículo: {FF8000}Ninguno", "{FFFFFF}Datos:");
				            return 1;
						}
						else
						{
							SendInfoMessage(playerid, 0, "405", "{FFFFFF}El jugador que desea verle los datos no se encuentra conectado");
						}
			        }
			        else
			        {
						SendInfoMessage(playerid, 0, "404", "{FFFFFF}Usted no es inspector de Policía ni ADP!");
					}
				}
				//////////--- /AD [Anuncio]
				else if (strfind(cmdtext, "/Ad ", true) == 0)
				{
		    	    if (strlen(cmdtext) > 9 && strlen(cmdtext) <= 70)
		    	    {
		    	        if (PlayersData[playerid][Phone] != 0)
		    	        {
							if(AnnounceInProcess[0] && AnnounceInProcess[1] && AnnounceInProcess[2]) return SendClientMessage(playerid, -1, "Anuncios en proceso, intenta mas tarde");
		    	            new MensajeAD[MAX_TEXT_CHAT];
		    	            new MensajeADA[MAX_TEXT_CHAT];
							new MensajeDSz[MAX_TEXT_CHAT];
							new MensajeDSz2[MAX_TEXT_CHAT];
		    	            if (gettime() - TimerAd >= 60)
		    	            {
								if (PlayersData[playerid][Dinero] > (strlen(MensajeAD) -3))
								{
								    TimerAd = gettime();
									strmid(MensajeAD, cmdtext, 4, strlen(cmdtext), sizeof(MensajeAD));
								    if (!DetectSpam(playerid, MensajeAD))
								    {

										format(MensajeADA, sizeof(MensajeADA), "Anuncio: %s. Móvil: %i [Nombre: %s - ID: %i]", MensajeAD, PlayersData[playerid][Phone], PlayersDataOnline[playerid][NameOnlineFix], playerid);
										format(MensajeAD, sizeof(MensajeAD), "Anuncio:~g~~h~~h~ %s. Móvil: %i", MensajeAD, PlayersData[playerid][Phone]);

										if (PlayersData[playerid][Admin] >= 1)
									    {
									     SendClientMessage(playerid, 0x0FFF00FF, MensajeADA);
									    }
										FixTextDrawString(MensajeAD);
										SendAnnounce(MensajeAD);
									}
									else
									{
									    switch (random(10))
									    {
									        case 0:
									        {
												format(MensajeAD, sizeof(MensajeAD), "Anuncio: Busco ADP. Móvil: %i", PlayersData[playerid][Phone]);
											}
									        case 1:
									        {
												format(MensajeAD, sizeof(MensajeAD), "Anuncio: Compro Sabre. Móvil: %i", PlayersData[playerid][Phone]);
											}
									        case 2:
									        {
												format(MensajeAD, sizeof(MensajeAD), "Anuncio: Busco NFS. Móvil: %i", PlayersData[playerid][Phone]);
											}
									        case 3:
									        {
												format(MensajeAD, sizeof(MensajeAD), "Anuncio: Compro coche o moto. Móvil: %i", PlayersData[playerid][Phone]);
											}
									        case 4:
									        {
												format(MensajeAD, sizeof(MensajeAD), "Anuncio: Vendo sentinel $2500. Móvil: %i", PlayersData[playerid][Phone]);
											}
									        case 5:
									        {
												format(MensajeAD, sizeof(MensajeAD), "Anuncio: Compro moto, no más de $2500. Móvil: %i", PlayersData[playerid][Phone]);
											}
									        case 6:
									        {
												format(MensajeAD, sizeof(MensajeAD), "Anuncio: Vendo casa en $80000. Móvil: %i", PlayersData[playerid][Phone]);
											}
									        case 7:
									        {
												format(MensajeAD, sizeof(MensajeAD), "Anuncio: Busco alquiler barato. Móvil: %i", PlayersData[playerid][Phone]);
											}
									        case 8:
									        {
												format(MensajeAD, sizeof(MensajeAD), "Anuncio: Compro transporte público. Móvil: %i", PlayersData[playerid][Phone]);
											}
									        case 9:
									        {
												format(MensajeAD, sizeof(MensajeAD), "Anuncio: Contrato servicios de ADP. Móvil: %i", PlayersData[playerid][Phone]);
											}
										}
									//	format(MensajeADA, sizeof(MensajeADA), "%s (([%i]))", MensajeAD, playerid);
										//format(MensajeAD, sizeof(MensajeAD), "%s", MensajeAD);
									}
									for (new i = 0; i < MAX_PLAYERS; i++)
									{
										if (playerid != i && IsPlayerConnected(i) && PlayersDataOnline[i][State] == 3)
										{
										    if (PlayersData[i][Admin] >= 1)
										    {
										        SendClientMessage(i, 0x0FFF00FF, MensajeADA);
										    }
										    else
										    {
										 //       SendClientMessage(i, 0x0FFF00FF, MensajeAD);
											}
										}
									}

									FaccionData[CNN][Deposito] = FaccionData[CNN][Deposito] + (strlen(MensajeAD) -3);

  									format(MensajeAD, sizeof(MensajeAD), "Has gastado $%i en el anuncio.", strlen(MensajeAD) -3);
									SendInfoMessage(playerid, 2, "0", MensajeAD);
									GivePlayerMoneyEx(playerid, -strlen(MensajeAD) -3);
									print(MensajeAD);
									new telf = PlayersData[playerid][Phone];
									strmid(MensajeDSz2, cmdtext, 4, strlen(cmdtext), sizeof(MensajeDSz2));
									format(MensajeDSz, sizeof(MensajeDSz), "[Anuncio]: %s - Telf:%i [OOC: %s(ID:%i)]", MensajeDSz2, telf, PlayersDataOnline[playerid][NameOnlineFix], playerid);
									//format(MensajeADA, sizeof(MensajeADA), "Anuncio: %s. Móvil: %i [Nombre: %s - ID: %i]", MensajeAD, PlayersData[playerid][Phone], PlayersDataOnline[playerid][NameOnlineFix], playerid);
									//--------------------------------------
									if (_:CanalVentas == 0)CanalVentas = DCC_FindChannelById(DCanalVentas);
									DCC_SendChannelMessage(CanalVentas, MensajeDSz);
									//--------------------------------------
									return 1;
								}
								else
								{
									SendInfoMessage(playerid, 0, "409", "No tiene suficiente dinero para colgar un anuncio");
	 								return 1;
								}
							}
							else
							{
							    new MsgTimerAd[MAX_TEXT_CHAT];
							    format(MsgTimerAd, sizeof(MsgTimerAd), "Tienes que esperar %i segundos para el próximo anuncio", 60 - (gettime() - TimerAd));
								SendInfoMessage(playerid, 0, "408", MsgTimerAd);
							   	return 1;
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "407", "Tienes que comprarte un móvil para poder enviar anuncios");
					    	return 1;
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "406", "El anuncio tiene que contener más de 5 caracteres y menos de 70");
				    	return 1;
					}

		    	}
                     // COMANDO: /Documentos //NEW
			  	else if (strcmp("/Documentos", cmdtext, true, 11) == 0 && strlen(cmdtext) == 11)
			  	{
				  	Documentos(playerid);
				}
                    // COMANDO: /Propiedades  //NEW
			  	else if (strcmp("/Propiedades", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
			  	{
				  	Propiedades(playerid);
				}
				// COMANDO: /Pasaporte [ID] //NEW
				else if (strfind(cmdtext, "/Pasaporte ", true) == 0)
				{
				    if (playerid == strval(cmdtext[11]))
				    {
				        Acciones_ROL(playerid, ACCION_ME, "mira su pasaporte");
				        ShowPasaporteToPlayer(playerid, strval(cmdtext[11]));
				    }
				    else if (IsPlayerNear(playerid, strval(cmdtext[11]),
						 "140",
						 "141",
						 "142",
						 "El jugador que desea mostrarle el pasaporte no se encuentra conectado",
						 "El jugador que desea mostrarle el pasaporte no se encuentra logueado",
						 "El jugador que desea mostrarle el pasaporte no se encuentra cerca de tí"))
				    {
						new MsgPasaporteMe[MAX_TEXT_CHAT];
						format(MsgPasaporteMe, sizeof(MsgPasaporteMe), "le enseña su pasaporte a %s", PlayersDataOnline[strval(cmdtext[11])][NameOnlineFix]);
				        Acciones_ROL(playerid, ACCION_ME, MsgPasaporteMe);

						ShowPasaporteToPlayer(playerid, strval(cmdtext[11]));
				    }
				}
				// COMANDO: /CREDENCIAL
				else if (strfind(cmdtext, "/Credencial ", true) == 0)
				{
					if(/*PlayersData[playerid][Faccion] == SAPD ||
					     PlayersData[playerid][Faccion] == Ejercito ||*/
					     PlayersData[playerid][Faccion] == SAPD ||
						 PlayersData[playerid][Faccion] == SAPD)
					{
					    if (playerid == strval(cmdtext[GetPosSpace(cmdtext,1)]))
					    {

					        Acciones_ROL(playerid, ACCION_ME, "mira su credencial");
					        GetPlayerDocuments(playerid, strval(cmdtext[GetPosSpace(cmdtext,1)]));
					    }
					    else if (IsPlayerNear(playerid, strval(cmdtext[GetPosSpace(cmdtext,1)]),
							 "140",
							 "141",
							 "142",
							 "El jugador al que desea mostrarle su credencial no se encuentra conectado",
							 "El jugador al que desea mostrarle su credencial no se encuentra logueado",
							 "El jugador al que desea mostrarle su credencial no se encuentra cerca de tí"))
					    {
							new MsgPasaporteMe[MAX_TEXT_CHAT];
							format(MsgPasaporteMe, sizeof(MsgPasaporteMe), "le enseña su credencial a %s", PlayersDataOnline[strval(cmdtext[GetPosSpace(cmdtext,1)])][NameOnlineFix]);
					        Acciones_ROL(playerid, ACCION_ME, MsgPasaporteMe);

							GetPlayerDocuments(playerid, strval(cmdtext[GetPosSpace(cmdtext,1)]));
					    }
					}
					else
					{
						SendInfoMessage(playerid, 0, "1616", "Usted no es de SAPD ni SAPD.");
					}
				}
				// COMANDO: /CARNET
		   		else if (strfind(cmdtext, "/Carnet ", true) == 0)
				{
					if(PlayersData[playerid][Faccion] == GOBIERNO ||
					   PlayersData[playerid][Faccion] == LICENCIEROS ||
					   PlayersData[playerid][Faccion] == TAXI ||
					   PlayersData[playerid][Faccion] == NFS ||
					   PlayersData[playerid][Faccion] == CNN ||
					   PlayersData[playerid][Faccion] == ADP ||
					   PlayersData[playerid][Faccion] == CAMIONEROS ||
					   PlayersData[playerid][Faccion] == TALLER_LS ||
					   PlayersData[playerid][Faccion] == TALLER_LS ||
					   PlayersData[playerid][Faccion] == LSMD ||
					   PlayersData[playerid][Faccion] == LSMD)
					{
					    new Carnet[4][120];
					    if (playerid == strval(cmdtext[GetPosSpace(cmdtext,1)]))
					    {

					        Acciones_ROL(playerid, ACCION_ME, "mira su carnet");

							new MsjCarnet[240];
							format(Carnet[0],60,"{00A5FF}......::::CARNET::::......"); //PlayersDataOnline[playerid][NameOnlineFix]
							format(Carnet[1],60,"{F0F0F0}Nombre: %s",PlayersDataOnline[playerid][NameOnlineFix]);
							format(Carnet[2],60,"{F0F0F0}Trabajo: %s",FaccionData[PlayersData[playerid][Faccion]][NameFaccion]);
					        format(Carnet[3],60,"{F0F0F0}Cargo: %s",FaccionesRangos[PlayersData[playerid][Faccion]][PlayersData[playerid][Rango]]);
                            strcat(MsjCarnet,Carnet[0]);
                            strcat(MsjCarnet,"\n");
                            strcat(MsjCarnet,"\n");
                            strcat(MsjCarnet,Carnet[1]);
							strcat(MsjCarnet,"\n");
							strcat(MsjCarnet,Carnet[2]);
							strcat(MsjCarnet,"\n");
					        strcat(MsjCarnet,Carnet[3]);
					        strcat(MsjCarnet,"\n");
					        ShowPlayerDialogEx(playerid, 999, DIALOG_STYLE_MSGBOX, "República de San Andreas",MsjCarnet, "Aceptar", "");
					    }
					    else if (IsPlayerNear(playerid, strval(cmdtext[GetPosSpace(cmdtext,1)]),
							 "140",
							 "141",
							 "142",
							 "El jugador al que desea mostrarle el carnet no se encuentra conectado",
							 "El jugador al que desea mostrarle el carnet no se encuentra logueado",
							 "El jugador al que desea mostrarle el carnet no se encuentra cerca de tí"))
					    {
							new MsgPasaporteMe[MAX_TEXT_CHAT];
							format(MsgPasaporteMe, sizeof(MsgPasaporteMe), "le enseña su carnet a %s", PlayersDataOnline[strval(cmdtext[GetPosSpace(cmdtext,1)])][NameOnlineFix]);
					        Acciones_ROL(playerid, ACCION_ME, MsgPasaporteMe);


							new MsjCarnet[240];
							format(Carnet[0],60,"{00A5FF}......::::CARNET::::......");
							format(Carnet[1],60,"{F0F0F0}Nombre: %s",PlayersDataOnline[playerid][NameOnlineFix]);
							format(Carnet[2],60,"{F0F0F0}Trabajo: %s",FaccionData[PlayersData[playerid][Faccion]][NameFaccion]);
					        format(Carnet[3],60,"{F0F0F0}Cargo: %s",FaccionesRangos[PlayersData[playerid][Faccion]][PlayersData[playerid][Rango]]);
                            strcat(MsjCarnet,Carnet[0]);
                            strcat(MsjCarnet,"\n");
                            strcat(MsjCarnet,"\n");
                            strcat(MsjCarnet,Carnet[1]);
							strcat(MsjCarnet,"\n");
							strcat(MsjCarnet,Carnet[2]);
							strcat(MsjCarnet,"\n");
					        strcat(MsjCarnet,Carnet[3]);
					        strcat(MsjCarnet,"\n");
					        ShowPlayerDialogEx(strval(cmdtext[GetPosSpace(cmdtext,1)]), 999, DIALOG_STYLE_MSGBOX, "República de San Andreas",MsjCarnet, "Aceptar", "");
					    }
					}
					else
					{
						SendInfoMessage(playerid, 0, "1517", "Las facciones ilegales no poseen carnet!");
					}
				}
				// COMANDO: /Al [Alemán]
				else if (strfind(cmdtext, "/Al ", true) == 0)
				{
					if (PlayersData[playerid][Idiomas][0])
					{
						SendChatStreamIdioma(playerid, cmdtext[4], 0);
					}
					else
					{
						SendInfoMessage(playerid, 0, "483", "Usted no tiene título de alemán");
					}
				}
				// COMANDO: /Fr [Francés]
				else if (strfind(cmdtext, "/Fr ", true) == 0)
				{
					if (PlayersData[playerid][Idiomas][1])
					{
						SendChatStreamIdioma(playerid, cmdtext[4], 1);
					}
					else
					{
						SendInfoMessage(playerid, 0, "482", "Usted no tiene título de fancrés");
					}
				}
				// COMANDO: /Po [Portugés]
				else if (strfind(cmdtext, "/Po ", true) == 0)
				{
					if (PlayersData[playerid][Idiomas][2])
					{
						SendChatStreamIdioma(playerid, cmdtext[4], 2);
					}
					else
					{
						SendInfoMessage(playerid, 0, "481", "Usted no tiene título de portugués");
					}
				}
				// COMANDO: /It [Italiano]
				else if (strfind(cmdtext, "/It ", true) == 0)
				{
					if (PlayersData[playerid][Idiomas][3])
					{
						SendChatStreamIdioma(playerid, cmdtext[4], 3);
					}
					else
					{
						SendInfoMessage(playerid, 0, "448", "Usted no tiene título de italiano");
					}
				}
				// COMANDO: /In [Inglés]
				else if (strfind(cmdtext, "/In ", true) == 0)
				{
					if (PlayersData[playerid][Idiomas][4])
					{
						SendChatStreamIdioma(playerid, cmdtext[4], 4);
					}
					else
					{
						SendInfoMessage(playerid, 0, "449", "Usted no tiene título de inglés");
					}
				}
				// COMANDO: /Ja [Janponés]
				else if (strfind(cmdtext, "/Ja ", true) == 0)
				{
					if (PlayersData[playerid][Idiomas][5])
					{
						SendChatStreamIdioma(playerid, cmdtext[4], 5);
					}
					else
					{
						SendInfoMessage(playerid, 0, "450", "Usted no tiene título de japonés");
					}
				}
				// COMANDO: /Licencias [ID]
				else if (strfind(cmdtext, "/Licencias ", true) == 0)
				{
				    if (playerid == strval(cmdtext[11]))
				    {
				        Acciones_ROL(playerid, ACCION_ME, "mira sus licencias");
				        ShowLicenciasToPlayer(playerid, strval(cmdtext[11]));
				    }
				    else if (IsPlayerNear(playerid, strval(cmdtext[11]),
						 "442",
						 "443",
						 "444",
						 "El jugador que desea mostrarle sus licencias no se encuentra conectado",
						 "El jugador que desea mostrarle sus licencias no se encuentra logueado",
						 "El jugador que desea mostrarle sus licencias no se encuentra cerca de tí"))
				    {
						new MsgLicenciasMe[MAX_TEXT_CHAT];
						format(MsgLicenciasMe, sizeof(MsgLicenciasMe), "le enseña sus licencias a %s", PlayersDataOnline[strval(cmdtext[11])][NameOnlineFix]);
				        Acciones_ROL(playerid, ACCION_ME, MsgLicenciasMe);

						ShowLicenciasToPlayer(playerid, strval(cmdtext[11]));
				    }
				}
				// COMANDO: /Idiomas [ID]
				else if (strfind(cmdtext, "/Idiomas ", true) == 0)
				{
				    if (playerid == strval(cmdtext[9]))
				    {
				        Acciones_ROL(playerid, ACCION_ME, "mira sus diplomas de idiomas");
				        ShowIdiomasToPlayer(playerid, strval(cmdtext[9]));
				    }
				    else if (IsPlayerNear(playerid, strval(cmdtext[9]),
						 "445",
						 "446",
						 "447",
						 "El jugador que desea mostrarle sus idiomas no se encuentra conectado",
						 "El jugador que desea mostrarle sus idiomas no se encuentra logueado",
						 "El jugador que desea mostrarle sus idiomas no se encuentra cerca de tí"))
				    {
						new MsgIdiomasMe[MAX_TEXT_CHAT];
						format(MsgIdiomasMe, sizeof(MsgIdiomasMe), "le enseña sus diplomas idiomas a %s", PlayersDataOnline[strval(cmdtext[9])][NameOnlineFix]);
				        Acciones_ROL(playerid, ACCION_ME, MsgIdiomasMe);

						ShowIdiomasToPlayer(playerid, strval(cmdtext[9]));
				    }
				}
				// COMANDO: /N [Normal]
				else if (strfind(cmdtext, "/N ", true) == 0)
				{
					SendChatStreamNormal(playerid, cmdtext[3], "dice:");
		    	}
				// COMANDO: /Altavoz
			  	else if (strcmp("/Altavoz", cmdtext, true, 8) == 0 && strlen(cmdtext) == 8)
		    	{
				    if (PlayersData[playerid][Phone] != 0)
				    {
				        if (PlayersDataOnline[playerid][InCall] != -1)
				        {
							if (PlayersDataOnline[playerid][InCall] != 888)
							{
							    if (PlayersDataOnline[playerid][Altavoz])
							    {
							        PlayersDataOnline[playerid][Altavoz] = false;
								    Acciones_ROL(playerid, ACCION_ME, "desactiva el altavoz del móvil");
							    }
							    else
							    {
							        PlayersDataOnline[playerid][Altavoz] = true;
								    Acciones_ROL(playerid, ACCION_ME, "activa el altavoz del móvil");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "1021", "Para este número no puede activar el altavoz!");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1022", "Usted no se encuentra en una llamada");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "1023", "Tú no tienes móvil");
					}
		    	}
				// COMANDO: /C (Colgar)
			  	else if (strcmp("/C", cmdtext, true, 2) == 0 && strlen(cmdtext) == 2)
		    	{
				    if (PlayersData[playerid][Phone] != 0)
				    {
				        if (PlayersDataOnline[playerid][InCall] != -1)
				        {
							PayCall(playerid);
							if (PlayersDataOnline[playerid][InCall] != 888)
							{
								PayCall(PlayersDataOnline[playerid][InCall]);
								Acciones_ROL(PlayersDataOnline[playerid][InCall], ACCION_ME, "guarda su móvil");
								SendClientMessage(PlayersDataOnline[playerid][InCall], COLOR_COLGAR_DESCOLGAR, " Han colgado!");
				                PlayersDataOnline[PlayersDataOnline[playerid][InCall]][IsDescolgado] = false;
								SetPlayerColgar(PlayersDataOnline[playerid][InCall]);
				                PlayersDataOnline[PlayersDataOnline[playerid][InCall]][InCall] = -1;
				                PlayPlayerStreamSound(playerid, 1063);
				                PlayPlayerStreamSound(PlayersDataOnline[playerid][InCall], 1063);
							}
							else
							{
								if (CallCNN == playerid)
								{
									SendClientMessageToAll(0x0FFF00FF, "* CNN: Conexión telefónica finalizada.");
								    CallCNN = -1;
								}
							}
							Acciones_ROL(playerid, ACCION_ME, "guarda su móvil");
			                PlayersDataOnline[playerid][IsDescolgado] = false;
							SendClientMessage(playerid, COLOR_COLGAR_DESCOLGAR, " Colgaste");
							SetPlayerColgar(playerid);
			                PlayersDataOnline[playerid][InCall] = -1;
			                PlayPlayerStreamSound(playerid, 1063);
	                		PlayPlayerStreamSound(PlayersDataOnline[playerid][InCall], 1063);
						}
						else
						{
							SendInfoMessage(playerid, 0, "388", "Usted no se encuentra en una llamada");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "389", "Tú no tienes móvil");
					}
		    	}
				// COMANDO: /D (Descolgar)
			  	else if (strcmp("/D", cmdtext, true, 2) == 0 && strlen(cmdtext) == 2)
		    	{
				    if (PlayersData[playerid][Phone] != 0)
				    {
				        if (PlayersDataOnline[playerid][InCall] != -1)
				        {
				            if (!PlayersDataOnline[playerid][IsDescolgado])
				            {
					            PlayersDataOnline[playerid][Altavoz] = false;
                                PlayersDataOnline[playerid][ICall] = false;
				                PlayersDataOnline[PlayersDataOnline[playerid][InCall]][TimeCall] = gettime();
						        PlayersDataOnline[playerid][TimeCall] = gettime();
				                PlayersDataOnline[playerid][IsDescolgado] = true;

								Acciones_ROL(playerid, ACCION_ME, "descuelga su móvil");
								SendClientMessage(playerid, COLOR_COLGAR_DESCOLGAR, " Descolgaste el móvil!");
								SendClientMessage(PlayersDataOnline[playerid][InCall], COLOR_COLGAR_DESCOLGAR, " Han descolgado!");
                                PlayPlayerStreamSound(playerid, 1063);
								SetPlayerDescolgar(playerid);
							}
							else
							{
	                        	SendInfoMessage(playerid, 0, "390", "Usted ya descolgó esta llamada");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "391", "Usted no se encuentra en una llamada");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "392", "Tú no tienes móvil");
					}
				}
				// COMANDO: /SMS [Número] [Texto]
				else if (strfind(cmdtext, "/SMS ", true) == 0)
				{
					SendSMS(playerid, strvalEx(cmdtext[GetPosSpace(cmdtext, 1)]), cmdtext[GetPosSpace(cmdtext, 2)]); //Activado
				}
				// COMANDO: /Casar [ID] [ID]
				else if (strfind(cmdtext, "/Casar ", true) == 0)
				{
					if (PlayersData[playerid][Faccion] == GOBIERNO && PlayersData[playerid][Rango] == 0)
					{
						new FistID = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
						new SecondID = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
						if (FistID != SecondID)
						{
						    if (IsPlayerNear(playerid, FistID,
								 "926",
								 "927",
								 "928",
								 "El primer jugador que deseas casar no se encuentra conectado",
								 "El primer jugador que deseas casar no se ha logueado",
								 "El primer jugador que deseas casar no se encuentra cerca de tí") &&
								 IsPlayerNear(playerid, SecondID,
								 "929",
								 "930",
								 "931",
								 "El segundo jugador que deseas casar no se encuentra conectado",
								 "El segundo jugador que deseas casar no se ha logueado",
								 "El segundo jugador que deseas casar no se encuentra cerca de tí") 						)
						    {
								if (strlen(PlayersData[FistID][GirlFreind]) == 2 && strlen(PlayersData[SecondID][GirlFreind]) == 2)
								{
									format(PlayersData[FistID][GirlFreind], MAX_PLAYER_NAME, "%s", PlayersDataOnline[SecondID][NameOnline]);
									format(PlayersData[SecondID][GirlFreind], MAX_PLAYER_NAME, "%s", PlayersDataOnline[FistID][NameOnline]);

									new MsgCasados[MAX_TEXT_CHAT];
									format(MsgCasados, sizeof(MsgCasados), "Has casado a %s con %s", PlayersDataOnline[FistID][NameOnlineFix], PlayersDataOnline[SecondID][NameOnlineFix]);
									SendInfoMessage(playerid, 3, "0", MsgCasados);
									format(MsgCasados, sizeof(MsgCasados), "El presidente %s te ha casado con %s", PlayersDataOnline[playerid][NameOnlineFix], PlayersDataOnline[FistID][NameOnlineFix]);
									SendInfoMessage(SecondID, 3, "0", MsgCasados);
									format(MsgCasados, sizeof(MsgCasados), "El presidente %s te ha casado con %s", PlayersDataOnline[playerid][NameOnlineFix], PlayersDataOnline[SecondID][NameOnlineFix]);
									SendInfoMessage(FistID, 3, "0", MsgCasados);
								}
							    else
							    {
									SendInfoMessage(playerid, 0, "932", "Uno de los jugadores que deseas casar, ya se encuentra casado.");
								}
						    }
						}
					    else
					    {
							SendInfoMessage(playerid, 0, "943", "Has introducído las mismas IDs para casar.");
						}
					}
				    else
				    {
						SendInfoMessage(playerid, 0, "933", "Sólo el presidente puede casar a alguién.");
					}
				}
				// COMANDO: /DivorciarEx
				else if (strfind(cmdtext, "/DivorciarEx ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 7)
					{
					    if (IsPlayerConnected(strval(cmdtext[13])))
					    {
					        if (strlen(PlayersData[strval(cmdtext[13])][GirlFreind]) != 2)
					        {
								format(PlayersData[strval(cmdtext[13])][GirlFreind], MAX_PLAYER_NAME, "No");

								new MsgDivorciarAdm[MAX_TEXT_CHAT];
								format(MsgDivorciarAdm, sizeof(MsgDivorciarAdm), "%s Has divorciado a %s con el comando /DivorciarEx [ID]", LOGO_STAFF, PlayersDataOnline[strval(cmdtext[13])][NameOnlineFix]);
								SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, MsgDivorciarAdm);
								format(MsgDivorciarAdm, sizeof(MsgDivorciarAdm), "%s Has sido devorciado por %s con el comando /DivorciarEx [ID]", LOGO_STAFF, PlayersDataOnline[playerid][NameOnlineFix]);
								SendInfoMessage(strval(cmdtext[13]), 3, "0", MsgDivorciarAdm);
							}
							else
							{
								SendInfoMessage(playerid, 0, "942", "El jugador que desea divorciar ya se encuentra divorciado");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "924", "El jugador que desea divorciar no se encuentra conectado.");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "925", "Tú no tienes acceso al comando /DivorciarEx.");
				        return 1;
					}
				}
				// COMANDO: /Divorciar [ID] [ID]
				else if (strfind(cmdtext, "/Divorciar ", true) == 0)
				{
					if (PlayersData[playerid][Faccion] == GOBIERNO && PlayersData[playerid][Rango] == 0)
					{
						new FistID = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
						new SecondID = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
						if (FistID != SecondID)
						{
						    if (IsPlayerNear(playerid, FistID,
								 "934",
								 "935",
								 "936",
								 "El primer jugador que deseas divorciar no se encuentra conectado",
								 "El primer jugador que deseas divorciar no se ha logueado",
								 "El primer jugador que deseas divorciar no se encuentra cerca de tí") &&
								 IsPlayerNear(playerid, SecondID,
								 "937",
								 "938",
								 "939",
								 "El segundo jugador que deseas divorciar no se encuentra conectado",
								 "El segundo jugador que deseas divorciar no se ha logueado",
								 "El segundo jugador que deseas divorciar no se encuentra cerca de tí") 						)
						    {
								if (strlen(PlayersData[FistID][GirlFreind]) != 2 && strlen(PlayersData[SecondID][GirlFreind]) != 2 &&
									 strfind(PlayersData[FistID][GirlFreind], PlayersDataOnline[SecondID][NameOnline], false) == 0 &&
									 strlen(PlayersData[FistID][GirlFreind]) == strlen(PlayersDataOnline[SecondID][NameOnline]) &&
									 strfind(PlayersData[SecondID][GirlFreind], PlayersDataOnline[FistID][NameOnline], false) == 0 &&
									 strlen(PlayersData[SecondID][GirlFreind]) == strlen(PlayersDataOnline[FistID][NameOnline]))
								{
									format(PlayersData[FistID][GirlFreind], MAX_PLAYER_NAME, "No");
									format(PlayersData[SecondID][GirlFreind], MAX_PLAYER_NAME, "No");

									new MsgCasados[MAX_TEXT_CHAT];
									format(MsgCasados, sizeof(MsgCasados), "Has divorciado a %s con %s", PlayersDataOnline[FistID][NameOnlineFix], PlayersDataOnline[SecondID][NameOnlineFix]);
									SendInfoMessage(playerid, 3, "0", MsgCasados);
									format(MsgCasados, sizeof(MsgCasados), "El presidente %s te ha divorciado con %s", PlayersDataOnline[playerid][NameOnlineFix], PlayersDataOnline[FistID][NameOnlineFix]);
									SendInfoMessage(SecondID, 3, "0", MsgCasados);
									format(MsgCasados, sizeof(MsgCasados), "El presidente %s te ha divorciado con %s", PlayersDataOnline[playerid][NameOnlineFix], PlayersDataOnline[SecondID][NameOnlineFix]);
									SendInfoMessage(FistID, 3, "0", MsgCasados);
								}
							    else
							    {
									SendInfoMessage(playerid, 0, "940", "Uno de los jugadores que deseas divorciar, ya se encuentra divorciado.");
								}
						    }
						}
					    else
					    {
							SendInfoMessage(playerid, 0, "943", "Has introducído las mismas IDs para divorciar.");
						}
					}
				    else
				    {
						SendInfoMessage(playerid, 0, "941", "Sólo el presidente puede divorciar a alguién.");
					}
				}
				// COMANDO: /Llamar [Número]
				else if (strfind(cmdtext, "/Llamar ", true) == 0)
				{
	                SetPlayerCall(playerid, strval(cmdtext[8]));
				}
				// COMANDO: /Dados
				else if (strcmp("/Dados", cmdtext, true, 6) == 0 && strlen(cmdtext) == 6)
				{
				    if (IsObjectInBolsillo(playerid, 2))
				    {
				        new MsgDados[MAX_TEXT_CHAT];
						new RndDados = random(7) + 1;
						format(MsgDados, sizeof(MsgDados), "Salió el número %i en los dados que tiró %s", RndDados, PlayersDataOnline[playerid][NameOnlineFix]);
				        Acciones_ROL(playerid, ACCION_ME, "tira los dados");
				        Acciones_ROL(playerid, ACCION_AME, MsgDados);
					}
					else
					{
						SendInfoMessage(playerid, 0, "373", "Tú no tienes dados");
					}
				}
				// COMANDO: /Patinar
				else if (strcmp("/Patinar", cmdtext, true, 8) == 0 && strlen(cmdtext) == 8)
				{
				    if (IsObjectInBolsillo(playerid, 1))
				    {
				        Acciones_ROL(playerid, ACCION_ME, "se calza unos patines y echa andar");
						ApplyAnimation(playerid,"SKATE",SKATE_ANIMATIONS [1], 4.0, 1, 1, 1, 1, 1, 1);
					}
					else
					{
						SendInfoMessage(playerid, 0, "372", "Tú no tienes patines");
					}
				}
				// COMANDO: /Agenda
				else if (strcmp("/Agenda", cmdtext, true, 7) == 0 && strlen(cmdtext) == 7)
				{
				    if (IsObjectInBolsillo(playerid, 4))
				    {
				        Acciones_ROL(playerid, ACCION_ME, "saca su agenda");
				        ShowHomeAgenda(playerid);
					}
					else
					{
						SendInfoMessage(playerid, 0, "893", "Tú no tienes agenda");
					}
				}
				// COMANDO: /Tirar
				else if (strfind(cmdtext, "/Tirar ", true) == 0)
				{
/*					if (strcmp("/Tirar Arma", cmdtext, true, 11) == 0 && strlen(cmdtext) == 11)
					{
						new MyWeapons; MyWeapons = GetPlayerWeapon(playerid);
				        if (MyWeapons != 0)
				        {
				            RemovePlayerWeapond(playerid, MyWeapons);
							new MsgTirar[MAX_TEXT_CHAT];
					        format(MsgTirar, sizeof(MsgTirar), "tiró un %s", SlotNameWeapon[MyWeapons]);
					        Acciones_ROL(playerid, ACCION_ME, MsgTirar);
					        SendInfoMessage(playerid, 2, "0", "Tiraste un arma");
						}
						else
						{
							SendInfoMessage(playerid, 0, "281", "No tienes un arma en las manos!");
						}
					} */
					// COMANDO: /TIRAR ARMA
                    if (strcmp("/Tirar Arma", cmdtext, true, 11) == 0 && strlen(cmdtext) == 11)
                    {
						new GunID = GetPlayerWeapon(playerid);
						new GunAmmo = GetPlayerAmmo(playerid);
                        if(GunID != 0)
                        {
                            if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
							{
								if(GunID > 0 && GunAmmo != 0)
                                {
                                    new f = MAX_OBJ+1;
                                    for(new a = 0; a < MAX_OBJ; a++)
                                    {
                                        if(dGunData[a][ObjPos][0] == 0.0)
                                        {
                                            f = a;
                                            break;
                                        }
                                    }
                                    if(f < MAX_OBJ)
									{
			                        	RemovePlayerWeapon(playerid, GunID);
			                        	dGunData[f][ObjData][0] = GunID;
			                        	dGunData[f][ObjData][1] = GunAmmo;
                                    	GetPlayerPos(playerid, dGunData[f][ObjPos][0], dGunData[f][ObjPos][1], dGunData[f][ObjPos][2]);
                                    	dGunData[f][ObjID] = CreateDynamicObject(GunObjects[GunID], dGunData[f][ObjPos][0], dGunData[f][ObjPos][1], dGunData[f][ObjPos][2]-1, 93.7, 120.0, 120.0, -1, -1, -1, MAX_RADIO_STREAM);

										new ArmaTirada[50];
                                    	format(ArmaTirada, sizeof(ArmaTirada), "tira %s", GunNames[dGunData[f][ObjData][0]]);
                                    	Acciones_ROL(playerid, ACCION_ME, ArmaTirada);
                                    	SendInfoMessage(playerid, 2, "0", "Tiraste un arma");
                                    }
                                    else
									{
									    SendInfoMessage(playerid, 0, "213", "No puedes tirar más armas al piso, intenta más tarde.");
									}
                                }
							}
							else
							{
                                SendInfoMessage(playerid, 0, "214", "No puedes tirar un arma desde el interior de un vehículo");
							}
                        }
                        else
						{
						    SendInfoMessage(playerid, 0, "281", "No tienes un arma en las manos!");
						}
                    }
					// COMANDO: /Tirar Cartera [ID_Cartera]
			  		else if (strfind(cmdtext, "/Tirar Cartera ", true) == 0)
				    {
				        new CarteraID   = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
				        if (CarteraID >= 1 && CarteraID <= MAX_COUNT_CARTERA)
				        {
				            CarteraID--;
				            if (PlayersData[playerid][Cartera][CarteraID] != CARTERA_TYPE_NADA)
				            {
								new ObjectRemove = RemoveObjectToCartera(playerid, CarteraID);

								new MsgTirarCartera[MAX_TEXT_CHAT];
								format(MsgTirarCartera, sizeof(MsgTirarCartera), "tiró un %s", CarteraNames[ObjectRemove]);
						        Acciones_ROL(playerid, ACCION_ME, MsgTirarCartera);

								new MsgDarCarteraYOU[MAX_TEXT_CHAT];
							    format(MsgDarCarteraYOU, sizeof(MsgDarCarteraYOU), "Tiraste un %s.", CarteraNames[ObjectRemove]);
								SendInfoMessage(playerid, 2, "0", MsgDarCarteraYOU);
				            }
				            else
				            {
								SendInfoMessage(playerid, 0, "1328", "No tienes nada en esa parte de la cartera!");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1327", "El número de cartera debe estar comprendido entre 1 y 6");
						}

				    }
					else if (strcmp("/Tirar Chaleco", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
					{
						new Float:Chaleco1;
						GetPlayerArmour(playerid, Chaleco1);
						if (Chaleco1 > 0.0)
						{
							SetPlayerArmourEx(playerid, -Chaleco1);
					        Acciones_ROL(playerid, ACCION_ME, "tiró su chaleco");
					        SendInfoMessage(playerid, 2, "0", "Has tirado tu chaleco");
						}
						else
						{
							SendInfoMessage(playerid, 0, "880", "Usted no tienes ningún chaleco puesto encima.");
						}
					}
					else if (strcmp("/Tirar Lata", cmdtext, true, 11) == 0 && strlen(cmdtext) == 11)  //NEW
		    	    {
		    	     if (PlayersData[playerid][Lata])
		    	      {
					  Acciones_ROL(playerid, ACCION_ME, "Tira una lata de gas al piso");
                      SendInfoMessage(playerid, 3, "0", "Has tirado una lata de gas al Piso");
                      PlayersData[playerid][Lata] = false;
					  }
					 else
                        {
							SendInfoMessage(playerid, 0, "371", "No tiene una lata que tirar");
						}
					}
					// COMANDO: /Tirar Artículo [ID_Bolsa]
			  		else if (strfind(cmdtext, "/Tirar Artículo ", true) == 0 ||
					  		 strfind(cmdtext, "/Tirar Articulo ", true) == 0)
				    {
				        new BolsaID = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
						DropArticlePlayerToPlayer(playerid, BolsaID);
				    }
					else if (strcmp("/Tirar Patines", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
					{
					    if (IsObjectInBolsillo(playerid, 1))
					    {
								RemoveObjectBolsillo(playerid, 1);
						        Acciones_ROL(playerid, ACCION_ME, "ha tirado unos patines al suelo");
						        SendInfoMessage(playerid, 2, "0", "Has botado tus patines, ahora tendrás que caminar más");
						        ClearAnimations(playerid, true);
						}
						else
						{
							SendInfoMessage(playerid, 0, "371", "Tú no tienes patines");
						}
					}
					// COMANDO: /Tirar Dados
					else if (strcmp("/Tirar Dados", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
					{
					    if (IsObjectInBolsillo(playerid, 2))
					    {
								RemoveObjectBolsillo(playerid, 2);
						        Acciones_ROL(playerid, ACCION_ME, "ha tirado unos dados al suelo");
						        SendInfoMessage(playerid, 2, "0", "Has botado tus dados de la suerte, ahora no podrá jugar con ellos");
						}
						else
						{
							SendInfoMessage(playerid, 0, "370", "Tú no tienes dados");
						}
					}
					// COMANDO: /Tirar Agenda
					else if (strcmp("/Tirar Agenda", cmdtext, true, 13) == 0 && strlen(cmdtext) == 13)
					{
					    if (IsObjectInBolsillo(playerid, 4))
					    {
								RemoveObjectBolsillo(playerid, 4);
						        Acciones_ROL(playerid, ACCION_ME, "ha tirado su agenda al suelo");
						        SendInfoMessage(playerid, 2, "0", "Has botado tu agenda!");
						}
						else
						{
							SendInfoMessage(playerid, 0, "1068", "Tú no tienes agenda!");
						}
					}
					// COMANDO: /Tirar Bolsa
					else if (strcmp("/Tirar Bolsa", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
					{
					    if (PlayersData[playerid][HaveBolsa])
					    {
								PlayersData[playerid][HaveBolsa] = false;
						        Acciones_ROL(playerid, ACCION_ME, "ha tirado su bolsa al suelo");
						        SendInfoMessage(playerid, 2, "0", "Has botado tu bolsa!");
						        CleanArticulosBolsa(playerid);
						}
						else
						{
							SendInfoMessage(playerid, 0, "1229", "Tú no tienes bolsa!");
						}
					}
					// COMANDO: /TIRAR BBX
					else if (strcmp("/Tirar BBX", cmdtext, true, 10) == 0 && strlen(cmdtext) == 10)
					{
					    if (PlayersData[playerid][HaveBBX])
					    {
								PlayersData[playerid][HaveBBX] = false;
						        Acciones_ROL(playerid, ACCION_ME, "ha tirado su estéreo portátil al suelo");
						        SendInfoMessage(playerid, 2, "0", "Has botado tu estéreo portátil!");
						        CleanArticulosBolsa(playerid);
						}
						else
						{
							SendInfoMessage(playerid, 0, "1229", "Tú no tienes un estéreo portátil!");
						}
					}
					// COMANDO: /Tirar Móvil
					else if (strcmp("/Tirar Móvil", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12 ||
							 strcmp("/Tirar Movil", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
					{
					    if (PlayersData[playerid][Phone] != 0)
					    {
					        if (PlayersDataOnline[playerid][InCall] == -1)
					        {
	                            new numberstr[50];
						        format(numberstr, sizeof(numberstr), "%s%i.ulp", DIR_MOVILES, PlayersData[playerid][Phone]);
								// Borrar datos del teléfono
								if (fexist(numberstr))
								{
								    new File:fEscribir1 = fopen(numberstr, io_write);
									fwrite(fEscribir1, "");
									fclose(fEscribir1);
								}
								RemoveObjectBolsillo(playerid, 3);
								PlayersData[playerid][Phone] = 0;
						        Acciones_ROL(playerid, ACCION_ME, "ha tirado su móvil al suelo");
						        SendInfoMessage(playerid, 2, "0", "Has botado su móvil, ahora no podrá realizar llamadas");
							}
							else
							{
								SendInfoMessage(playerid, 0, "369", "Finalize su llamada telefónica antes de tirar su móvil");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "368", "Tú no tienes móvil");
						}
					}
					// COMANDO: /Tirar Coche [ID]
					else if (strfind(cmdtext, "/Tirar Coche ", true) == 0)
					{
					    if (IsPlayerInAnyVehicle(playerid))
					    {
					        if (GetPlayerVehicleSeat(playerid) == 0)
					        {
								if (IsPlayerConnected(strval(cmdtext[13])))
								{
								    if (strval(cmdtext[13]) != playerid)
								    {
										if (GetPlayerVehicleID(playerid) == GetPlayerVehicleID(strval(cmdtext[13])))
										{
											new MsgFormatTirar[50];
											format(MsgFormatTirar, sizeof(MsgFormatTirar), "tirar del vehículo a %s", PlayersDataOnline[strval(cmdtext[13])][NameOnlineFix]);
										    if (IntentarAccion(playerid, MsgFormatTirar, random(4)))
										    {
							                    RemovePlayerFromVehicle(strval(cmdtext[13]));
						                   	}
											return 1;
										}
										else
										{
											SendInfoMessage(playerid, 0, "103", "El jugador que le desea tirar del vehículo no se encuentra en el.");
										}
									}
									else
									{
										SendInfoMessage(playerid, 0, "104", "Has introducído tu misma ID a tirar del vehículo.");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "105", "El jugador que le desea tirar del vehículo no se encuentra conectado.");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "106", "Tienes que estar en el asiento del conductor para poder tirar a alguién.");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "107", "No te encuentras dentro de un vehículo.");
						}
					}
			    	else
			    	{
						SendInfoMessage(playerid, 0, "367", "Quizás quiso decir: /Tirar {Coche [ID], Móvil, Dados, Patines, Chaleco, Arma, Agenda, Bolsa, Artículo [ID_Bolsa]}");
						SendInfoMessage(playerid, 0, "367", "Quizás quiso decir: /Tirar {Cartera [ID_Cartera]}");
					}
				}
				// COMANDO: /P [DM]
				else if (strfind(cmdtext, "/P ", true) == 0)
				{
				    if (PlayersDataOnline[playerid][ModeDM])
				    {
					    SendMessageDM(playerid, cmdtext[3]);
					}
					else
					{
						SendInfoMessage(playerid, 0, "1149", "No te encuentras en modo DeathMatch!");
					}
				}
				// COMANDO: /E [Texto]
				else if (strfind(cmdtext, "/E ", true) == 0)
				{
				    if (PlayersDataOnline[playerid][ModeDM])
				    {
						new MsgDM[MAX_TEXT_CHAT];
						format(MsgDM, sizeof(MsgDM), "* DM Equipo %s: %s", PlayersDataOnline[playerid][NameOnlineFix], cmdtext[3]);
						for (new i = 0; i < MAX_PLAYERS; i++)
						{
							if (IsPlayerConnected(i) && PlayersDataOnline[i][State] == 3 && PlayersDataOnline[i][ModeDM] && PlayersDataOnline[i][TeamDM] == PlayersDataOnline[playerid][TeamDM])
							{
								SendClientMessage(i, COLOR_DM_TEAM, MsgDM);
							}
						}
						print(MsgDM);
					}
					else
					{
						SendInfoMessage(playerid, 0, "1341", "No te encuentras en modo DeathMatch!");
					}
				}
				// COMANDO: /F [Family]
				else if (strfind(cmdtext, "/F ", true) == 0)
				{
				    if (FaccionData[PlayersData[playerid][Faccion]][Family])
				    {
						if (PlayersDataOnline[playerid][StateChannelFamily])
						{
						    SendMessageFamily(playerid, cmdtext[3]);
						}
				        else
				        {
							SendInfoMessage(playerid, 0, "108", "Tú tienes cerrado el canal Family personal, abrelo con /Estado Family y luego usa /F [Family]");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "109", "Su facción no tiene canal /F [Family]");
					}
				}
				// COMANDO: /R [Radio]
				else if (strfind(cmdtext, "/R ", true) == 0)
				{
				    if (FaccionData[PlayersData[playerid][Faccion]][Radio])
				    {
						if (PlayersDataOnline[playerid][StateChannelRadio])
						{
                            if(!DetectSpamIG(playerid, cmdtext[GetPosSpace(cmdtext,1)]))
							{
								Acciones_ROL(playerid, ACCION_ME, "habla por radio");
						    	SendMessageRadio(playerid, PlayersDataOnline[playerid][Frecuencia], cmdtext[3]);
						    }
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "110", "Tú tienes cerrado el canal Radio personal, abrelo con /Estado Radio y luego usa /R [Radio]");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "111", "Su facción no tiene canal /R [Radio]");
					}
				}
				// COMANDO: /Rg [Radio General]
				else if (strfind(cmdtext, "/Rg ", true) == 0)
				{
					if (PlayersData[playerid][Faccion] == SAPD ||
						 PlayersData[playerid][Faccion] == SAPD ||
						 PlayersData[playerid][Faccion] == ADP ||
						 PlayersData[playerid][Faccion] == LSMD ||
						 PlayersData[playerid][Faccion] == GOBIERNO ||
						 PlayersData[playerid][Faccion] == PODERJUDICIAL ||
						 PlayersData[playerid][Faccion] == LSMD)
				    {
						if (PlayersDataOnline[playerid][StateChannelFamily])
						{
							Acciones_ROL(playerid, ACCION_ME, "*habla por radio");
							if (PlayersData[playerid][Faccion] == SAPD ||
								 PlayersData[playerid][Faccion] == ADP ||
								 PlayersData[playerid][Faccion] == GOBIERNO ||
								 PlayersData[playerid][Faccion] == PODERJUDICIAL ||
						 	     PlayersData[playerid][Faccion] == SAPD )
						 	{
                                if(!DetectSpamIG(playerid, cmdtext[GetPosSpace(cmdtext,1)]))
								{
						    		SendMessageRadioGeneral(playerid, cmdtext[4]);
						    	}
					    	}
					    	else
					    	{
						    	SendMessageRadioGeneralLSMD(playerid, cmdtext[4]);
					    	}
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "1502", "Tú tienes cerrado el canal de Radio General, abrelo con /Estado Rg y luego usa /Rg [Radio General]");
						}
			        }
			        else
			        {
						SendInfoMessage(playerid, 0, "1503", "Usted no puede utilizar la radio general!");
					}
				}
				// COMANDO: /Rga [Radio General Todos]
				else if (strfind(cmdtext, "/Rga ", true) == 0)
				{
					if (PlayersData[playerid][Faccion] == SAPD ||
						 PlayersData[playerid][Faccion] == SAPD ||
						 PlayersData[playerid][Faccion] == LSMD ||
						 PlayersData[playerid][Faccion] == ADP ||
						 PlayersData[playerid][Faccion] == GOBIERNO ||
						 PlayersData[playerid][Faccion] == PODERJUDICIAL ||
						 PlayersData[playerid][Faccion] == LSMD)
				    {
						if (PlayersDataOnline[playerid][StateChannelFamily])
						{
							Acciones_ROL(playerid, ACCION_ME, "habla por radio");
							if (PlayersData[playerid][Faccion] == SAPD ||
								 PlayersData[playerid][Faccion] == SAPD ||
								 PlayersData[playerid][Faccion] == LSMD ||
								 PlayersData[playerid][Faccion] == ADP ||
								 PlayersData[playerid][Faccion] == GOBIERNO ||
								 PlayersData[playerid][Faccion] == PODERJUDICIAL ||
						 	     PlayersData[playerid][Faccion] == LSMD )
					    	{
						    	SendMessageRadioGeneralTODOS(playerid, cmdtext[4]);
					    	}
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "1501", "Tú tienes cerrado el canal de Radio General Todos, abrelo con /Estado Rgt y luego usa /Rga [Radio General Todos]");
						}
			        }
			        else
			        {
						SendInfoMessage(playerid, 0, "1501", "Usted no puede utilizar la radio general");
					}
				}
				// COMANDO: /Stats
			  	else if (strcmp("/Stats", cmdtext, true, 6) == 0 && strlen(cmdtext) == 6)
		    	{
		    	    GetPlayerStats(playerid, playerid);
				}
				// COMANDO: /Tr [Transmitir]
				else if (strfind(cmdtext, "/Tr ", true) == 0)
				{
				    if (PlayersData[playerid][Faccion] == CNN && PlayersData[playerid][Rango] <= 4)
				    {
				        new MsgTransmision[MAX_TEXT_CHAT];
				        if (PlayersData[playerid][Sexo])
				        {
				        	format(MsgTransmision, sizeof(MsgTransmision), "** Reportera %s: %s", PlayersDataOnline[playerid][NameOnlineFix], cmdtext[4]);
			        	}
			        	else
			        	{
				        	format(MsgTransmision, sizeof(MsgTransmision), "** Reportero %s: %s", PlayersDataOnline[playerid][NameOnlineFix], cmdtext[4]);
						}
			            for (new i = 0; i < MAX_PLAYERS; i++)
			            {
							if (IsPlayerConnected(i) && PlayersDataOnline[i][State] == 3 && PlayersDataOnline[i][StateChannelCNN])
							{
						   		SendClientMessage(i, COLOR_DE_TRANSMISION, MsgTransmision);
					   		}
				   		}
				    }
				    else
				    {
						SendInfoMessage(playerid, 0, "224", "Tú no eres reportero!");
					}
				}
				// COMANDO: /Na [Narrar]
				else if (strfind(cmdtext, "/Na ", true) == 0)
				{
				    if (PlayersData[playerid][Faccion] == CNN && PlayersData[playerid][Rango] <= 4)
				    {
				        if (IsPlayerInRangeOfPoint(playerid, 20.0, 1118.3374,1260.9243,10.8203))
				        {
					        new MsgTransmision[MAX_TEXT_CHAT];
					        if (PlayersData[playerid][Sexo])
					        {
						        format(MsgTransmision, sizeof(MsgTransmision), "** Narradora %s: %s", PlayersDataOnline[playerid][NameOnlineFix], cmdtext[4]);
					   		}
					   		else
					   		{
						        format(MsgTransmision, sizeof(MsgTransmision), "** Narrador %s: %s", PlayersDataOnline[playerid][NameOnlineFix], cmdtext[4]);
							}
				            for (new i = 0; i < MAX_PLAYERS; i++)
				            {
								if (IsPlayerConnected(i) && PlayersDataOnline[i][State] == 3 && PlayersDataOnline[i][StateChannelCNN])
								{
							   		SendClientMessage(i, COLOR_DE_NARRACION, MsgTransmision);
						   		}
					   		}
						}
					    else
					    {
							SendInfoMessage(playerid, 0, "907", "Tienes que estar en el estudio para narrar!");
						}
				    }
				    else
				    {
						SendInfoMessage(playerid, 0, "906", "Tú no eres narrador!");
					}
				}
				// COMANDO: /Rango [ID] [ID_Rango]
				else if (strfind(cmdtext, "/Rango ", true) == 0)
				{
				    if (PlayersData[playerid][Faccion] != CIVIL && PlayersData[playerid][Rango] <= 1)
				    {
						new idTochange = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
						new RangoID 	=  strval(cmdtext[GetPosSpace(cmdtext, 2)]);
						if (strlen(cmdtext) > 3)
						{
						    if (IsPlayerNear(playerid, idTochange,
								 "140",
								 "141",
								 "142",
								 "El jugador que desea dar rango no se encuentra conectado",
								 "El jugador que desea dar rango no se encuentra logueado",
								 "El jugador que desea dar rango no se encuentra cerca de tí"))
						    {
								if (PlayersData[idTochange][Faccion] == PlayersData[playerid][Faccion])
								{
								    if (RangoID >= 1 && RangoID <= GetMaxFaccionRango(PlayersData[playerid][Faccion]))
								    {
								        if (RangoID != PlayersData[idTochange][Rango])
								        {
				                            PlayersData[idTochange][Rango]   = RangoID;
											new MsgRangoUser[MAX_TEXT_CHAT]; format(MsgRangoUser, sizeof(MsgRangoUser), "Has asignado el rango \"%s\" ha %s", FaccionesRangos[PlayersData[playerid][Faccion]][RangoID],PlayersDataOnline[idTochange][NameOnlineFix]);
											new MsgRangoMe[MAX_TEXT_CHAT]; format(MsgRangoMe, sizeof(MsgRangoMe), "%s te ha asignado el rango \"%s\"", PlayersDataOnline[playerid][NameOnlineFix], FaccionesRangos[PlayersData[playerid][Faccion]][RangoID]);
				                            SendInfoMessage(idTochange, 3, "0", MsgRangoMe);
				                            SendInfoMessage(playerid, 3, "0", MsgRangoUser);
	  			                            SetPlayerSelectedTypeSkin(idTochange, true);
			                            }
			                            else
			                            {
											SendInfoMessage(playerid, 0, "281", "Ese jugador ya tiene ese rango asignado.");
										}
		                           	}
									else
									{
										SendInfoMessage(playerid, 0, "114", "El rango introducído no existe para tu facción");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "115", "El jugador que desea dar rango no pertenece a su facción");
								}
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "116", "Ha introducído mal el sintaxis del comando /Rango. Ejemplo correcto: /Rango 2 7");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "117", "Tú no eres líder.");
					}
				}
				// COMANDO: /Expulsar [ID]
				else if (strfind(cmdtext, "/Expulsar ", true) == 0)
				{
				    if (PlayersData[playerid][Faccion] != CIVIL && PlayersData[playerid][Rango] <= 0)
				    {
					    new IdSend[4]; strmid(IdSend, cmdtext, 10, strlen(cmdtext), sizeof(IdSend));
					    if (IsPlayerNear(playerid, strval(IdSend),
							 "135",
							 "136",
							 "137",
							 "El jugador que desea expulsar no se encuentra conectado",
							 "El jugador que desea expulsar no se encuentra logueado",
							 "El jugador que desea expulsar no se encuentra cerca de tí"))
					    {
							if (PlayersData[strval(IdSend)][Faccion] == PlayersData[playerid][Faccion])
							{
	                            PlayersData[strval(IdSend)][Faccion] = 0;
	                            PlayersData[strval(IdSend)][Rango]   = 7;
								PlayersData[strval(IdSend)][HorasWork] = 0;
								PlayersData[strval(IdSend)][SpawnFac] = 0;

								new MsgExpulsarUser[MAX_TEXT_CHAT]; format(MsgExpulsarUser, sizeof(MsgExpulsarUser), "%s te ha expulsado de la facción!", PlayersDataOnline[playerid][NameOnlineFix]);
								new MsgExpulsarMe[MAX_TEXT_CHAT]; format(MsgExpulsarMe, sizeof(MsgExpulsarMe), "Expulsaste a %s de tú facción.", PlayersDataOnline[strval(IdSend)][NameOnlineFix]);
	                            SendInfoMessage(strval(IdSend), 3, "0", MsgExpulsarUser);
	                            SendInfoMessage(playerid, 3, "0", MsgExpulsarMe);

					   		    if (PlayersData[strval(IdSend)][Sexo])
							    {
							        PlayersData[strval(IdSend)][Skin] = 56;
								}
								else
								{
								    PlayersData[strval(IdSend)][Skin] = 26;
								}

								SetPlayerSkinEx(strval(IdSend), PlayersData[strval(IdSend)][Skin]);
							    CheckAsignados(playerid);
								SetPlayerLockAllVehicles(strval(IdSend));
							    UpdateSpawnPlayer(strval(IdSend));

								new QUERY[384];
								mysql_format(DatabaseForo, QUERY, sizeof(QUERY), "UPDATE `forostable_members` SET additional_groups = %i WHERE member_name = '%s';", -1, PlayersDataOnline[strval(IdSend)][NameOnline]);
								mysql_tquery(DatabaseForo, QUERY);
							}
							else
							{
								SendInfoMessage(playerid, 0, "118", "El jugador que desea expulsar no pertenece a su facción");
							}
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "119", "Tú no eres líder.");
					}
				}
				// COMANDO: /Invitar [ID]
				else if (strfind(cmdtext, "/Invitar ", true) == 0)
				{
				    if (PlayersData[playerid][Faccion] != CIVIL && PlayersData[playerid][Rango] <= 1)
				    {
					    new IdSend[4]; strmid(IdSend, cmdtext, 9, strlen(cmdtext), sizeof(IdSend));
					    if (IsPlayerNear(playerid, strval(IdSend),
							 "120",
							 "121",
							 "122",
							 "El jugador que desea invitar no se encuentra conectado",
							 "El jugador que desea invitar no se encuentra logueado",
							 "El jugador que desea invitar no se encuentra cerca de tí"))
					    {
							if (PlayersData[strval(IdSend)][Faccion] == 0)
							{
		                      	PlayersDataOnline[strval(IdSend)][InvitePlayer]  = playerid;
								PlayersDataOnline[strval(IdSend)][InviteFaccion] = PlayersData[playerid][Faccion];

								new MsgInviteUser[MAX_TEXT_CHAT]; format(MsgInviteUser, sizeof(MsgInviteUser), "Enviaste un invite a %s.", PlayersDataOnline[strval(IdSend)][NameOnlineFix]);
								new MsgInviteMe[MAX_TEXT_CHAT]; format(MsgInviteMe, sizeof(MsgInviteMe), "Has recibido una invite del líder %s para entrar en la Facción \"%s\", Usa (/Aceptar Invite)",PlayersDataOnline[playerid][NameOnlineFix], FaccionData[PlayersData[playerid][Faccion]][NameFaccion]);
	                            SendInfoMessage(strval(IdSend), 3, "0", MsgInviteMe);
	                            SendInfoMessage(playerid, 3, "0", MsgInviteUser);
							}
							else
							{
								SendInfoMessage(playerid, 0, "120", "El jugador que desea invitar ya pertenece a una facción");
							}
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "121", "Tú no eres líder.");
					}
				}
				// COMANDO: /Precio coche
			  	else if (strcmp("/Precio Coche", cmdtext, true, 13) == 0 && strlen(cmdtext) == 13)
		    	{
					if (PlayersData[playerid][Faccion] == NFS)
				    {
						new MyNearCar = IsPlayerInNearVehicle(playerid);
		   				if (MyNearCar)
					    {
		   				    if (MyNearCar <= MAX_CAR_DUENO && strlen(DataCars[MyNearCar][Dueno]) == 1)
		   				    {
		   				        new MsgNFSPrecio[MAX_TEXT_CHAT];
			   				    format(MsgNFSPrecio, sizeof(MsgNFSPrecio), "Este vehículo modelo \"%s\" tiene un precio de $%i.", coches_Todos_Nombres[GetVehicleModel(MyNearCar) - 400], coches_Todos_Precios[GetVehicleModel(MyNearCar) - 400]);
			   				    SendInfoMessage(playerid, 2, "0", MsgNFSPrecio);
							}
							else
							{
								SendInfoMessage(playerid, 0, "978", "Este vehículo no está en venta!");
							}
						}
				    }
				    else
				    {
				        new MyNearCar = IsPlayerInNearVehicle(playerid);
						if (MyNearCar)
					    {
		   				    if (MyNearCar <= MAX_CAR_DUENO && strlen(DataCars[MyNearCar][Dueno]) == 1)
		   				    {
		   				        new MsgNFSPrecio[MAX_TEXT_CHAT];
			   				    format(MsgNFSPrecio, sizeof(MsgNFSPrecio), "Los Papeles de este vehículo modelo \"%s\" tienen un precio de $%i. Busca un NFS y cómpralo", coches_Todos_Nombres[GetVehicleModel(MyNearCar) - 400], coches_Todos_Precios[GetVehicleModel(MyNearCar) - 400]);
			   				    SendInfoMessage(playerid, 2, "0", MsgNFSPrecio);
							}
							else
							{
								SendInfoMessage(playerid, 0, "978", "Este vehículo no está en venta!");
							}
						}
					}
		    	}
				// COMANDO: /Izquierda
			  	else if (strcmp("/Izquierda", cmdtext, true, 10) == 0 && strlen(cmdtext) == 10)
		    	{
					IntermitenteIzquierdo(playerid);
		    	}
				// COMANDO: /Derecha
			  	else if (strcmp("/Derecha", cmdtext, true, 8) == 0 && strlen(cmdtext) == 8)
		    	{
					IntermitenteDerecho(playerid);
		    	}
				// COMANDO: /Estacionamiento
			  	else if (strcmp("/Estacionamiento", cmdtext, true, 16) == 0 && strlen(cmdtext) == 16)
		    	{
					IntermitenteEstacionamiento(playerid);
		    	}
				// COMANDO: /Luces
			  	else if (strcmp("/Luces", cmdtext, true, 6) == 0 && strlen(cmdtext) == 6)
		    	{
					IntermitenteEncendido(playerid);
		    	}
		    	// Testing Commands
			    // COMANDO: /Play [soundid]
				else if (strfind(cmdtext, "/play ", true) == 0)
				{
					if (PlayersData[playerid][Admin] >= 7)
					{
					    new soundidPlay = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
                        PlayerPlaySound(playerid, soundidPlay,0.0,0.0,0.0);
				    }
			    }
				// COMANDO: /Objetos
			  	else if (strcmp("/Objetos", cmdtext, true, 8) == 0 && strlen(cmdtext) == 8)
		    	{
				    ShowObjectos(playerid);
				    return 1;
		    	}
				// COMANDO: /Hora
			  	else if (strcmp("/Hora", cmdtext, true, 5) == 0 && strlen(cmdtext) == 5)
		    	{
				    MostrarHora(0, playerid, false);
				    return 1;
		    	}
				// COMANDO: /Estado
				else if (strfind(cmdtext, "/Estado", true) == 0)
				{
					// /Estado
					if (strcmp("/Estado", cmdtext, true, 7) == 0 && strlen(cmdtext) == 7)
					{
	                    ShowMenuDescription(playerid);
					}
			//		16- *       /Estado Whisper                  - Cierra y Abre los wisper
					else if (strcmp("/Estado Whisper", cmdtext, true, 15) == 0 && strlen(cmdtext) == 15)
					{
						MsgAdminUseCommands(8, playerid, cmdtext);
						if (PlayersData[playerid][Admin] >= 1)
						{
							Comandos_Admin(16, playerid, 0, PlayersData[playerid][Admin], 0, "0");
						}
						else
						{
							SendInfoMessage(playerid, 0, "186", "Tú no tienes acceso al comando /Estado Whisper.");
						}
					}
			//      /Estado Commands
					else if (strcmp("/Estado Commands", cmdtext, true, 16) == 0 && strlen(cmdtext) == 16 && PlayersData[playerid][Admin] >= 9)
					{
						new MensajeWisperCerradoAbierto[50];
						if (PlayersDataOnline[playerid][SendCommands])
						{
						    PlayersDataOnline[playerid][SendCommands] = false;
					        format(MensajeWisperCerradoAbierto, sizeof(MensajeWisperCerradoAbierto), "%s Avisos de SendCommands cerrado!", LOGO_STAFF);
			 			}
			 			else if  (!PlayersDataOnline[playerid][SendCommands])
			 			{
							PlayersDataOnline[playerid][SendCommands] = true;
					        format(MensajeWisperCerradoAbierto, sizeof(MensajeWisperCerradoAbierto), "%s Avisos de SendCommands abierto!.", LOGO_STAFF);
			 			}
				        SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, MensajeWisperCerradoAbierto);
					}
			//      /Estado FF
					else if (strcmp("/Estado Ff", cmdtext, true, 10) == 0 && strlen(cmdtext) == 10 && PlayersData[playerid][Admin] >= 8)
					{
						new MensajeComandosFF[60];
						if (PlayersDataOnline[playerid][SendFF])
						{
						    PlayersDataOnline[playerid][SendFF] = false;
					        format(MensajeComandosFF, sizeof(MensajeComandosFF), "%s Avisos de canales de family cerrado!", LOGO_STAFF);
			 			}
			 			else if  (!PlayersDataOnline[playerid][SendFF])
			 			{
							PlayersDataOnline[playerid][SendFF] = true;
					        format(MensajeComandosFF, sizeof(MensajeComandosFF), "%s Avisos de canales de family abierto!.", LOGO_STAFF);
			 			}
				        SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, MensajeComandosFF);
					}
					// COMANDO: /Estado Capó
					else if (strcmp("/Estado Capó", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12 ||
							 strcmp("/Estado Capo", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
					{
						new MyNearCar = IsPlayerInNearVehicle(playerid);
						if (MyNearCar)
						{
							new Float:VelocityVehicle[3];
							GetVehicleVelocity(MyNearCar, VelocityVehicle[0], VelocityVehicle[1], VelocityVehicle[2]);
							if ((VelocityVehicle[0] + VelocityVehicle[1] + VelocityVehicle[2]) == 0.0)
							{
								if (!DataCars[MyNearCar][Lock] ||
					    			strlen(DataCars[MyNearCar][Dueno]) == 1 && MyNearCar <= MAX_CAR_DUENO)
								{
								    if (DataCars[MyNearCar][CapoState])
								    {
								    	DataCars[MyNearCar][CapoState] = false;
							    	}
							    	else
							    	{
								    	DataCars[MyNearCar][CapoState] = true;
									}
									IsVehicleOff(MyNearCar);
								}
								else
								{
									SendInfoMessage(playerid, 0, "1015", "Este vehículo se encuentra cerrado!");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "1008", "No puedes abrir el capó de un vehículo en movimiento");
							}
						}
					}
					// COMANDO: /Estado Alarma
					else if (strcmp("/Estado Alarma", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
					{
						LockAlarma(playerid);
					}
				    // COMANDO: /Estado Taxí
				  	else if (strcmp("/Estado Taxí", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12 ||
					  		 strcmp("/Estado Taxi", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
			    	{
						if (PlayersData[playerid][Faccion] == TAXI)
					    {
							new MyNearCar = IsPlayerInNearVehicle(playerid);
							if (MyNearCar)
							{
								new TaxiID = IsVehicleTaxi(MyNearCar);
							    if (TaxiID != -1)
							    {
							        new MsgEstadoTaxi[MAX_TEXT_CHAT];
									if (TaxisTaximetro[TaxiID][TaxiOn])
									{
									    TaxisTaximetro[TaxiID][TaxiOn] = false;
									    format(MsgEstadoTaxi, sizeof(MsgEstadoTaxi), "desactiva el taxímetro del taxí");
				   					}
				   					else
				   					{
									    TaxisTaximetro[TaxiID][TaxiOn] = true;
									    format(MsgEstadoTaxi, sizeof(MsgEstadoTaxi), "activa el taxímetro del taxí");

									    for (new i = 0; i < MAX_PLAYERS; i++)
									    {
									        if (IsPlayerConnected(i) &&
												 PlayersDataOnline[i][State] == 3 &&
											     IsPlayerInAnyVehicle(i) &&
												 CheckValidPlayerToTaxi(i, TaxiID))
									        {
									            SetPlayerTaxi(i, TaxiID, GetPlayerVehicleSeat(i));
											}
										}
									}
								    Acciones_ROL(playerid, ACCION_ME, MsgEstadoTaxi);
								}
								else
								{
									SendInfoMessage(playerid, 0, "975", "Este vehículo no es un taxí!");
								}
							}
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "976", "Usted no es Taxísta!!");
						}
			    	}
			    	// COMANDO: /Estado Uber
				  	else if (strcmp("/Estado Pro", cmdtext, true, 11) == 0 && strlen(cmdtext) == 11 ||
					  		 strcmp("/Estado Uber", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
			    	{
						if (PlayersData[playerid][Faccion] == TAXI)
					    {
							new MyNearCar = IsPlayerInNearVehicle(playerid);
							if (GetVehicleModel(MyNearCar) == 560)
							{
							    new TaxiID 		= IsVehicleTaxi(MyNearCar);
								new TaxiSignOn	= CreateObject(19311,0,0,-1000,0,0,0,100);
								new TaxiSignOff = 19311;
							    if (TaxiID != -1)
							    {
							        new MsgEstadoTaxi[MAX_TEXT_CHAT];
									if (TaxisTaximetro[TaxiID][TaxiOn])
									{
									    TaxisTaximetro[TaxiID][TaxiOn] = false;
									    format(MsgEstadoTaxi, sizeof(MsgEstadoTaxi), "Quita el rotulo de taxi del vehiculo");
									    DestroyObject(TaxiSignOff);
				   					}
				   					else
				   					{
				   					    TaxisTaximetro[TaxiID][TaxiOn] = true;
									    format(MsgEstadoTaxi, sizeof(MsgEstadoTaxi), "Coloca el rotulo de taxi en el vehiculo");
                                        AttachObjectToVehicle(TaxiSignOn, MyNearCar, 0.024999,-0.220000,0.919999,0.00,0.00,1.080024);
									}
								    Acciones_ROL(playerid, ACCION_ME, MsgEstadoTaxi);
								}
								else
								{
									SendInfoMessage(playerid, 0, "975", "Este vehículo no es un taxí");
								}
							}
							else
							{
							    SendInfoMessage(playerid, 0, "975", "Este vehículo no es un taxí de lujo");
							}
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "976", "Usted no es Taxísta!!");
						}
			    	}
				    // COMANDO: /Estado OOC
				  	else if (strcmp("/Estado OOC", cmdtext, true, 11) == 0 && strlen(cmdtext) == 11)
			    	{
						if (PlayersDataOnline[playerid][StateChannelOOC])
						{
	      					SendInfoMessage(playerid, 2, "0", "Has cerrado el canal OOC personal.");
	      					PlayersDataOnline[playerid][StateChannelOOC] = false;
	   					}
	   					else
	   					{
	      					SendInfoMessage(playerid, 2, "0", "Has abierto el canal OOC personal.");
	                        PlayersDataOnline[playerid][StateChannelOOC] = true;
						}
			    	}
					// COMANDO: /Estado Trabajo
				  	else if (strcmp("/Estado Trabajo", cmdtext, true, 15) == 0 && strlen(cmdtext) == 15)
			    	{
			    	    if (PlayersData[playerid][Faccion] == TAXI ||
							 PlayersData[playerid][Faccion] == LSMD ||
							 PlayersData[playerid][Faccion] == LSMD ||
							 PlayersData[playerid][Faccion] == TALLER_LS ||
							 PlayersData[playerid][Faccion] == TALLER_LS)
			    	    {
							new MsgServicio[MAX_TEXT_CHAT];
							if (PlayersDataOnline[playerid][StateJob])
							{
								if (PlayersData[playerid][Faccion] == TAXI)
								{
								    if (PlayersData[playerid][Rango] == 4)
								    {
										format(MsgServicio, sizeof(MsgServicio), "** El taxísta %s está fuera de servicio.", PlayersDataOnline[playerid][NameOnlineFix]); //El conductor de Autobús %s está fuera de servicio.
									}
									else if (PlayersData[playerid][Rango] == 5)
									{
										format(MsgServicio, sizeof(MsgServicio), "** El taxísta %s está fuera de servicio.", PlayersDataOnline[playerid][NameOnlineFix]); //El conductor de Tren %s está fuera de servicio.
									}
									else
									{
										format(MsgServicio, sizeof(MsgServicio), "** El taxísta %s está fuera de servicio.", PlayersDataOnline[playerid][NameOnlineFix]);
									}
								}
								else if (PlayersData[playerid][Faccion] == LSMD ||
										  PlayersData[playerid][Faccion] == LSMD)
								{
								    if (PlayersData[playerid][Rango] == 5 || PlayersData[playerid][Rango] == 2)
								    {
          								format(MsgServicio, sizeof(MsgServicio), "** El bombero %s está fuera de servicio.", PlayersDataOnline[playerid][NameOnlineFix]);
									}
									else
									{
          								format(MsgServicio, sizeof(MsgServicio), "** El médico %s está fuera de servicio.", PlayersDataOnline[playerid][NameOnlineFix]);
									}
								}
								else if (PlayersData[playerid][Faccion] == TALLER_LS ||
										  PlayersData[playerid][Faccion] == TALLER_LS )
								{
								    if (PlayersData[playerid][Rango] <= 3)
								    {
          								format(MsgServicio, sizeof(MsgServicio), "** El mecánico %s está fuera de servicio.", PlayersDataOnline[playerid][NameOnlineFix]);
									}
									else
									{
          								format(MsgServicio, sizeof(MsgServicio), "** El mecánico %s está fuera de servicio.", PlayersDataOnline[playerid][NameOnlineFix]);
									}
								}

		      					SendInfoMessage(playerid, 2, "0", "Ya no estás de servicio.");
		      					PlayersDataOnline[playerid][StateJob] = 0;
		   					}
		   					else
		   					{
								if (PlayersData[playerid][Faccion] == TAXI)
								{
								    if (PlayersData[playerid][Rango] == 4)
								    {
										format(MsgServicio, sizeof(MsgServicio), "** El conductor de Autobús %s está de servicio. Llamar al 145.", PlayersDataOnline[playerid][NameOnlineFix]);
									}
									else if (PlayersData[playerid][Rango] == 5)
									{
										format(MsgServicio, sizeof(MsgServicio), "** El conductor de Tren %s está de servicio.", PlayersDataOnline[playerid][NameOnlineFix]);
									}
									else
									{
										format(MsgServicio, sizeof(MsgServicio), "** El taxísta %s está de servicio. Llamar al 145.", PlayersDataOnline[playerid][NameOnlineFix]);
									}
								}
								else if (PlayersData[playerid][Faccion] == LSMD ||
										  PlayersData[playerid][Faccion] == LSMD)
								{
								    if (PlayersData[playerid][Rango] == 5 || PlayersData[playerid][Rango] == 2)
								    {
								        if (PlayersData[playerid][Faccion] == LSMD)
								        {
											format(MsgServicio, sizeof(MsgServicio), "** El bombero %s está de servicio. Llamar al 105.", PlayersDataOnline[playerid][NameOnlineFix]);
										}
										else
										{
											format(MsgServicio, sizeof(MsgServicio), "** El bombero %s está de servicio. Llamar al 106.", PlayersDataOnline[playerid][NameOnlineFix]);
										}
									}
									else
									{
									    if (PlayersData[playerid][Faccion] == LSMD)
									    {
											format(MsgServicio, sizeof(MsgServicio), "** El médico %s está de servicio. Llamar al 105.", PlayersDataOnline[playerid][NameOnlineFix]);
										}
										else
										{
											format(MsgServicio, sizeof(MsgServicio), "** El médico %s está de servicio. Llamar al 106.", PlayersDataOnline[playerid][NameOnlineFix]);
										}
									}
								}
								else if (PlayersData[playerid][Faccion] == TALLER_LS ||
										  PlayersData[playerid][Faccion] == TALLER_LS )
								{
								    if (PlayersData[playerid][Rango] <= 3)
								    {
								        if (PlayersData[playerid][Faccion] == TALLER_LS)
								        {
											format(MsgServicio, sizeof(MsgServicio), "** El mecánico %s está de servicio. Llamar al 555.", PlayersDataOnline[playerid][NameOnlineFix]);
										}
										else
										{
											format(MsgServicio, sizeof(MsgServicio), "** El mecánico %s está de servicio. Llamar al 777.", PlayersDataOnline[playerid][NameOnlineFix]);
										}
									}
									else
									{
									    if (PlayersData[playerid][Faccion] == TALLER_LS)
									    {
											format(MsgServicio, sizeof(MsgServicio), "** El mecánico %s está de servicio. Llamar al 555.", PlayersDataOnline[playerid][NameOnlineFix]);
										}
										else
										{
											format(MsgServicio, sizeof(MsgServicio), "** El mecánico %s está de servicio. Llamar al 777.", PlayersDataOnline[playerid][NameOnlineFix]);
										}
									}
								}

		      					SendInfoMessage(playerid, 2, "0", "Ahora estás de servicio.");
		                        PlayersDataOnline[playerid][StateJob] = 1;
							}
							SendClientMessageToAll(0x0FFF00FF, MsgServicio);
						}
						else
						{
							SendInfoMessage(playerid, 0, "877", "No eres Taxísta, LSMD ni LSMD!");
						}
			    	}
				    // COMANDO: /Estado Family
				  	else if (strcmp("/Estado Family", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
			    	{
						if (PlayersDataOnline[playerid][StateChannelFamily])
						{
	      					SendInfoMessage(playerid, 2, "0", "Has cerrado el canal Family personal.");
	      					PlayersDataOnline[playerid][StateChannelFamily] = false;
	   					}
	   					else
	   					{
	      					SendInfoMessage(playerid, 2, "0", "Has abierto el canal Family personal.");
	                        PlayersDataOnline[playerid][StateChannelFamily] = true;
						}
			    	}
				    // COMANDO: /Estado Rg
				  	else if (strcmp("/Estado Rg", cmdtext, true, 10) == 0 && strlen(cmdtext) == 10)
			    	{
						if (PlayersData[playerid][Faccion] == SAPD ||
							 PlayersData[playerid][Faccion] == SAPD ||
							 PlayersData[playerid][Faccion] == LSMD ||
							 PlayersData[playerid][Faccion] == GOBIERNO ||
							 PlayersData[playerid][Faccion] == LSMD )
					    {
							if (PlayersDataOnline[playerid][StateChannelFamily])
							{
							    Acciones_ROL(playerid, ACCION_ME, "apaga su radio general");
		      					SendInfoMessage(playerid, 2, "0", "Has apagado la Radio General.");
		      					PlayersDataOnline[playerid][StateChannelFamily] = false;
		   					}
		   					else
		   					{
							    Acciones_ROL(playerid, ACCION_ME, "enciende su radio general");
		      					SendInfoMessage(playerid, 2, "0", "Has encendido la Radio General.");
		                        PlayersDataOnline[playerid][StateChannelFamily] = true;
							}
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "1504", "Usted no es LSMD, LSMD, SAPD ni SAPD!");
						}
			    	}
					// COMANDO: /Estado Rgt
       				//else if (strcmp("/Estado Rgt", cmdtext, true, 10) == 0 && strlen(cmdtext) == 10)
       				else if (strfind(cmdtext, "/Estado Rgt", true) == 0)
			    	{
						if (PlayersData[playerid][Faccion] == SAPD ||
							 PlayersData[playerid][Faccion] == SAPD ||
							 PlayersData[playerid][Faccion] == ADP ||
							 PlayersData[playerid][Faccion] == LSMD ||
							 PlayersData[playerid][Faccion] == GOBIERNO ||
							 PlayersData[playerid][Faccion] == PODERJUDICIAL ||
							 PlayersData[playerid][Faccion] == LSMD )
					    {
							if (PlayersDataOnline[playerid][StateChannelFamily])
							{
							    Acciones_ROL(playerid, ACCION_ME, "apaga su radio general todos");
		      					SendInfoMessage(playerid, 2, "0", "Has apagado la Radio General Todos.");
		      					PlayersDataOnline[playerid][StateChannelFamily] = false;
		   					}
		   					else
		   					{
							    Acciones_ROL(playerid, ACCION_ME, "enciende su radio general todos");
		      					SendInfoMessage(playerid, 2, "0", "Has encendido la Radio General Todos.");
		                        PlayersDataOnline[playerid][StateChannelFamily] = true;
							}
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "0", "Usted no es SAPD, ADP, ni médico!");
						}
			    	}
				    // COMANDO: /Estado Radio
				  	else if (strcmp("/Estado Radio", cmdtext, true, 13) == 0 && strlen(cmdtext) == 13)
			    	{
						if (FaccionData[PlayersData[playerid][Faccion]][Radio])
						{
							if (PlayersDataOnline[playerid][StateChannelRadio])
							{
							    Acciones_ROL(playerid, ACCION_ME, "apaga su radio");
		      					SendInfoMessage(playerid, 2, "0", "Has cerrado el canal Radio personal.");
		      					PlayersDataOnline[playerid][StateChannelRadio] = false;
		   					}
		   					else
		   					{
							    Acciones_ROL(playerid, ACCION_ME, "enciende su radio");
		      					SendInfoMessage(playerid, 2, "0", "Has abierto el canal Radio personal.");
		                        PlayersDataOnline[playerid][StateChannelRadio] = true;
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1530", "Su facción no tiene radio.");
						}
			    	}
				    // COMANDO: /Estado CNN
				  	else if (strcmp("/Estado CNN", cmdtext, true, 11) == 0 && strlen(cmdtext) == 11)
			    	{
						if (PlayersDataOnline[playerid][StateChannelCNN])
						{
	      					SendInfoMessage(playerid, 2, "0", "Has cerrado el canal CNN personal.");
	      					PlayersDataOnline[playerid][StateChannelCNN] = false;
	   					}
	   					else
	   					{
	      					SendInfoMessage(playerid, 2, "0", "Has abierto el canal CNN personal.");
	                        PlayersDataOnline[playerid][StateChannelCNN] = true;
						}
			    	}
					// COMANDO: 15 * /Estado Dudas              		- Cerrar y Abrir el canal /Duda
				  	else if (strcmp("/Estado Dudas", cmdtext, true, 13) == 0 && strlen(cmdtext) == 13)
			    	{
						MsgAdminUseCommands(8, playerid, cmdtext);
						if (PlayersData[playerid][Admin] >= 5)
						{
							new MensajeCanalTodosCerradoAbierto[50];
							new MensajeATodos[70];

							if (!CanalDudas)
							{
							    CanalDudas = true;
						        format(MensajeCanalTodosCerradoAbierto, sizeof(MensajeCanalTodosCerradoAbierto), "%s Has abierto el canal /Duda.", LOGO_STAFF);
								format(MensajeATodos, sizeof(MensajeATodos), "%s El canal /Duda ha sido abierto.", LOGO_STAFF);
				 			}
				 			else if  (CanalDudas )
				 			{
								CanalDudas = false;
						        format(MensajeCanalTodosCerradoAbierto, sizeof(MensajeCanalTodosCerradoAbierto), "%s Has cerrado el canal /Duda.", LOGO_STAFF);
								format(MensajeATodos, sizeof(MensajeATodos), "%s El canal /Duda ha sido cerrado.", LOGO_STAFF);
				 			}

					        SendClientMessageToAll(COLOR_MENSAJES_DE_AVISOS, MensajeATodos);
					        SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, MensajeCanalTodosCerradoAbierto);
							return 1;
						}
						else
						{
							SendInfoMessage(playerid, 0, "1485", "Tú no tienes acceso al comando /Estado Dudas.");
					        return 1;
						}
					}
					// COMANDO: /Estado Licencias
				  	else if (strcmp("/Estado Licencias", cmdtext, true, 17) == 0 && strlen(cmdtext) == 17)
		  			{
		  			    MsgAdminUseCommands(8, playerid, cmdtext);
						if (PlayersData[playerid][Admin] >= 8)
						{
							new MensajeLicenciasSiNo[60];
							new MensajeTodosLic[90];

							if (!ActivarLicencias)
							{
							    ActivarLicencias = true;
						        format(MensajeLicenciasSiNo, sizeof(MensajeLicenciasSiNo), "%s Has activado el uso de licencias.", LOGO_STAFF);
								format(MensajeTodosLic, sizeof(MensajeTodosLic), "%s El uso de licencias ha sido activado (Verifica con /Licencias [ID]).", LOGO_STAFF);
				 			}
				 			else if  (ActivarLicencias )
				 			{
								ActivarLicencias = false;
						        format(MensajeLicenciasSiNo, sizeof(MensajeLicenciasSiNo), "%s Has deshabilitado el uso de licencias.", LOGO_STAFF);
								format(MensajeTodosLic, sizeof(MensajeTodosLic), "%s El uso de licencias ha sido deshabilitado (Siguen siendo requeridas IC).", LOGO_STAFF);
				 			}

				 			SendClientMessageToAll(COLOR_MENSAJES_DE_AVISOS, MensajeTodosLic);
					        SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, MensajeLicenciasSiNo);
							return 1;
						}
						else
						{
							SendInfoMessage(playerid, 0, "144", "No tienes acceso al comando /Estado Licencias");
							return 1;
						}
		  			}
		  			// COMANDO: /Estado Nombres - Sistema de nombres del servidor
				  	else if (strcmp("/Estado Nombres", cmdtext, true, 15) == 0 && strlen(cmdtext) == 15)
		  			{
		  			    MsgAdminUseCommands(8, playerid, cmdtext);
						if (PlayersData[playerid][Admin] >= 8)
						{
							new MensajeEstadoNombres[74];
							new MensajeSoloUnNombre[90];

							if (!EstadoNombre)
							{
							    NombreServidor = SetTimer("CambiarNombreServidor",3000,1);
							    EstadoNombre = true;
						        format(MensajeEstadoNombres, sizeof(MensajeEstadoNombres), "%s Has activado el uso de nombres aleatorios.", LOGO_STAFF);
				 			}
				 			else if (EstadoNombre)
				 			{
							 	KillTimer(NombreServidor);
						        format(MensajeEstadoNombres, sizeof(MensajeEstadoNombres), "%s Has deshabilitado el uso de nombres aleatorios.", LOGO_STAFF);
								format(MensajeSoloUnNombre, sizeof(MensajeSoloUnNombre), "%s Nombre por defecto: PlayerLife RolePlay | 0.3.DL | ¡Rol!.", LOGO_STAFF);
								SendRconCommand("hostname PlayerLife RolePlay | 0.3.DL | ¡Rol!");
								EstadoNombre = false;
								SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, MensajeSoloUnNombre);
				 			}

					        SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, MensajeEstadoNombres);

							return 1;
						}
						else
						{
							SendInfoMessage(playerid, 0, "144", "No tienes acceso al comando /Estado Nombres");
							return 1;
						}
		  			}
					// COMANDO: 15 * /Estado Todos                		- Cerrar y Abrir el canal /O (OOC)
					else if (strcmp(cmdtext, "/Estado Todos", true, 13) == 0 && strlen(cmdtext) == 13)
					{
						MsgAdminUseCommands(8, playerid, cmdtext);
						if (PlayersData[playerid][Admin] >= 1)
						{
							Comandos_Admin(15, playerid, 0, PlayersData[playerid][Admin], 0, "0");
							return 1;
						}
						else
						{
							SendInfoMessage(playerid, 0, "124", "Tú no tienes acceso al comando /Estado Todos.");
					        return 1;
						}
					}
					// COMANDO: 15 * /Estado Móvil                		- Apagar y Encender el móvil
					else if (strcmp(cmdtext, "/Estado Móvil", true, 13) == 0 && strlen(cmdtext) == 13 ||
			 				 strcmp(cmdtext, "/Estado Movil", true, 13) == 0 && strlen(cmdtext) == 13)
					{
						if (PlayersDataOnline[playerid][PhoneOnline])
						{
						    if (PlayersDataOnline[playerid][InCall] == -1)
						    {
								Acciones_ROL(playerid, ACCION_ME, "apaga su móvil");
		      					PlayersDataOnline[playerid][PhoneOnline] = false;
	      					}
	      					else
	      					{
								SendInfoMessage(playerid, 0, "1521", "Finalize la llamada antes de apagar el móvil.");
							}
	   					}
	   					else
	   					{
							Acciones_ROL(playerid, ACCION_ME, "enciende su móvil");
	                        PlayersDataOnline[playerid][PhoneOnline] = true;
						}
					}
			    	else
					{
						SendInfoMessage(playerid, 0, "125", "Quizás quiso decir: /Estado {OOC, Family, Radio, Móvil, Trabajo, Alarma, Capó, Rg, RGT}");
						SendInfoMessage(playerid, 0, "125", "Quizás quiso decir: /Estado");
					}
				}
				// COMANDO: /GOB [Noticia]
	  			else if (strfind(cmdtext, "/GOB ", true) == 0)
			    {
					if (PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] <= 1 ||
						 PlayersData[playerid][Faccion] == SAPD && PlayersData[playerid][Rango] <= 1 ||
						 PlayersData[playerid][Faccion] == LSMD && PlayersData[playerid][Rango] <= 1 ||
						 PlayersData[playerid][Faccion] == LSMD && PlayersData[playerid][Rango] <= 1 ||
						 PlayersData[playerid][Faccion] == GOBIERNO && PlayersData[playerid][Rango] <= 1 )
				    {
						new MsgGob[MAX_TEXT_CHAT];
						format(MsgGob, sizeof(MsgGob), "* %s %s: %s", FaccionesRangos[PlayersData[playerid][Faccion]][PlayersData[playerid][Rango]], PlayersDataOnline[playerid][NameOnlineFix], cmdtext[4]);
						SendClientMessageToAll(0xF0F0F0FF, "|_______________NOTICIAS DEL GOBIERNO_______________|");
						SendClientMessageToAll(0x005FFFFF, MsgGob);
						//SendClientLargeMessage(playerid, 0x005FFFFF, MsgGob);
				    }
				    else
				    {
						SendInfoMessage(playerid, 0, "441", "No tienes autorización para usar este comando.");
					}
			    }
				// COMANDO: /O [Texto]
	  			else if (strfind(cmdtext, "/O ", true) == 0)
			    {
					MsgAdminUseCommands(8, playerid, cmdtext);
				    if (CanalOOC || PlayersData[playerid][Admin] >= 1)
				    {
						if (PlayersDataOnline[playerid][StateChannelOOC])
						{
					        if (strlen(cmdtext) > 3)
					        {
						        new MsgOOC[MAX_TEXT_CHAT];
						        strmid(MsgOOC, cmdtext, 3, strlen(cmdtext), sizeof(MsgOOC));
								format(MsgOOC, sizeof(MsgOOC), "[Administracion] %s: %s", PlayersDataOnline[playerid][NameOnline], MsgOOC);
						        for(new i=0;i<MAX_PLAYERS;i++)
						        {
						            if (IsPlayerConnected(i)&&PlayersDataOnline[i][StateChannelOOC]&& PlayersDataOnline[i][State] == 3)
							        SendClientLargeMessage(i, COLOR_OOC_CHANNEL, MsgOOC);
								}
								print(MsgOOC);
					        }
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "126", "Tú tienes cerrado el canal OOC general, abrelo con /Estado OOC y luego usa /O");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "127", "El canal /O se encuentra cerrado.");
					}
				}
				// COMANDO: /B [OOC]
			    else if (strfind(cmdtext, "/B ", true) == 0)
			    {
                    if (strlen(cmdtext) > 3)
			        {
			            if(!DetectSpamIG(playerid, cmdtext[GetPosSpace(cmdtext,1)]))
						{
						    new String[161];
                            if(PlayersData[playerid][Admin] >= 1 && PlayersDataOnline[playerid][AdminOn])
							{
							    format(String, sizeof(String), "{0037FF}* %s {FFFFFF}%s: ((%.86s))", AdminsRangos[PlayersData[playerid][Admin] - 1], PlayersDataOnline[playerid][NameOnlineFix], cmdtext[3]);
                                ProxDetector(30.0, playerid, String, 0xF0F0F0FF, 0xF0F0F0FF, 0xF0F0F0FF, 0xF0F0F0FF, 0xF0F0F0FF);
							}
							else
							{
							    format(String, sizeof(String), "[OOC] %s: ((%.86s))", PlayersDataOnline[playerid][NameOnlineFix], cmdtext[3]);
                                ProxDetector(30.0, playerid, String, 0xF0F0F0FF, 0xF0F0F0FF, 0xF0F0F0FF, 0xF0F0F0FF, 0xF0F0F0FF);
							}
						}
			        }
			        else
			        {
			            SendInfoMessage(playerid, 0, "128", "Tienes que poner algún texto para /B [OOC].");
			        }
				}
				// COMANDO: /Meg [Hablar]
	  			else if (strfind(cmdtext, "/Meg ", true) == 0)
			    {
					if (PlayersData[playerid][Faccion] == SAPD ||
					     PlayersData[playerid][Faccion] == ADP ||
					     PlayersData[playerid][Faccion] == PODERJUDICIAL ||
						 PlayersData[playerid][Faccion] == SAPD)
				    {
				        if (strlen(cmdtext) > 5)
				        {
                            if(!DetectSpamIG(playerid, cmdtext[GetPosSpace(cmdtext,1)]))
							{
			        	    	Acciones_ROL(playerid, ACCION_MEGAFONO, cmdtext[5]);
		                    }
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "883", "Tienes que poner algún texto para el megáfono.");
				        }
			        }
			        else
			        {
						SendInfoMessage(playerid, 0, "884", "Usted no es SAPD ni SAPD!");
					}
			    }
				// COMANDO: /M [Acción]
	  			else if (strfind(cmdtext, "/M ", true) == 0)
	  					 //strfind(cmdtext, "/m ", true) == 0)
			    {
			        if (strlen(cmdtext) > 3)
			        {
					    Acciones_ROL(playerid, ACCION_ME, cmdtext[3]);
			        }
			        else
			        {
						SendInfoMessage(playerid, 0, "129", "Tienes que poner algún texto de acción para /Me [Acción].");
			        }
			    }
				// COMANDO: /Me [Acción]
	  			else if (strfind(cmdtext, "/Me ", true) == 0)
			    {
			        if (strlen(cmdtext) > 4)
			        {
					    Acciones_ROL(playerid, ACCION_ME, cmdtext[4]);
			        }
			        else
			        {
						SendInfoMessage(playerid, 0, "129", "Tienes que poner algún texto de acción para /Me [Acción].");
			        }
			    }
			    else if (strfind(cmdtext, "/TestX ", true) == 0)
			    {
					for(new i = 0; i < sizeof(SendChatStreamColors); i ++)
					{
						SendClientMessage(playerid, SendChatStreamColors[i], "Test color");
					}
			    }
				// COMANDO: /I [Acción]
	  			else if (strfind(cmdtext, "/i ", true) == 0)
	  					 //strfind(cmdtext, "/i ", true) == 0)
			    {
					if (strlen(cmdtext) > 3)
					{
						IntentarAccion(playerid, cmdtext[3], random(3));
				    }
				    else
				    {
						SendInfoMessage(playerid, 0, "131", "Tienes que poner algún texto de acción para /Intentar [Acción].");
				    }
			    }
				// COMANDO: /Intentar [Acción]
	  			else if (strfind(cmdtext, "/Intentar ", true) == 0)
			    {
					if (strlen(cmdtext) > 10)
					{
						IntentarAccion(playerid, cmdtext[10], random(2));
				    }
				    else
				    {
						SendInfoMessage(playerid, 0, "131", "Tienes que poner algún texto de acción para /Intentar [Acción].");
				    }
			    }
			    // COMANDO: /Ame[Efecto]
	  			else if (strfind(cmdtext, "/Ame ", true) == 0)
			    {
			        if (strlen(cmdtext) > 4)
			        {
	                    Acciones_ROL(playerid, ACCION_AME, cmdtext[4]);
			        }
			        else
			        {
						SendInfoMessage(playerid, 0, "132", "Tiene que poner algún texto de efecto para /Ame [Entorno].");
			        }
			    }
			    // COMANDO: /G [Gritar]
	  			else if (strfind(cmdtext, "/G ", true) == 0)
			    {
			        if (strlen(cmdtext) > 3)
			        {
                        if(!DetectSpamIG(playerid, cmdtext[GetPosSpace(cmdtext,1)]))
						{
       						Acciones_ROL(playerid, ACCION_GRITAR, cmdtext[3]);
						}
			        }
			        else
			        {
						SendInfoMessage(playerid, 0, "133", "Tiene que poner algún texto a gritar.");
			        }
			    }
			    // COMANDO: /S [Susurrar]
	  			else if (strfind(cmdtext, "/s ", true) == 0)
			    {
			        if (strlen(cmdtext) > 3)
			        {
			            if(!DetectSpamIG(playerid, cmdtext[GetPosSpace(cmdtext,1)]))
						{
						    Acciones_ROL(playerid, ACCION_SUSURRO, cmdtext[3]);
							ApplyPlayerAnimCustom(playerid,
							ModeTalkLibraryAnim[PlayersData[playerid][MyStyleTalk]],
							ModeTalkNameAnim[PlayersData[playerid][MyStyleTalk]], true);
						}
			        }
			        else
			        {
						SendInfoMessage(playerid, 0, "134", "Tiene que poner algún texto a susurrar.");
			        }
			    }
			    // COMANDO: /Warn [ID] [Razón]
	  			else if (strfind(cmdtext, "/Warn ", true) == 0)
			    {
					MsgAdminUseCommands(8, playerid, cmdtext);
			        new playeridto	= strval(cmdtext[GetPosSpace(cmdtext, 1)]);
					if (PlayersData[playerid][Admin] >= 6)
					{
						if (playeridto != playerid)
						{
							if (IsPlayerConnected(playeridto))
							{
								PlayersData[playeridto][Warn]++;
								new MsgToAdmin[MAX_TEXT_CHAT];
								new MsgToUser[MAX_TEXT_CHAT];
								format(MsgToAdmin, sizeof(MsgToAdmin), "%s Han dado un Warn a %s por %s. Razón: %s", LOGO_STAFF, PlayersDataOnline[playeridto][NameOnline], PlayersDataOnline[playerid][NameOnline], cmdtext[GetPosSpace(cmdtext, 2)]);
								format(MsgToUser, sizeof(MsgToUser), "%s Has dado un warn a %s, ya ese usuario tiene %i warns",LOGO_STAFF, PlayersDataOnline[playeridto][NameOnline], PlayersData[playeridto][Warn]);
								MsgKBJWReportsToAdmins(playeridto, MsgToAdmin);
								SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, MsgToUser);
							}
							else
							{
								SendInfoMessage(playerid, 0, "549", "El jugador que desea darle un Warn, no se encuentra conectado");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "550", "La ID que has introducído es la suya");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "551", "No tienes acceso al comando /Warn [ID]");
					}
	  			}
				// COMANDO: /W [ID] [DUDA]
		  		else if (strfind(cmdtext, "/W", true) == 0)
			    {
		  			if (strfind(cmdtext, "/W ", true) == 0)
				    {
				        new PlayerIDDuda = strvalEx(cmdtext[GetPosSpace(cmdtext, 1)]);
		    		    if (IsPlayerConnected(PlayerIDDuda))
					    {
							MsgAdminUseCommands(8, playerid, cmdtext);
					        if ((PlayersData[PlayerIDDuda][Admin] >= 1 && PlayersData[PlayerIDDuda][Admin] <= 9 ) || PlayersData[playerid][Admin] >= 1)
					        {
					            if (PlayersDataOnline[PlayerIDDuda][Wispers] && PlayersDataOnline[PlayerIDDuda][State] == 3)
					            {
						            new MensajeME[256];
						            new Mensaje[256];
						            format(MensajeME, sizeof(MensajeME), "%s Whispeaste a %s[%i]: %s",LOGO_STAFF, PlayersDataOnline[PlayerIDDuda][NameOnline], PlayerIDDuda, cmdtext[GetPosSpace(cmdtext, 2)]);
						            format(Mensaje, sizeof(Mensaje), "%s %s[%i] te whispea: %s", LOGO_STAFF, PlayersDataOnline[playerid][NameOnline], playerid, cmdtext[GetPosSpace(cmdtext, 2)]);

									SendClientLargeMessage(PlayerIDDuda, COLOR_DE_WISPEO, Mensaje);
									SendClientLargeMessage(playerid, COLOR_DE_WISPEO, MensajeME);
									print(Mensaje);
									return 1;
								}
								else
								{
									SendInfoMessage(playerid, 0, "135", "El admin que le desea whispear tiene los whispers cerrados, puedes optar por enviar una \"/duda\".");
									return 1;
								}
					        }
					        else
					        {
								SendInfoMessage(playerid, 0, "136", "Solo se puede whispear a admnistradores del samp.");
								return 1;
							}
					    }
					    else
					    {
							SendInfoMessage(playerid, 0, "137", "El administrador que quiere whispear no se encuentra conectado.");
							return 1;
					    }
					}
					else
					{
						SendInfoMessage(playerid, 0, "138", "Recuerde al utilizar el comando /W [ID] [Duda] dejar un [ESPACIO]. Ejemplo: /W 22 Hola, me encuentro bugeado, me podrias ayudar?");
						return 1;
					}
				}
	////////////////////////////////////////////////////////////////////////////////////////////////////////////
	////////////////////////////////////		    ADMINISTRACIÓN COMMANDS		    ////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////////////////////////////
				// COMANDO: /FacciónEx [Nombre_Apellido] [ID_Faccion] [Rango]
	  			else if (strfind(cmdtext, "/FacciónEx ", true) == 0 ||
					  	 strfind(cmdtext, "/FaccionEx ", true) == 0)
			    {
					SetPlayerFaccionEx(playerid, cmdtext);
				}
				// COMANDO: /Facción [ID] [ID_Faccion] [Rango]
	  			else if (strfind(cmdtext, "/Facción ", true) == 0 ||
					  	 strfind(cmdtext, "/Faccion ", true) == 0)
			    {
					SetPlayerFaccion(playerid, cmdtext);
				}
			    // COMANDO: /Tele
				else if (strfind(cmdtext, "/Tele ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 6)
					{
					    new InteriorID = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
					    if (InteriorID >= 0 && InteriorID <= 19)
					    {
						    new Float:X = floatstr(cmdtext[GetPosSpace(cmdtext, 2)]);
						    new Float:Y = floatstr(cmdtext[GetPosSpace(cmdtext, 3)]);
						    new Float:Z = floatstr(cmdtext[GetPosSpace(cmdtext, 4)]);
						    SetPlayerInteriorEx(playerid, InteriorID);
						    SetPlayerPos(playerid, X, Y, Z);
						    new MsgPos[MAX_TEXT_CHAT];
						    format(MsgPos, sizeof(MsgPos), "%s Has ido a la posición %f - %f - %f con interior [%i]", LOGO_STAFF, X, Y, Z, InteriorID);
							SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, MsgPos);
							ChangeHouseOrOther(playerid, 0);
						}
						else
						{
							SendInfoMessage(playerid, 0, "1119", "El número del interior tiene que ser mayor de 0 y menor de 19");
						}
			    	}
					else
					{
						SendInfoMessage(playerid, 0, "1118", "No tienes acceso al comando /Tele");
					}
				}
			    // COMANDO: /SpawnDM [Equipo]
				else if (strfind(cmdtext, "/SpawnDM ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 7)
					{
					    new TeamPos = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
					    if (TeamPos >= 1 && TeamPos <= 2)
					    {
					        TeamPos--;
							GetPlayerPos(playerid, PosDM[TeamPos][0], PosDM[TeamPos][1], PosDM[TeamPos][2]);
							GetPlayerFacingAngle(playerid, PosDM[TeamPos][3]);
							InteriorDM[TeamPos] = GetPlayerInteriorEx(playerid);
							WorldDM[TeamPos] = GetPlayerVirtualWorld(playerid);
						    new MsgSpawnDM[MAX_TEXT_CHAT];
						    format(MsgSpawnDM, sizeof(MsgSpawnDM), "%s Este será el nuevo Spawn para el Modo DM, para el equipo número: %i", LOGO_STAFF, TeamPos + 1);
							SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, MsgSpawnDM);
						}
						else
						{
							SendInfoMessage(playerid, 0, "1342", "El número de equipo tiene que estar comprendido entre 1 y 2");
						}
			    	}
					else
					{
						SendInfoMessage(playerid, 0, "1120", "No tienes acceso al comando /SpawnDM");
					}
				}
			    // COMANDO: /SkinDM [Equipo]
				else if (strfind(cmdtext, "/SkinDM ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 7)
					{
					    new TeamSkin = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
					    new SkinDMS = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
					    if (TeamSkin >= 1 && TeamSkin <= 2)
					    {
						    if (SkinDMS >= 0 && SkinDMS <= 299)
						    {
						        TeamSkin--;
								SkinDM[TeamSkin] = SkinDMS;
							    new MsgSkinDM[MAX_TEXT_CHAT];
							    if (SkinDMS)
							    {
								    format(MsgSkinDM, sizeof(MsgSkinDM), "%s El nuevo skin para el equipo %i será el número: %i", LOGO_STAFF, TeamSkin + 1, SkinDMS);
								}
								else
								{
								    format(MsgSkinDM, sizeof(MsgSkinDM), "%s Has deshabilitado los skines de DM para el equipo %i", LOGO_STAFF, TeamSkin + 1);
								}
								SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, MsgSkinDM);
							}
							else
							{
								SendInfoMessage(playerid, 0, "1343", "El número de Skin tiene que estar comprendido entre 0 y 299 (Donde 0 = Deshabilitado)");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1344", "El número de equipo tiene que estar comprendido entre 1 y 2");
						}
			    	}
					else
					{
						SendInfoMessage(playerid, 0, "1120", "No tienes acceso al comando /SkinDM");
					}
				}
			    // COMANDO: /Reiniciar Servidor
			  	else if (strcmp("/Reiniciar", cmdtext, true, 10) == 0 && strlen(cmdtext) == 10)
	  			{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8)
					{
					    ShowPlayerDialogEx(playerid, 65, DIALOG_STYLE_INPUT, "{00A5FF}Reiniciar servidor", "{F50000}IMPORTANTE: {E6E6E6}¿Desea reiniciar el servidor?\n\nPor favor especifique una razón del reinicio", "Reiniciar", "Cancelar");
			    	}
					else
					{
						SendInfoMessage(playerid, 0, "1132", "No tienes acceso al comando /Reiniciar");
					}
	  			}
			    // COMANDO: /Cerrar Servidor
			  	else if (strcmp("/Cerrar Servidor", cmdtext, true, 16) == 0 && strlen(cmdtext) == 16)
	  			{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8)
					{
					    ShowPlayerDialogEx(playerid, 138, DIALOG_STYLE_INPUT, "{00A5FF}Cerrar servidor", "{F50000}IMPORTANTE: {E6E6E6}¿Desea cerrar el servidor?\n\nPor favor especifique una razón por la cuál cerrará el servidor", "Cerrar", "Cancelar");
			    	}
					else
					{
						SendInfoMessage(playerid, 0, "1505", "No tienes acceso al comando /Cerrar Servidor");
					}
	  			}
			    // COMANDO: /DmArmas
			  	else if (strcmp("/DmArmas", cmdtext, true, 8) == 0 && strlen(cmdtext) == 8)
	  			{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 7)
					{
						ShowMenuDMWeapon(playerid);
			    	}
					else
					{
						SendInfoMessage(playerid, 0, "1148", "No tienes acceso al comando /DmArmas");
					}
				}

			    // COMANDO: /Dm Equipo
			  	else if (strcmp("/DM Equipo", cmdtext, true, 10) == 0 && strlen(cmdtext) == 10)
	  			{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 7)
					{
					    new MsgDMToAll[MAX_TEXT_CHAT];
					    if (IsDMTeam)
					    {
					    	format(MsgDMToAll, sizeof(MsgDMToAll), "%s Ahora el DM ya NO será en equipo", LOGO_STAFF);
                            IsDMTeam = false;
				    	}
				    	else
				    	{
					    	format(MsgDMToAll, sizeof(MsgDMToAll), "%s Ahora el DM será en equipo", LOGO_STAFF);
                            IsDMTeam = true;
						}
						SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, MsgDMToAll);
			    	}
					else
					{
						SendInfoMessage(playerid, 0, "1346", "No tienes acceso al comando /Dm Equipo");
					}
				}
			    // COMANDO: /DM Off
			  	else if (strcmp("/DM Off", cmdtext, true, 7) == 0 && strlen(cmdtext) == 7)
	  			{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 7)
					{
					    new MsgDMToAll[MAX_TEXT_CHAT];
					    format(MsgDMToAll, sizeof(MsgDMToAll), "%s Ahora ya no estás en Modo DeathMatch", LOGO_STAFF);
						for (new i = 0; i < MAX_PLAYERS; i++)
						{
						    if (IsPlayerConnected(i) && PlayersDataOnline[i][State] == 3 && PlayersDataOnline[i][ModeDM])
						    {
						        RemovePlayerToDM(i);
								SendClientMessage(i, COLOR_MENSAJES_DE_AVISOS, MsgDMToAll);
						    }
					    }
					    format(MsgDMToAll, sizeof(MsgDMToAll), "%s Has sacado a todos los jugadores del Modo DeathMatch", LOGO_STAFF);
						SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, MsgDMToAll);
			    	}
					else
					{
						SendInfoMessage(playerid, 0, "1116", "No tienes acceso al comando /DM Off");
					}
				}
			    // COMANDO: /Race [ID]
				else if (strfind(cmdtext, "/Race ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 6)
					{
					    new playeridRace = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
						if (IsPlayerConnected(playeridRace))
						{
						    new MsgRaceMe[MAX_TEXT_CHAT];
							if (PlayersDataOnline[playeridRace][ModeRace])
							{
							    if (playeridRace != playerid)
							    {
								    format(MsgRaceMe, sizeof(MsgRaceMe), "%s %s te ha quitado el Modo Race", LOGO_STAFF, PlayersDataOnline[playerid][NameOnline]);
    								SendClientMessage(playeridRace, COLOR_MENSAJES_DE_AVISOS, MsgRaceMe);
								    format(MsgRaceMe, sizeof(MsgRaceMe), "%s Has quitado el Modo Race a %s", LOGO_STAFF, PlayersDataOnline[playeridRace][NameOnline]);
   								}
   								else
   								{
								    format(MsgRaceMe, sizeof(MsgRaceMe), "%s Te has quitado el modo Race", LOGO_STAFF, PlayersDataOnline[playeridRace][NameOnline]);
								}
						    	PlayersDataOnline[playeridRace][ModeRace] = false;
							}
							else
							{
							    if (playeridRace != playerid)
							    {
								    format(MsgRaceMe, sizeof(MsgRaceMe), "%s %s te ha puesto el Modo Race", LOGO_STAFF, PlayersDataOnline[playerid][NameOnline]);
    								SendClientMessage(playeridRace, COLOR_MENSAJES_DE_AVISOS, MsgRaceMe);
								    format(MsgRaceMe, sizeof(MsgRaceMe), "%s Has puesto en Modo Race a %s", LOGO_STAFF, PlayersDataOnline[playeridRace][NameOnline]);
   								}
   								else
   								{
								    format(MsgRaceMe, sizeof(MsgRaceMe), "%s Te has puesto en Modo Race", LOGO_STAFF, PlayersDataOnline[playeridRace][NameOnline]);
								}
						    	PlayersDataOnline[playeridRace][ModeRace] = true;
							}
							SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, MsgRaceMe);
						}
						else
						{
							SendInfoMessage(playerid, 0, "1444", "El jugador que desea darle Modo Race no se encuentra conectado.");
						}
			    	}
					else
					{
						SendInfoMessage(playerid, 0, "1445", "No tienes acceso al comando /Race");
					}
				}
			    // COMANDO: /DM [ID] [Team]
				else if (strfind(cmdtext, "/DM ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 7)
					{
					    new playeridDM = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
						if (IsPlayerConnected(playeridDM))
						{
						    new MsgDMMe[MAX_TEXT_CHAT];
						    if (playeridDM!= playerid)
						    {
							    new MsgDMToPlayer[MAX_TEXT_CHAT];
								if (PlayersDataOnline[playeridDM][ModeDM])
								{
								    format(MsgDMMe, sizeof(MsgDMMe), "%s Ha quitado el modo DeathMatch a %s", LOGO_STAFF, PlayersDataOnline[playeridDM][NameOnline]);
								    format(MsgDMToPlayer, sizeof(MsgDMToPlayer), "%s %s te ha quitado el modo DeathMatch", LOGO_STAFF, PlayersDataOnline[playerid][NameOnline]);
									RemovePlayerToDM(playeridDM);
								}
								else
								{
								    new TeamDMP = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
								    if (TeamDMP >= 1 && TeamDMP <= 2)
								    {
									    format(MsgDMMe, sizeof(MsgDMMe), "%s Has puesto en modo DeathMatch a %s en el equipo %i", LOGO_STAFF, PlayersDataOnline[playeridDM][NameOnline], TeamDMP);
									    format(MsgDMToPlayer, sizeof(MsgDMToPlayer), "%s %s te ha puesto el modo DeathMatch en el equipo %i", LOGO_STAFF, PlayersDataOnline[playerid][NameOnline], TeamDMP);
								    	AddPlayerToDM(playeridDM, TeamDMP - 1);
									}
									else
									{
										SendInfoMessage(playerid, 0, "1340", "El número de equipo tiene que estar comprendido entre 1 y 2");
										return 1;
									}
								}
								SendClientMessage(playeridDM, COLOR_MENSAJES_DE_AVISOS, MsgDMToPlayer);
							}
							else
							{
								if (PlayersDataOnline[playeridDM][ModeDM])
								{
           							format(MsgDMMe, sizeof(MsgDMMe), "%s Has salido del modo DeathMatch", LOGO_STAFF);
   									RemovePlayerToDM(playeridDM);
								}
								else
								{
								    new TeamDMP = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
								    if (TeamDMP >= 1 && TeamDMP <= 2)
								    {
									    format(MsgDMMe, sizeof(MsgDMMe), "%s Ahora estás en modo DeathMatch en el equipo %i", LOGO_STAFF, TeamDMP);
   								    	AddPlayerToDM(playeridDM, TeamDMP - 1);
							    	}
									else
									{
										SendInfoMessage(playerid, 0, "1339", "El número de equipo tiene que estar comprendido entre 1 y 2");
										return 1;
									}
								}
							}
							SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, MsgDMMe);
						}
						else
						{
							SendInfoMessage(playerid, 0, "1115", "El jugador que desea darle Modo DeathMatch no se encuentra conectado.");
						}
			    	}
					else
					{
						SendInfoMessage(playerid, 0, "1114", "No tienes acceso al comando /DM");
					}
				}
			    // COMANDO: /ICoche
			  	else if (strcmp("/ICoche", cmdtext, true, 7) == 0 && strlen(cmdtext) == 7)
	  			{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 6)
					{
						new MyNearCar = IsPlayerInNearVehicleEx(playerid);
		   				if (MyNearCar)
					    {
							new MsgDatos[MAX_TEXT_CHAT];
			 				format(MsgDatos, sizeof(MsgDatos), "ID: %i || Vehículo: %s | Modelo ID: %i | Mundo Spawn: %i | Interior Spawn: %i",MyNearCar, coches_Todos_Nombres[GetVehicleModel(MyNearCar) - 400], GetVehicleModel(MyNearCar), DataCars[MyNearCar][World], DataCars[MyNearCar][Interior]);
					    	SendInfoMessage(playerid, 1, MsgDatos, "Datos:");
			 				format(MsgDatos, sizeof(MsgDatos), "Mundo Actual: %i | Interior Actual: %i", DataCars[MyNearCar][WorldLast], DataCars[MyNearCar][InteriorLast]);
					    	SendInfoMessage(playerid, 1, MsgDatos, "Datos:");
		   				    if (MyNearCar <= MAX_CAR_DUENO)
		   				    {
				 				format(MsgDatos, sizeof(MsgDatos), "Matrícula: %i ", DataCars[MyNearCar][Matricula]);
						    	SendInfoMessage(playerid, 1, MsgDatos, "Datos:");
				 				format(MsgDatos, sizeof(MsgDatos), "Dueño: %s", DataCars[MyNearCar][Dueno]);
						    	SendInfoMessage(playerid, 1, MsgDatos, "Datos:");
				 				format(MsgDatos, sizeof(MsgDatos), "Tiempo: %i", DataCars[MyNearCar][Time]);
						    	SendInfoMessage(playerid, 1, MsgDatos, "Datos:");
							}
							else
							{
				 				format(MsgDatos, sizeof(MsgDatos), "ID: %i", MyNearCar);
						    	SendInfoMessage(playerid, 1, MsgDatos, "Datos:");
				 				format(MsgDatos, sizeof(MsgDatos), "Dueño: %s", FaccionData[DataCars[MyNearCar][Time]][NameFaccion]);
						    	SendInfoMessage(playerid, 1, MsgDatos, "Datos:");
							}
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "554", "No tienes acceso al comando /ICoche");
					}
			    }
				//////////--- /ICocheEx [ID]              - Saber la información de un vehículo por su ID
				else if (strfind(cmdtext, "/ICocheEx ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 6)
					{
						new MyNearCar = strval(cmdtext[10]);
		   				if (MyNearCar > 0 && MyNearCar <= MAX_CAR)
					    {
							new MsgDatos[MAX_TEXT_CHAT];
			 				format(MsgDatos, sizeof(MsgDatos), "ID: %i || Vehículo: %s | Modelo ID: %i | Mundo Spawn: %i | Interior Spawn: %i",MyNearCar, coches_Todos_Nombres[GetVehicleModel(MyNearCar) - 400], GetVehicleModel(MyNearCar), DataCars[MyNearCar][World], DataCars[MyNearCar][Interior]);
					    	SendInfoMessage(playerid, 1, MsgDatos, "Datos:");
			 				format(MsgDatos, sizeof(MsgDatos), "Mundo Actual: %i | Interior Actual: %i", DataCars[MyNearCar][WorldLast], DataCars[MyNearCar][InteriorLast]);
					    	SendInfoMessage(playerid, 1, MsgDatos, "Datos: ");
		   				    if (MyNearCar <= MAX_CAR_DUENO)
		   				    {
				 				format(MsgDatos, sizeof(MsgDatos), "Matrícula: %i ", DataCars[MyNearCar][Matricula]);
						    	SendInfoMessage(playerid, 1, MsgDatos, "Datos:");
				 				format(MsgDatos, sizeof(MsgDatos), "Dueño: %s", DataCars[MyNearCar][Dueno]);
						    	SendInfoMessage(playerid, 1, MsgDatos, "Datos:");
				 				format(MsgDatos, sizeof(MsgDatos), "Tiempo: %i", DataCars[MyNearCar][Time]);
						    	SendInfoMessage(playerid, 1, MsgDatos, "Datos:");
							}
							else
							{
				 				format(MsgDatos, sizeof(MsgDatos), "ID: %i", MyNearCar);
						    	SendInfoMessage(playerid, 1, MsgDatos, "Datos:");
				 				format(MsgDatos, sizeof(MsgDatos), "Dueño: %s", FaccionData[DataCars[MyNearCar][Time]][NameFaccion]);
						    	SendInfoMessage(playerid, 1, MsgDatos, "Datos:");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "1164", "El vehículo que desea saber su información no existe.");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "554", "No tienes acceso al comando /ICoche");
					}
			    }
			    // COMANDO: /VCoche
			  	else if (strcmp("/VCoche", cmdtext, true, 7) == 0 && strlen(cmdtext) == 7)
	  			{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8)
					{
						new MyNearCar = IsPlayerInNearVehicleEx(playerid);
		   				if (MyNearCar)
					    {
		   				    if (MyNearCar <= MAX_CAR_DUENO)
		   				    {
				 				if (strlen(DataCars[MyNearCar][Dueno]) != 1)
								{
									new playerid_vender = RemoveDuenoOfVehicle(MyNearCar, 0);
									new MsgVentaCocheEx[MAX_TEXT_CHAT];
									format(MsgVentaCocheEx, sizeof(MsgVentaCocheEx), "Has vendido este vehículo al estado, era propiedad de: %s", PlayersDataOnline[playerid_vender][NameOnline]);
									SendInfoMessage(playerid, 3, "0", MsgVentaCocheEx);
								}
								else
								{
									SendInfoMessage(playerid, 0, "552", "Este vehículo no tiene dueño");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "547", "Este vehículo no es de venta!");
							}
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "548", "No tienes acceso al comando /VCoche");
					}
	  			}
				//////////--- /CPos [ID]              - CAMBIAR LA POSICIóN DE UNA CASA
				else if (strfind(cmdtext, "/CPos ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8)
					{
					    new NewPosHouse = strval(cmdtext[6]);
				        if (NewPosHouse > 0 && NewPosHouse <= MAX_HOUSE)
				        {
					        new Float:PlayerPosHouse[4];
					        GetPlayerPos(playerid, PlayerPosHouse[0], PlayerPosHouse[1], PlayerPosHouse[2]);
					        GetPlayerFacingAngle(playerid, PlayerPosHouse[3]);
						    HouseData[NewPosHouse][PosX]      = PlayerPosHouse[0];
						    HouseData[NewPosHouse][PosY]		= PlayerPosHouse[1];
						    HouseData[NewPosHouse][PosZ]		= PlayerPosHouse[2];
						    HouseData[NewPosHouse][PosZZ] 	= PlayerPosHouse[3];
						    HouseData[NewPosHouse][Interior]  = GetPlayerInteriorEx(playerid);
                            SaveHouse(NewPosHouse, true);

                            new MsgPersonalizado[250];
	                        format(MsgPersonalizado, sizeof(MsgPersonalizado), "%s Cambiaste la posición de la casa con ID: [%i] a la: (X: %f Y: %f Z: %f ZZ: %f) con interior: %i", LOGO_STAFF, NewPosHouse, PlayerPosHouse[0], PlayerPosHouse[1], PlayerPosHouse[2], PlayerPosHouse[3], GetPlayerInteriorEx(playerid));
			                SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, MsgPersonalizado);
							printf("%s", MsgPersonalizado);
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "1158", "El ID de casa introducido no existe!");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "1159", "No tienes acceso al comando /CPos");
					}
				}
				//////////--- /NPos [ID]              - CAMBIAR LA POSICIóN DE UN NEGOCIO
				else if (strfind(cmdtext, "/NPos ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8)
					{
					    new NewPosBizz = strval(cmdtext[6]);
				        if (NewPosBizz > 0 && NewPosBizz <= MAX_BIZZ)
				        {

					        new Float:PlayerPosBizz[4];
					        GetPlayerPos(playerid, PlayerPosBizz[0], PlayerPosBizz[1], PlayerPosBizz[2]);
					        GetPlayerFacingAngle(playerid, PlayerPosBizz[3]);

						    NegociosData[NewPosBizz][PosOutX]       = PlayerPosBizz[0];
						    NegociosData[NewPosBizz][PosOutY]		= PlayerPosBizz[1];
						    NegociosData[NewPosBizz][PosOutZ]		= PlayerPosBizz[2];
						    NegociosData[NewPosBizz][PosOutZZ] 		= PlayerPosBizz[3];
						    NegociosData[NewPosBizz][InteriorOut]   = GetPlayerInteriorEx(playerid);

                            DataSaveBizz(NewPosBizz, true);

                            new MsgPersonalizado[250];
	                        format(MsgPersonalizado, sizeof(MsgPersonalizado), "%s Cambiaste la posición del negocio ID: [%i] a la: (X: %f Y: %f Z: %f ZZ: %f) con interior: %i", LOGO_STAFF, NewPosBizz, PlayerPosBizz[0], PlayerPosBizz[1], PlayerPosBizz[2], PlayerPosBizz[3], GetPlayerInteriorEx(playerid));
			                SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, MsgPersonalizado);
							printf("%s", MsgPersonalizado);
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "1160", "El ID del negocio introducido no existe!");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "1161", "No tienes acceso al comando /NPos");
					}
				}
				//////////--- /Nprecio [ID]              - CAMBIAR EL PRECIo DE UN NEGOCIO
				else if (strfind(cmdtext, "/Nprecio ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8)
					{
				        if (PlayersDataOnline[playerid][InPickup] >= NegociosData[1][PickupOutId] &&
				             PlayersDataOnline[playerid][InPickup] <= NegociosData[MAX_BIZZ][PickupOutId])
				        {
				            if (strval(cmdtext[9]) >= 0 && strval(cmdtext[9]) <= 500000)
				            {
		                        NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Precio] = strval(cmdtext[9]);
		                        new MsgChangeType[MAX_TEXT_CHAT];
		                        format(MsgChangeType, sizeof(MsgChangeType), "Cambiaste el precio de este negocio a: $%i", strval(cmdtext[9]));
				                SendInfoMessage(playerid, 2, "0", MsgChangeType);

	                            DataSaveBizz(PlayersDataOnline[playerid][MyPickupWorld], true);
					        }
					        else
					        {
								SendInfoMessage(playerid, 0, "658", "El precio de negocio introducído tiene que estar entre 0 y 500000");
							}
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "659", "No te encuentras en ningún negocio");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "660", "No tienes acceso al comando /Nprecio");
					}
				}
				//////////--- /Nnivel [ID]              - CAMBIAR EL NIVEL DE UN NEGOCIO
				else if (strfind(cmdtext, "/Nnivel ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8)
					{
				        if (PlayersDataOnline[playerid][InPickup] >= NegociosData[1][PickupOutId] &&
				             PlayersDataOnline[playerid][InPickup] <= NegociosData[MAX_BIZZ][PickupOutId])
				        {
				            if (strval(cmdtext[8]) >= 0 && strval(cmdtext[8]) <= 50)
				            {
		                        NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Level] = strval(cmdtext[8]);
		                        new MsgChangeType[MAX_TEXT_CHAT];
		                        format(MsgChangeType, sizeof(MsgChangeType), "Cambiaste el nivel de este negocio a: %i", strval(cmdtext[8]));
				                SendInfoMessage(playerid, 2, "0", MsgChangeType);

	                            DataSaveBizz(PlayersDataOnline[playerid][MyPickupWorld], true);
					        }
					        else
					        {
								SendInfoMessage(playerid, 0, "661", "El nivel de negocio introducído tiene que estar entre 0 y 50");
							}
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "662", "No te encuentras en ningún negocio");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "663", "No tienes acceso al comando /Nnivel");
					}
				}
				//////////--- /Ntipo [ID]              - CAMBIAR EL TIPO DE UN NEGOCIO
				else if (strfind(cmdtext, "/Ntipo ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8)
					{
				        if (PlayersDataOnline[playerid][InPickup] >= NegociosData[1][PickupOutId] &&
				             PlayersDataOnline[playerid][InPickup] <= NegociosData[MAX_BIZZ][PickupOutId])
				        {
				            if (strval(cmdtext[7]) >= 0 && strval(cmdtext[7]) <= MAX_BIZZ_TYPE)
				            {
		                        NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Type] = strval(cmdtext[7]);
		                        new MsgChangeType[MAX_TEXT_CHAT];
		                        format(MsgChangeType, sizeof(MsgChangeType), "Cambiaste el tipo de este negocio a tipo: %i", strval(cmdtext[7]));
				                SendInfoMessage(playerid, 2, "0", MsgChangeType);

	                            DataSaveBizz(PlayersDataOnline[playerid][MyPickupWorld], true);
					        }
					        else
					        {
								SendInfoMessage(playerid, 0, "664", "El tipo de negocio introducído no existe");
							}
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "665", "No te encuentras en ningún negocio");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "666", "No tienes acceso al comando /Ntipo");
					}
				}
				//////////--- /Cprecio [ID]              - CAMBIAR EL PRECIO DE UNA CASA
				else if (strfind(cmdtext, "/Cprecio ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8)
					{
				        if (PlayersDataOnline[playerid][InPickup] >= HouseData[1][PickupId] &&
				             PlayersDataOnline[playerid][InPickup] <= HouseData[MAX_HOUSE][PickupId])
				        {
				            if (strval(cmdtext[9]) >= 0 && strval(cmdtext[9]) <= 1000000)
				            {
		                        HouseData[PlayersDataOnline[playerid][MyPickupWorld]][Price] = strval(cmdtext[9]);
		                        new MsgChangeType[MAX_TEXT_CHAT];
		                        format(MsgChangeType, sizeof(MsgChangeType), "Cambiaste el precio de esta casa a: %i", strval(cmdtext[9]));
				                SendInfoMessage(playerid, 2, "0", MsgChangeType);

	                            SaveHouse(PlayersDataOnline[playerid][MyPickupWorld], true);
					        }
					        else
					        {
								SendInfoMessage(playerid, 0, "667", "El precio de la casa introducído tiene que estar entre 0 y 1000000");
							}
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "668", "No te encuentras en ninguna casa");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "669", "No tienes acceso al comando /Cprecio");
					}
				}
				//////////--- /Enfermar [ID] [ID]             - ENFERMAR A ALGUIEN
				else if (strfind(cmdtext, "/Enfermar ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 7)
					{
				        new PlayerIDEnfermar = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
				        new EnfermedadID = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
				        if (IsPlayerConnected(PlayerIDEnfermar))
				        {
				            if (EnfermedadID >= 0 && EnfermedadID <= 6)
				            {
								new MsgEnfermedad[MAX_TEXT_CHAT];
								if (PlayerIDEnfermar != playerid)
								{
									format(MsgEnfermedad, sizeof(MsgEnfermedad), "%s has puesto a %s [ID: %i] la enfermedad \"%s\".",LOGO_STAFF, PlayersDataOnline[PlayerIDEnfermar][NameOnline], PlayerIDEnfermar, EnfermedadName[EnfermedadID]);
								}
								else
								{
									format(MsgEnfermedad, sizeof(MsgEnfermedad), "%s Te has enfermado de \"%s\" tú mismo.",LOGO_STAFF, EnfermedadName[EnfermedadID]);
								}
					            SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, MsgEnfermedad);
								ChangeEnfermedad(PlayerIDEnfermar, EnfermedadID);
					        }
					        else
					        {
								SendInfoMessage(playerid, 0, "1409", "El número de enfermedad tiene que estar comprendido entre 0 y 6");
							}
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "1410", "El jugador que deseas enfermar no se encuentra conectado");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "1411", "No tienes acceso al comando /Enfermar");
					}
				}
				//////////--- /Nombre [ID] [Nombre_Apellido]             - CAMBIAR EL NOMBRE A UN JUGADOR
				else if (strfind(cmdtext, "/Nombre ", true) == 0)
				{
					MsgAdminUseCommands(9, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 7)
					{
					    if (strlen(cmdtext) >= 13)
					    {
						    new NewName[MAX_PLAYER_NAME];
						    new LastName[MAX_PLAYER_NAME];
						    new playeridChange;
						    format(NewName, sizeof(NewName), "%s", cmdtext[GetPosSpace(cmdtext, 2) + 1]);
						    playeridChange = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
						    format(LastName, sizeof(LastName), "%s", PlayersDataOnline[playeridChange][NameOnline]);

							if (IsPlayerConnected(playeridChange))
							{
							    if (IsValidName(NewName))
							    {
									new DirBD[50];
									format(DirBD, sizeof(DirBD), "%s%s.ulp", DIR_USERS, NewName);
									new DirBDIn[50];
									format(DirBDIn, sizeof(DirBDIn), "%s%s.ulp", DIR_USERS, PlayersDataOnline[playeridChange][NameOnline]);
									if (!fexist(DirBD))
									{
								        switch(SetPlayerName(playeridChange, NewName))
								        {
											case 1:
											{
										        format(PlayersDataOnline[playeridChange][NameOnline], MAX_PLAYER_NAME, "%s", NewName);
										        RemoveRallaName(playeridChange);
										        // NEGOCIOS
												for (new i = 1; i <= MAX_BIZZ; i++)
												{
													if (strfind(NegociosData[i][Dueno], LastName, true) == 0 && strlen(NegociosData[i][Dueno]) == strlen(LastName))
													{
														format(NegociosData[i][Dueno], MAX_PLAYER_NAME, "%s", PlayersDataOnline[playeridChange][NameOnline]);
														DataSaveBizz(i, true);
													}
												    if (strfind(NegociosData[i][Extorsion], LastName, false) == 0 && strlen(NegociosData[i][Extorsion]) == strlen(LastName))
													{
														format(NegociosData[i][Extorsion], MAX_PLAYER_NAME, "%s", PlayersDataOnline[playeridChange][NameOnline]);
														DataSaveBizz(i, true);
													}
												}
										        // COCHE
										        if (PlayersData[playeridChange][Car] != -1)
										        {
													format(DataCars[PlayersData[playeridChange][Car]][Dueno], MAX_PLAYER_NAME, "%s", PlayersDataOnline[playeridChange][NameOnline]);
												}
										        // CASA
										        if (PlayersData[playeridChange][House] != -1)
										        {
													format(HouseData[PlayersData[playeridChange][House]][Dueno], MAX_PLAYER_NAME, "%s", PlayersDataOnline[playeridChange][NameOnline]);
										            SaveHouse(PlayersData[playeridChange][House], true);
												}
												// Llaves Amigo
									            for(new i=1;i<=MAX_HOUSE;i++)
									            {
									                new IsLlavesAmigo = IsPlayerInHouseFriend(playeridChange, i);

									                if (IsLlavesAmigo != -1)
									                {
							                        	format(HouseFriends[i][IsLlavesAmigo][Name], MAX_PLAYER_NAME, "%s", PlayersDataOnline[playeridChange][NameOnline]);
									                }
								                }

								                // Móvil
										        if (PlayersData[playeridChange][Phone] != 0)
										        {
										            new numberstr[50];
											        format(numberstr, sizeof(numberstr), "%s%i.ulp", DIR_MOVILES, PlayersData[playeridChange][Phone]);
												    new File:fEscribir3 = fopen(numberstr, io_write);
													fwrite(fEscribir3, PlayersDataOnline[playeridChange][NameOnline]);
													fclose(fEscribir3);
												}

												fremove(DirBDIn);
												DataUserSave(playeridChange);

												new MsgNombreCambiadoMe[MAX_TEXT_CHAT];
												if (playerid != playeridChange)
												{
													new MsgNombreCambiadoYou[MAX_TEXT_CHAT];
													format(MsgNombreCambiadoYou, sizeof(MsgNombreCambiadoYou), "%s El administrador %s te ha cambiado el nombre \"%s\"por \"%s\"", LOGO_STAFF, PlayersDataOnline[playerid][NameOnline], LastName, PlayersDataOnline[playeridChange][NameOnline]);
													format(MsgNombreCambiadoMe, sizeof(MsgNombreCambiadoMe), "%s Cambiaste el nick \"%s\" por \"%s\" a este jugador", LOGO_STAFF, LastName, PlayersDataOnline[playeridChange][NameOnline]);
													SendClientMessage(playeridChange, COLOR_MENSAJES_DE_AVISOS, MsgNombreCambiadoYou);
												}
												else
												{
													format(MsgNombreCambiadoMe, sizeof(MsgNombreCambiadoMe), "%s Te cambiaste el nick \"%s\" por \"%s\"", LOGO_STAFF, LastName, PlayersDataOnline[playeridChange][NameOnline]);
												}
	        							        SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, MsgNombreCambiadoMe);
											}
											case 0:
											{
												SendInfoMessage(playerid, 0, "1031", "Ya ese jugador está usando ese mismo nick");
											}
											case -1:
											{
												SendInfoMessage(playerid, 0, "1030", "Ese nick está siendo usado ya por otro jugador o contiene caracteres no permitidos");
											}
										}
									}
									else
									{
										SendInfoMessage(playerid, 0, "1029", "Ese nick está siendo usado ya por otro jugador");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1028", "El nuevo nombre a cambiar, no es válido");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "1027", "El jugador que desea cambiarle el nombre, no se encuentra conectado");
							}
					    }
					    else
					    {
							SendInfoMessage(playerid, 0, "1026", "Ha introducido mal el sintaxis del comando /Nombre, Ejemplo: /Nombre 20 Manolo_Talvez");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "1025", "No tienes acceso al comando /Nombre");
					}
				}
				//////////--- /Cambiarnombre Usuarios VIP - TEST cFamCoin
/*				else if (strfind(cmdtext, "/Cambiarnombre", true) == 0)
				{
					if(!PlayersData[playerid][cDonar][1])return SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, "No tienes Item para cambio de nombre."); //SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, MsgNombreCambiadoMe);
					{
					    if (strlen(cmdtext) >= 13)
					    {
						    new NewName[MAX_PLAYER_NAME];
						    new LastName[MAX_PLAYER_NAME];
						    new playeridChange;
						    format(NewName, sizeof(NewName), "%s", cmdtext[GetPosSpace(cmdtext, 2) + 1]);
						    playeridChange = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
						    format(LastName, sizeof(LastName), "%s", PlayersDataOnline[playeridChange][NameOnline]);

							if (IsPlayerConnected(playeridChange))
							{
							    if (IsValidName(NewName))
							    {
									new DirBD[50];
									format(DirBD, sizeof(DirBD), "%s%s.ulp", DIR_USERS, NewName);
									new DirBDIn[50];
									format(DirBDIn, sizeof(DirBDIn), "%s%s.ulp", DIR_USERS, PlayersDataOnline[playeridChange][NameOnline]);
									if (!fexist(DirBD))
									{
								        switch(SetPlayerName(playeridChange, NewName))
								        {
											case 1:
											{
										        format(PlayersDataOnline[playeridChange][NameOnline], MAX_PLAYER_NAME, "%s", NewName);
										        RemoveRallaName(playeridChange);
										        // NEGOCIOS
												for (new i = 1; i <= MAX_BIZZ; i++)
												{
													if (strfind(NegociosData[i][Dueno], LastName, true) == 0 && strlen(NegociosData[i][Dueno]) == strlen(LastName))
													{
														format(NegociosData[i][Dueno], MAX_PLAYER_NAME, "%s", PlayersDataOnline[playeridChange][NameOnline]);
														DataSaveBizz(i, true);
													}
												    if (strfind(NegociosData[i][Extorsion], LastName, false) == 0 && strlen(NegociosData[i][Extorsion]) == strlen(LastName))
													{
														format(NegociosData[i][Extorsion], MAX_PLAYER_NAME, "%s", PlayersDataOnline[playeridChange][NameOnline]);
														DataSaveBizz(i, true);
													}
												}
										        // COCHE
										        if (PlayersData[playeridChange][Car] != -1)
										        {
													format(DataCars[PlayersData[playeridChange][Car]][Dueno], MAX_PLAYER_NAME, "%s", PlayersDataOnline[playeridChange][NameOnline]);
												}
										        // CASA
										        if (PlayersData[playeridChange][House] != -1)
										        {
													format(HouseData[PlayersData[playeridChange][House]][Dueno], MAX_PLAYER_NAME, "%s", PlayersDataOnline[playeridChange][NameOnline]);
										            SaveHouse(PlayersData[playeridChange][House], true);
												}
												// Llaves Amigo
									            for(new i=1;i<=MAX_HOUSE;i++)
									            {
									                new IsLlavesAmigo = IsPlayerInHouseFriend(playeridChange, i);

									                if (IsLlavesAmigo != -1)
									                {
							                        	format(HouseFriends[i][IsLlavesAmigo][Name], MAX_PLAYER_NAME, "%s", PlayersDataOnline[playeridChange][NameOnline]);
									                }
								                }

								                // Móvil
										        if (PlayersData[playeridChange][Phone] != 0)
										        {
										            new numberstr[50];
											        format(numberstr, sizeof(numberstr), "%s%i.ulp", DIR_MOVILES, PlayersData[playeridChange][Phone]);
												    new File:fEscribir3 = fopen(numberstr, io_write);
													fwrite(fEscribir3, PlayersDataOnline[playeridChange][NameOnline]);
													fclose(fEscribir3);
												}

												fremove(DirBDIn);
												DataUserSave(playeridChange);

												new MsgNombreCambiadoMe[MAX_TEXT_CHAT];
												if (playerid != playeridChange)
												{
													new MsgNombreCambiadoYou[MAX_TEXT_CHAT];
													format(MsgNombreCambiadoYou, sizeof(MsgNombreCambiadoYou), "%s El administrador %s te ha cambiado el nombre \"%s\"por \"%s\"", LOGO_STAFF, PlayersDataOnline[playerid][NameOnline], LastName, PlayersDataOnline[playeridChange][NameOnline]);
													format(MsgNombreCambiadoMe, sizeof(MsgNombreCambiadoMe), "%s Cambiaste el nick \"%s\" por \"%s\" a este jugador", LOGO_STAFF, LastName, PlayersDataOnline[playeridChange][NameOnline]);
													SendClientMessage(playeridChange, COLOR_MENSAJES_DE_AVISOS, MsgNombreCambiadoYou);
												}
												else
												{
													format(MsgNombreCambiadoMe, sizeof(MsgNombreCambiadoMe), "%s Te cambiaste el nick \"%s\" por \"%s\"", LOGO_STAFF, LastName, PlayersDataOnline[playeridChange][NameOnline]);
												}
	        							        SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, MsgNombreCambiadoMe);

	        							        new QUERY[384];
												mysql_format(DatabaseForo, QUERY, sizeof(QUERY), "UPDATE `forostable_members` SET member_name = '%s', real_name = '%s', passwd = SHA1(CONCAT(LOWER('%s'), '%s')) WHERE member_name = '%s';", PlayersDataOnline[playeridChange][NameOnline], PlayersDataOnline[playeridChange][NameOnlineFix], PlayersDataOnline[playeridChange][NameOnline], PlayersData[playeridChange][Password], LastName);
												mysql_tquery(DatabaseForo, QUERY);
											}
											case 0:
											{
												SendInfoMessage(playerid, 0, "1031", "Ya ese jugador está usando ese mismo nick");
											}
											case -1:
											{
												SendInfoMessage(playerid, 0, "1030", "Ese nick está siendo usado ya por otro jugador o contiene caracteres no permitidos.");
											}
										}
									}
									else
									{
										SendInfoMessage(playerid, 0, "1029", "Ese nick está siendo usado ya por otro jugador.");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "1028", "El nuevo nombre a cambiar, no es válido.");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "1027", "El jugador que desea cambiarle el nombre, no se encuentra conectado");
							}
					    }
					    else
         {
							SendInfoMessage(playerid, 0, "1026", "Ha introducido mal el sintaxis del comando /Nombre, Ejemplo: /Nombre 20 Manolo_Talvez.");
						}
					}
     else
     {
						SendInfoMessage(playerid, 0, "1025", "No tienes suficiente COIN's!");
					}
    }
				// COMANDO: /SIMULAR TIMBRE
				else if (strfind(cmdtext, "/Simular timbre", true) == 0)
				{
				    MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] == 9)
					{
					    Timbre(playerid);
					}
					else
					{
                        SendInfoMessage(playerid, 0, "1614", "No tienes acceso al comando /Simular timbre.");
					}
				}
				/Force Pay
				else if (strfind(cmdtext, "/Force Pay", true) == 0)
				{
					if (PlayersData[playerid][Admin] == 9)
					{
                        MostrarHora(1, playerid, true); // "false" Desactivado porque reducia licencias y tiempo VIP (test)
						new Mensaje_Forzar[128];
					    format(Mensaje_Forzar, sizeof(Mensaje_Forzar), "%s Has forzado la paga de todos.",LOGO_STAFF);
						SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, Mensaje_Forzar);
					}
					else
					{
                        SendInfoMessage(playerid, 0, "1614", "No tienes acceso al comando.");
					}
				}*/

				// COMANDO: /Forzar (test)
				else if (strfind(cmdtext, "/PlayerLiferp", true) == 0)
				{
					new MensajeBanco[MAX_TEXT_CHAT];
					new Intereses;
					new Float:Xpaga, Float:Ypaga, Float:Zpaga;
					if (PlayersData[playerid][Admin] >= 9)
	    			{
	  					for (new i = 0; i < MAX_PLAYERS; i++)
	  					{
							if (IsPlayerConnected(i))
							{
								Intereses = PlayersData[i][Banco] / 2000;

								PlayersData[i][Banco] = PlayersData[i][Banco] + FaccionData[PlayersData[i][Faccion]][Paga][PlayersData[i][Rango]] + Intereses;

				                SendInfoMessage(i, 1, " ", "|___________________  Banco ___________________|");

								format(MensajeBanco, sizeof(MensajeBanco), "{eedd82}Nuevo Balance: {eedd82}$%i {eedd82}Paga: {eedd82}$%i", PlayersData[i][Banco], FaccionData[PlayersData[i][Faccion]][Paga][PlayersData[i][Rango]]);
				                SendInfoMessage(i, 1, MensajeBanco, "Banco: ");

								format(MensajeBanco, sizeof(MensajeBanco), "{eedd82}Intereses: {eedd82}+$%i", Intereses);
				                SendInfoMessage(i, 1, MensajeBanco, "Banco: ");

								format(MensajeBanco, sizeof(MensajeBanco), "{eedd82}Antiguo Balance: {eedd82}$%i", PlayersData[i][Banco] - FaccionData[PlayersData[i][Faccion]][Paga][PlayersData[i][Rango]] - Intereses);
				                SendInfoMessage(i, 1, MensajeBanco, "Banco: ");

								if (PlayersData[i][VIP])
								{
									SendInfoMessage(i, 1, " ", "|_____________________ VIP ____________________|");
									format(MensajeBanco, sizeof(MensajeBanco), "{eedd82}Intereses VIP: {00F50A}+$%i", Intereses);
									SendInfoMessage(i, 1, MensajeBanco, "Banco: ");
									PlayersData[i][Banco] = PlayersData[i][Banco] + FaccionData[PlayersData[i][Faccion]][Paga][PlayersData[i][Rango]] + FaccionData[PlayersData[i][Faccion]][Paga][PlayersData[i][Rango]];
									format(MensajeBanco, sizeof(MensajeBanco), "{eedd82}Paga VIP: {00F50A}+$%i", FaccionData[PlayersData[i][Faccion]][Paga][PlayersData[i][Rango]] + FaccionData[PlayersData[i][Faccion]][Paga][PlayersData[i][Rango]]);
									SendInfoMessage(i, 1, MensajeBanco, "Banco: ");
									PlayersData[i][Banco] = PlayersData[i][Banco] + Intereses; //+ Intereses + Intereses;
								}
								else
								{
									SendInfoMessage(i, 1, " ", "|_____________________ VIP ____________________|");
									SendInfoMessage(i, 1, " ", "{FF0000}¡Tú no tienes beneficios VIP! ¿Qué esperas para tenerlos? /Ayuda Vip.");
								}

								// Impuestos Casas
								if(GetPlayerHousesCount(i))
								{
								    SendInfoMessage(i, 1, " ", "|___________________  Impuestos  ___________________|");
								    for (new h = 1; h < MAX_HOUSE_COUNT; h++)
								    {
								        if(IsMyHouse(i, h))
								        {
								            if (HouseData[h][Price] / 800 <= PlayersData[i][Banco])
								            {
								                format(MensajeBanco, sizeof(MensajeBanco), "{eedd82}Electricidad Casa: {F50000}-$%i", (HouseData[h][Price] / 800)); // 1000
								    			SendInfoMessage(i, 1, MensajeBanco, "Banco: ");
								    			PlayersData[i][Banco] = PlayersData[i][Banco] - (HouseData[h][Price] / 800); // 1000
												FaccionData[GOBIERNO][Deposito] = FaccionData[GOBIERNO][Deposito] + (HouseData[h][Price] / 800); // 1000
												printf("CASA: %d - VALOR: %d$ - BANCO: %d$", h, HouseData[h][Price] / 800, PlayersData[i][Banco]);
											}
								            else
											{
											    printf("CASA: %d$ - BANCO: %d$", HouseData[h][Price] / 800, PlayersData[i][Banco]);
												RemoveDuenoOfHouse(h);
												format(MensajeBanco, sizeof(MensajeBanco), "Has perdido tu casa (ID: %d) por no pagar la electricidad.", h);
												SendInfoMessage(i, 3, "0", MensajeBanco);
											}
								        }
								    }
								}
							 	// Impuestos Negocios
							 	if(GetPlayerNegociosCount(i))
							 	{
							 	    SendInfoMessage(i, 1, " ", "|___________________  Impuestos  ___________________|");
							 	    for (new n = 1; n <= MAX_BIZZ; n++) //MAX_BIZZ_COUNT
							 	    {
							 	        if(IsMyBizz(playerid, n, false)) // if(IsMyBizz(i, n, false)) ---- if(IsMyBizz(playerid, i, false))
							 	        {
							 	            if ((NegociosData[n][Precio] / 800) <= PlayersData[i][Banco])
								            {
								                format(MensajeBanco, sizeof(MensajeBanco), "{eedd82}Electricidad Negocio: {F50000}-$%i", (NegociosData[n][Precio] / 800)); // 1000
								    			SendInfoMessage(i, 1, MensajeBanco, "Banco: ");
								    			PlayersData[i][Banco] = PlayersData[i][Banco] - (NegociosData[n][Precio] / 800); // 1000
												FaccionData[GOBIERNO][Deposito] = FaccionData[GOBIERNO][Deposito] + (NegociosData[n][Precio] / 800); // 1000
												printf("NEGOCIO: %d - VALOR: %d$ - BANCO: %d$", n, NegociosData[n][Precio] / 800, PlayersData[i][Banco]);
											}
											else
											{
											    printf("NEGOCIO: %d$ - BANCO: %d$", NegociosData[n][Precio] / 800, PlayersData[i][Banco]);
												RemoveDuenoOfBizz(n);
												format(MensajeBanco, sizeof(MensajeBanco), "Has perdido tu negocio (ID: %d) por no pagar la electricidad.", n);
												SendInfoMessage(i, 3, "0", MensajeBanco);
											}
										}
									}
								}
								// Impuestos Vehículos
								if(GetPlayerVehiclesCount(i))
								{
								    SendInfoMessage(i, 1, " ", "|___________________  Impuestos  ___________________|");
								    for (new c = 1; c <= MAX_CAR_DUENO; c++)
								    {
								        if(IsVehicleMyVehicle(i, c))
								        {
				                            if((coches_Todos_Precios[GetVehicleModel(c) - 400] / 200) <= PlayersData[i][Banco]) // 300 ($50) ahora $75
				                            {
				                                format(MensajeBanco, sizeof(MensajeBanco), "{eedd82}Impuesto y Seguro del Vehículo: {F50000}-$%i", coches_Todos_Precios[GetVehicleModel(c) - 400] / 200); // 300
								    			SendInfoMessage(i, 1, MensajeBanco, "Banco: ");

				        						PlayersData[i][Banco] -= coches_Todos_Precios[GetVehicleModel(c) - 400] / 200; // 300
												FaccionData[GOBIERNO][Deposito] += coches_Todos_Precios[GetVehicleModel(c) - 400] / 200; // 300
				                            }
				                            else
				                            {
				                                RemoveDuenoOfVehicle(c, 2);
												format(MensajeBanco, sizeof(MensajeBanco), "Has perdido tu vehículo (ID: %d) por no pagar los impuestos.", c);
												SendInfoMessage(i, 3, "0", MensajeBanco);
				                            }
								        }
								    }
								}

								SendInfoMessage(i, 1, " ", "|_____________________ Fin ____________________|");
 								SendInfoMessage(i, 1, " ", "|_______ Este PayDay fue del Staff TEST_______|");

								PlayersData[i][HoursPlaying]++;

								SetPlayerScore(i, GetPlayerScoreEx(i));

								GetPlayerPos(i, Xpaga, Ypaga, Zpaga);
								PlayerPlaySound(i, 1133, Xpaga, Ypaga, Zpaga);
								SetPlayerOrginalTime(i);

                                new MyWeapons;
								MyWeapons = GetPlayerWeapon(i);
								if (GetPlayerState(i) == PLAYER_STATE_DRIVER ||
									MyWeapons >= 2)
								{

								}
    						}
						}
					}
					else
					{
                        SendInfoMessage(playerid, 0, "1613", "No tienes acceso al comando /Forzar Paga.");
					}
				}

				// COMANDO: /Forzar Paga
				else if (strcmp("/Forzar Paga", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12 ||
						 strfind(cmdtext, "/runpaga", true) == 0)
				{
					new MensajeBanco[10][70];
					new Intereses;
					new Float:Xpaga, Float:Ypaga, Float:Zpaga;
					if (PlayersData[playerid][Admin] >= 9)
	    			{
	  					for (new i = 0; i < MAX_PLAYERS; i++)
	  					{
							if (IsPlayerConnected(i))
							{
								Intereses = PlayersData[i][Banco] / 2000;

								PlayersData[i][Banco] = PlayersData[i][Banco] + FaccionData[PlayersData[i][Faccion]][Paga][PlayersData[i][Rango]] + Intereses;

								format(MensajeBanco[0], 70, "{eedd82}Nuevo Balance: {eedd82}$%i {eedd82}Paga: {eedd82}$%i", PlayersData[i][Banco], FaccionData[PlayersData[i][Faccion]][Paga][PlayersData[i][Rango]]);
								format(MensajeBanco[1], 70, "{eedd82}Intereses: {eedd82}$%i", Intereses);
								format(MensajeBanco[2], 70, "{eedd82}Antiguo Balance: {eedd82}$%i", PlayersData[i][Banco] - FaccionData[PlayersData[i][Faccion]][Paga][PlayersData[i][Rango]] - Intereses);

								SendInfoMessage(i, 1, " ", "|___________________  Banco ___________________|");
								SendInfoMessage(i, 1, MensajeBanco[0], "Banco: ");
								SendInfoMessage(i, 1, MensajeBanco[1], "Banco: ");
								SendInfoMessage(i, 1, MensajeBanco[2], "Banco: ");

								if (PlayersData[i][VIP])
								{
									SendInfoMessage(i, 1, " ", "|_____________________ VIP ____________________|");
									format(MensajeBanco[6], 70, "{eedd82}Intereses VIP: {00F50A}+$%i", Intereses); //+ Intereses + Intereses);
									SendInfoMessage(i, 1, MensajeBanco[6], "Banco: ");
									PlayersData[i][Banco] = PlayersData[i][Banco] + FaccionData[PlayersData[i][Faccion]][Paga][PlayersData[i][Rango]] + FaccionData[PlayersData[i][Faccion]][Paga][PlayersData[i][Rango]];
									format(MensajeBanco[7], 70, "{eedd82}Paga VIP: {00F50A}+$%i", FaccionData[PlayersData[i][Faccion]][Paga][PlayersData[i][Rango]] + FaccionData[PlayersData[i][Faccion]][Paga][PlayersData[i][Rango]]);
									SendInfoMessage(i, 1, MensajeBanco[7], "Banco: ");
									PlayersData[i][Banco] = PlayersData[i][Banco] + Intereses; //+ Intereses + Intereses;
								}
								else
								{
									SendInfoMessage(i, 1, " ", "|_____________________ VIP ____________________|");
									SendInfoMessage(i, 1, " ", "{FF0000}¡Tú no tienes beneficios VIP! ¿Qué esperas para tenerlos? /Ayuda Vip.");
								}

								SendInfoMessage(i, 1, " ", "|_____________________ Fin ____________________|");
 								SendInfoMessage(i, 1, " ", "|_______ Este PayDay fue cortesía del Staff _______|");

								PlayersData[i][HoursPlaying]++;

								SetPlayerScore(i, GetPlayerScoreEx(i));

								GetPlayerPos(i, Xpaga, Ypaga, Zpaga);
								PlayerPlaySound(i, 1133, Xpaga, Ypaga, Zpaga);
								SetPlayerOrginalTime(i);

                                new MyWeapons;
								MyWeapons = GetPlayerWeapon(i);
								if (GetPlayerState(i) == PLAYER_STATE_DRIVER ||
									MyWeapons >= 2)
								{

								}
								else
								{
									//new StatsStrings[11][128];
									new MsjPayDay[1500];

									strcat(MsjPayDay,"{FFFFFF}|___________________  Banco ___________________|\n\n");
									strcat(MsjPayDay,MensajeBanco[0]);
									strcat(MsjPayDay,"\n\n");
									strcat(MsjPayDay,MensajeBanco[1]);
									strcat(MsjPayDay,"\n\n");
									strcat(MsjPayDay,MensajeBanco[2]);
									strcat(MsjPayDay,"\n\n");
									/*
									strcat(MsjPayDay,MensajeBanco[3]);
									strcat(MsjPayDay,"\n\n");
									strcat(MsjPayDay,MensajeBanco[4]);
									strcat(MsjPayDay,"\n\n");
									strcat(MsjPayDay,MensajeBanco[5]);
									*/
									if (PlayersData[i][VIP])
									{
										strcat(MsjPayDay,"\n\n{FFFFFF}|_______________ Beneficios VIP _______________|\n\n");
										strcat(MsjPayDay,MensajeBanco[6]);
										strcat(MsjPayDay,"\n\n");
										strcat(MsjPayDay,MensajeBanco[7]);
									}
									else
									{
										strcat(MsjPayDay,"\n\n{FFFFFF}|____ No tienes beneficios VIP (/Ayuda VIP) ___|\n\n");
									}
									strcat(MsjPayDay,"\n\n{FFFFFF}|_____________________ Fin ____________________|");
									strcat(MsjPayDay,"\n{FFFFFF}|_______ Este PayDay fue cortesía del Staff _______|");
									/*
									strcat(MsjPayDay,MensajeBanco[8]);
									strcat(MsjPayDay,"\n\n");
									strcat(MsjPayDay,MensajeBanco[9]);
									strcat(MsjPayDay,"\n\n");
									strcat(MsjPayDay,MensajeBanco[9]);
									strcat(MsjPayDay,"\n\n");
									*/
									//ShowPlayerDialogEx(i, 999, DIALOG_STYLE_MSGBOX, "| Estadísticas | Día de paga |", MsjPayDay, "Aceptar", "");
									///////////////////////////////////////////////////////////////////////////////////////////////////////
								}
    						}
						}
					}
					else
					{
                        SendInfoMessage(playerid, 0, "1613", "No tienes acceso al comando /Forzar Paga.");
					}
				}
				//////////--- /Forzar Licencia [ID]
				else if (strfind(cmdtext, "/Forzar Licencia ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8)
					{
						if (strfind(cmdtext[17], "Todos", true) == 0)
						{
						    new Mensaje_Forzar[128];
							for (new i = 0; i < MAX_PLAYERS; i++)
						    {
						        if (IsPlayerConnected(strval(cmdtext[17])))
						        {
        							ReduLicencias(i);
								}
							}
							format(Mensaje_Forzar, sizeof(Mensaje_Forzar), "%s Has forzado las licencias de todos con el comando /Forzar licencia Todos.", LOGO_STAFF);
							SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, Mensaje_Forzar);
						}
						else if (IsPlayerConnected(strval(cmdtext[17])))
						{
						    new Mensaje_Forzar[128];
							ReduLicencias(strval(cmdtext[17]));
							format(Mensaje_Forzar, sizeof(Mensaje_Forzar), "%s Has forzado las licencias de [ID: %i] %s con el comando /Forzar licencia [ID].", LOGO_STAFF, strval(cmdtext[17]),PlayersDataOnline[strval(cmdtext[17])][NameOnline]);
							SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, Mensaje_Forzar);
						}
						else
						{
                            SendInfoMessage(playerid, 0, "1612", "El jugador que desea forzar, no se encuentra conectado.");
						}
					}
					else
					{
                        SendInfoMessage(playerid, 0, "1613", "No tienes acceso al comando /Forzar Licencia.");
					}
				}
				//////////--- /CCambiar [ID]              - CAMBIAR EL MODELO DE UN COCHE
				else if (strfind(cmdtext, "/CCambiar ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8)
					{
					    new MyNearCar = IsPlayerInNearVehicleEx(playerid);
					    if (MyNearCar)
					    {
							if (MyNearCar <= MAX_CAR_PUBLIC)
		   				    {
		   				        new ModelCar = strval(cmdtext[10]);
		   				        if (ModelCar >= 400 && ModelCar <= 610)
		   				        {
									if (coches_Todos_Type[ModelCar - 400] != TREN)
									{
										ChangeVehicle(playerid, MyNearCar, ModelCar, GetPlayerVirtualWorld(playerid), GetPlayerInteriorEx(playerid));
									}
									else
									{
										SendInfoMessage(playerid, 0, "1272", "Los trenes están deshabilitados por cuestiones de seguridad.");
									}
			   				    }
								else
								{
									SendInfoMessage(playerid, 0, "921", "El ID del vehículo debe estar comprendido entre 400 y 610");
								}
		   				    }
							else
							{
								SendInfoMessage(playerid, 0, "919", "Sólo se puede cambiar el modelo del vehículo a los automóviles públicos");
							}
				        }
					}
					else
					{
						SendInfoMessage(playerid, 0, "920", "No tienes acceso al comando /CCambiar");
					}
				}
				//////////--- /Cnivel [ID]              - CAMBIAR EL NIVEL DE UNA CASA
				else if (strfind(cmdtext, "/Cnivel ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8)
					{
				        if (PlayersDataOnline[playerid][InPickup] >= HouseData[1][PickupId] &&
				             PlayersDataOnline[playerid][InPickup] <= HouseData[MAX_HOUSE][PickupId])
				        {
				            if (strval(cmdtext[8]) >= 0 && strval(cmdtext[8]) <= 50)
				            {
		                        HouseData[PlayersDataOnline[playerid][MyPickupWorld]][Level] = strval(cmdtext[8]);
		                        new MsgChangeType[MAX_TEXT_CHAT];
		                        format(MsgChangeType, sizeof(MsgChangeType), "Cambiaste el nivel a esta casa a: %i", strval(cmdtext[8]));
				                SendInfoMessage(playerid, 2, "0", MsgChangeType);

	                            SaveHouse(PlayersDataOnline[playerid][MyPickupWorld], true);
					        }
					        else
					        {
								SendInfoMessage(playerid, 0, "670", "El nivel de casa introducído tiene que estar entre 0 y 50");
							}
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "671", "No te encuentras en ninguna casa");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "672", "No tienes acceso al comando /Cnivel");
					}
				}
				//////////--- /Desbanear [Nombre_Del_Jugador]              - Desbanear a un jugador
				else if (strfind(cmdtext, "/Desbanear ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 7)
					{
					    if (strlen(cmdtext[11]) >= 3 && strlen(cmdtext[11]) <= 24)
					    {
							UnBanUser(playerid, cmdtext[11], false);
						}
				        else
				        {
							SendInfoMessage(playerid, 0, "675", "El nombre tiene que contener entre 3 y 24 caracteres");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "674", "No tienes acceso al comando /Desbanear");
					}
				}
				//////////--- /Editar Pistas
			  	else if (strcmp("/Editar Pistas", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 4)
					{
						ShowEditorPistas(playerid);
					}
					else
					{
						SendInfoMessage(playerid, 0, "1428", "No tienes acceso al comando /Editor Pistas");
					}
				}
				//////////--- /Map Off
			  	else if (strcmp("/Map Off", cmdtext, true, 8) == 0 && strlen(cmdtext) == 8)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8 || PlayersData[playerid][Mapeador] == 1)
					{
						PlayersDataOnline[playerid][ObjectWorking] = -1;
						SendInfoMessage(playerid, 1, "Has dejado el modo editor de mapas", "Mapper:");
					}
					else
					{
						SendInfoMessage(playerid, 0, "1054", "No tienes acceso al comando /Map Off");
					}
				}
				//////////--- /Map Point
				else if (strfind(cmdtext, "/Map Point ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8 || PlayersData[playerid][Mapeador] == 1)
					{
	                    PlayersDataOnline[playerid][MappingPoint] = floatstr(cmdtext[11]);
	                    new MsgMaxPoint[MAX_TEXT_CHAT];
	                    format(MsgMaxPoint, sizeof(MsgMaxPoint), "Su nuevo valor de Map Point es: %f", PlayersDataOnline[playerid][MappingPoint]);
						SendInfoMessage(playerid, 2, "0", MsgMaxPoint);
					}
					else
					{
						SendInfoMessage(playerid, 0, "1055", "No tienes acceso al comando /Map Point");
					}
				}
			  	else if (strcmp("/Map", cmdtext, true, 4) == 0 && strlen(cmdtext) == 4)
			  	{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8 || PlayersData[playerid][Mapeador] == 1)
					{
						ShowHomeMapping(playerid);
					}
					else
					{
						SendInfoMessage(playerid, 0, "1053", "No tienes acceso al comando /Map");
					}
			  	}
				//////////--- /BanEx [Nombre_Del_Jugador]              - Desbanear a un jugador
				else if (strfind(cmdtext, "/BanEx ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 7)
					{
					    if (strlen(cmdtext[7]) >= 3 && strlen(cmdtext[7]) <= 24)
					    {
							UnBanUser(playerid, cmdtext[7], true);
						}
				        else
				        {
							SendInfoMessage(playerid, 0, "973", "El nombre tiene que contener entre 3 y 24 caracteres");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "974", "No tienes acceso al comando /BanEx");
					}
				}
				//////////--- /Gtipo [ID]              - CAMBIAR EL TIPO DE UNA CASA
				else if (strfind(cmdtext, "/Gtipo ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8)
					{
			            if (strval(cmdtext[7]) >= 0 && strval(cmdtext[7]) <= MAX_GARAGE_TYPE)
			            {
       	       				new GarageID, HouseID, LockID; IsPlayerInGarageFun(playerid, HouseID, GarageID, LockID);
			                if (GarageID != -1)
			                {
		                        Garages[HouseID][GarageID][TypeGarageE] = strval(cmdtext[7]);
		                        new MsgChangeType[MAX_TEXT_CHAT];
		                        format(MsgChangeType, sizeof(MsgChangeType), "Cambiaste este garage a tipo: %i", strval(cmdtext[7]));
				                SendInfoMessage(playerid, 2, "0", MsgChangeType);
	                            SaveHouse(HouseID, true);
                            }
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "1174", "El tipo de garage introducído no existe");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "1176", "No tienes acceso al comando /Gtipo");
					}
				}
				//////////--- /Ctipo [ID]              - CAMBIAR EL TIPO DE UNA CASA
				else if (strfind(cmdtext, "/Ctipo ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8)
					{
				        if (PlayersDataOnline[playerid][InPickup] >= HouseData[1][PickupId] &&
				             PlayersDataOnline[playerid][InPickup] <= HouseData[MAX_HOUSE][PickupId])
				        {
				            if (strval(cmdtext[7]) >= 0 && strval(cmdtext[7]) <= MAX_HOUSE_TYPE)
				            {
		                        HouseData[PlayersDataOnline[playerid][MyPickupWorld]][TypeHouseId] = strval(cmdtext[7]);
		                        new MsgChangeType[MAX_TEXT_CHAT];
		                        format(MsgChangeType, sizeof(MsgChangeType), "Cambiaste el tipo de esta casa a tipo: %i", strval(cmdtext[7]));
				                SendInfoMessage(playerid, 2, "0", MsgChangeType);

								RemoveAllGarage(PlayersDataOnline[playerid][MyPickupWorld]);

	                            SaveHouse(PlayersDataOnline[playerid][MyPickupWorld], true);
					        }
					        else
					        {
								SendInfoMessage(playerid, 0, "657", "El tipo de casa introducído no existe");
							}
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "655", "No te encuentras en ninguna casa");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "656", "No tienes acceso al comando /Ctipo");
					}
				}
				//////////--- /Design Garage [ID]            - COMENZAR A DISEñAR UN GARAGE
				else if (strfind(cmdtext, "/Design Garage ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8)
					{
					    if (strval(cmdtext[15]) >= 0 && strval(cmdtext[15]) < MAX_GARAGES_DESING)
						{
							PlayersDataOnline[playerid][DesignGarageId] = strval(cmdtext[15]);
	                        new MsgChangeDesing[MAX_TEXT_CHAT];
	                        format(MsgChangeDesing, sizeof(MsgChangeDesing), "Ahora tienes el ID: %i para Design Garage", strval(cmdtext[15]));
			                SendInfoMessage(playerid, 2, "0", MsgChangeDesing);
		                }
		                else
		                {
							SendInfoMessage(playerid, 0, "1206", "El númmero de Design introducido, supera el número actual soportado");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "1177", "No tienes acceso al comando /Desing Garage");
					}
				}
				//
				//////////--- /Garages [ID_Casa]            - VER GARAGES DE UNA CASA
				else if (strfind(cmdtext, "/Garages ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8)
					{
				        new IdHouse = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
						if (IdHouse > 0 && IdHouse <= MAX_HOUSE)
						{
	                        ShowGarages(playerid, IdHouse);
		                }
		                else
		                {
							SendInfoMessage(playerid, 0, "1178", "El ID de casa introducido no existe!");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "1179", "No tienes acceso al comando /Garages");
					}
				}
				//////////--- /Dg aP
				else if (strfind(cmdtext, "/Dg Rand ", true) == 0)
				{
				    new IdHouse = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
				    new IdGarage = strval(cmdtext[GetPosSpace(cmdtext, 3)]);
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8)
					{
						if (IdHouse > 0 && IdHouse <= MAX_HOUSE)
						{
						    if (IdGarage >= 0 && IdGarage < MAX_GARAGE_FOR_HOUSE)
						    {
						        if (ExistGarageForHouse(IdHouse, IdGarage))
						        {
									Garages[IdHouse][IdGarage][WorldG] = random(999999 + 1000);

									new MsgChangeDesing[MAX_TEXT_CHAT];
									format(MsgChangeDesing, sizeof(MsgChangeDesing), "   -  Nuevo WORLD RANDOM (%i) MODIFICADA GARAGEID[%i]  PARA LA CASA ID[%i]-",Garages[IdHouse][IdGarage][WorldG], IdGarage, IdHouse);
									SendInfoMessage(playerid, 2, "0", MsgChangeDesing);
				                }
				                else
				                {
									SendInfoMessage(playerid, 0, "1199", "Esta casa no tiene este ID de Garage creado!");
								}
			                }
			                else
			                {
								SendInfoMessage(playerid, 0, "1198", "El ID de garage sobrepasa el límite de los garages!");
							}
		                }
		                else
		                {
							SendInfoMessage(playerid, 0, "1197", "El ID de casa introducido no existe!");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "1196", "No tienes acceso al comando /Dg Rand");
					}
				}
				//////////--- /Dg a
				else if (strcmp("/Dg a", cmdtext, true, 5) == 0 && strlen(cmdtext) == 5)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8)
					{
				        GetPlayerPos(playerid, GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][Xg], GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][Yg], GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][Zg]);
				        GetPlayerFacingAngle(playerid, GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][ZZg]);

                        new MsgChangeDesing[MAX_TEXT_CHAT];
                        format(MsgChangeDesing, sizeof(MsgChangeDesing), "   -  Nueva POS Desing ID[%i] \"AFUERA A PIE\"  -", PlayersDataOnline[playerid][DesignGarageId]);
		                SendInfoMessage(playerid, 2, "0", MsgChangeDesing);
                        format(MsgChangeDesing, sizeof(MsgChangeDesing), "   -  X_Afuera: %f | Y_Afuera: %f  | Z_Afuera: %f | ZZ_Afuera: %f ", GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][Xg], GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][Yg], GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][Zg], GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][ZZg]);
		                SendInfoMessage(playerid, 2, "0", MsgChangeDesing);
					}
					else
					{
						SendInfoMessage(playerid, 0, "1180", "No tienes acceso al comando /Dg a");
					}
				}
				//////////--- /Dg aP
				else if (strfind(cmdtext, "/Dg aP ", true) == 0)
				{
				    new IdHouse = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
				    new IdGarage = strval(cmdtext[GetPosSpace(cmdtext, 3)]);
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8)
					{
						if (IdHouse > 0 && IdHouse <= MAX_HOUSE)
						{
						    if (IdGarage >= 0 && IdGarage < MAX_GARAGE_FOR_HOUSE)
						    {
						        if (ExistGarageForHouse(IdHouse, IdGarage))
						        {
									GetPlayerPos(playerid, Garages[IdHouse][IdGarage][Xg], Garages[IdHouse][IdGarage][Yg], Garages[IdHouse][IdGarage][Zg]);
									GetPlayerFacingAngle(playerid, Garages[IdHouse][IdGarage][ZZg]);

									new MsgChangeDesing[MAX_TEXT_CHAT];
									format(MsgChangeDesing, sizeof(MsgChangeDesing), "   -  Nueva POS MODIFICADA \"AFUERA A PIE\" GARAGEID[%i]  PARA LA CASA ID[%i]-", IdGarage, IdHouse);
									SendInfoMessage(playerid, 2, "0", MsgChangeDesing);
									format(MsgChangeDesing, sizeof(MsgChangeDesing), "   -  X_Afuera: %f | Y_Afuera: %f  | Z_Afuera: %f | ZZ_Afuera: %f ", Garages[IdHouse][IdGarage][Xg], Garages[IdHouse][IdGarage][Yg], Garages[IdHouse][IdGarage][Zg], Garages[IdHouse][IdGarage][ZZg]);
									SendInfoMessage(playerid, 2, "0", MsgChangeDesing);
				                }
				                else
				                {
									SendInfoMessage(playerid, 0, "1195", "Esta casa no tiene este ID de Garage creado!");
								}
			                }
			                else
			                {
								SendInfoMessage(playerid, 0, "1194", "El ID de garage sobrepasa el límite de los garages!");
							}
		                }
		                else
		                {
							SendInfoMessage(playerid, 0, "1193", "El ID de casa introducido no existe!");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "1192", "No tienes acceso al comando /Dg aP");
					}
				}
				//////////--- //Dg c
				else if (strcmp("/Dg c", cmdtext, true, 5) == 0 && strlen(cmdtext) == 5)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8)
					{
				        GetPlayerPos(playerid, GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][XgOut], GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][YgOut], GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][ZgOut]);
				        GetPlayerFacingAngle(playerid, GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][ZZgOut]);

                        new MsgChangeDesing[MAX_TEXT_CHAT];
                        format(MsgChangeDesing, sizeof(MsgChangeDesing), "   -  Nueva POS Desing ID[%i] \"AFUERA COCHE\" -", PlayersDataOnline[playerid][DesignGarageId]);
		                SendInfoMessage(playerid, 2, "0", MsgChangeDesing);
                        format(MsgChangeDesing, sizeof(MsgChangeDesing), "   -  X_Afuera_C: %f | Y_Afuera_C: %f  | Z_Afuera_C: %f | ZZ_Afuera_C: %f ", GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][XgOut], GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][YgOut], GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][ZgOut], GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][ZZgOut]);
		                SendInfoMessage(playerid, 2, "0", MsgChangeDesing);
					}
					else
					{
						SendInfoMessage(playerid, 0, "1181", "No tienes acceso al comando /Dg c");
					}
				}
				//////////--- /Dg cP
				else if (strfind(cmdtext, "/Dg cP ", true) == 0)
				{
				    new IdHouse = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
				    new IdGarage = strval(cmdtext[GetPosSpace(cmdtext, 3)]);
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8)
					{
						if (IdHouse > 0 && IdHouse <= MAX_HOUSE)
						{
						    if (IdGarage >= 0 && IdGarage < MAX_GARAGE_FOR_HOUSE)
						    {
						        if (ExistGarageForHouse(IdHouse, IdGarage))
						        {
									GetPlayerPos(playerid, Garages[IdHouse][IdGarage][XgOut], Garages[IdHouse][IdGarage][YgOut], Garages[IdHouse][IdGarage][ZgOut]);
									GetPlayerFacingAngle(playerid, Garages[IdHouse][IdGarage][ZZgOut]);

									new MsgChangeDesing[MAX_TEXT_CHAT];
									format(MsgChangeDesing, sizeof(MsgChangeDesing), "   -  Nueva POS MODIFICADA \"AFUERA COCHE\" GARAGEID[%i]  PARA LA CASA ID[%i]-", IdGarage, IdHouse);
									SendInfoMessage(playerid, 2, "0", MsgChangeDesing);
									format(MsgChangeDesing, sizeof(MsgChangeDesing), "   -  X_Afuera_C: %f | Y_Afuera_C: %f  | Z_Afuera_C: %f | ZZ_Afuera_C: %f ", Garages[IdHouse][IdGarage][XgOut], Garages[IdHouse][IdGarage][YgOut], Garages[IdHouse][IdGarage][ZgOut], Garages[IdHouse][IdGarage][ZZgOut]);
									SendInfoMessage(playerid, 2, "0", MsgChangeDesing);
				                }
				                else
				                {
									SendInfoMessage(playerid, 0, "1191", "Esta casa no tiene este ID de Garage creado!");
								}
			                }
			                else
			                {
								SendInfoMessage(playerid, 0, "1190", "El ID de garage sobrepasa el límite de los garages!");
							}
		                }
		                else
		                {
							SendInfoMessage(playerid, 0, "1189", "El ID de casa introducido no existe!");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "1188", "No tienes acceso al comando /Dg cP");
					}
				}
				//////////--- //Dg d
				else if (strcmp("/Dg d", cmdtext, true, 5) == 0 && strlen(cmdtext) == 5)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8)
					{
				        GetPlayerPos(playerid, GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][XgIn], GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][YgIn], GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][ZgIn]);
				        GetPlayerFacingAngle(playerid, GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][ZZgIn]);

                        new MsgChangeDesing[MAX_TEXT_CHAT];
                        format(MsgChangeDesing, sizeof(MsgChangeDesing), "   -  Nueva POS Desing ID[%i] \"DENTRO\" -", PlayersDataOnline[playerid][DesignGarageId]);
		                SendInfoMessage(playerid, 2, "0", MsgChangeDesing);
                        format(MsgChangeDesing, sizeof(MsgChangeDesing), "   -  X_Dentro: %f | Y_Dentro: %f  | Z_Dentro: %f | ZZ_Dentro: %f ", GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][XgIn], GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][YgIn], GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][ZgIn], GaragesDesing[PlayersDataOnline[playerid][DesignGarageId]][ZZgIn]);
		                SendInfoMessage(playerid, 2, "0", MsgChangeDesing);
					}
					else
					{
						SendInfoMessage(playerid, 0, "1182", "No tienes acceso al comando /Dg d");
					}
				}
				//////////--- /Dg dP
				else if (strfind(cmdtext, "/Dg dP ", true) == 0)
				{
				    new IdHouse = strval(cmdtext[GetPosSpace(cmdtext, 2)]);
				    new IdGarage = strval(cmdtext[GetPosSpace(cmdtext, 3)]);
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8)
					{
						if (IdHouse > 0 && IdHouse <= MAX_HOUSE)
						{
						    if (IdGarage >= 0 && IdGarage < MAX_GARAGE_FOR_HOUSE)
						    {
						        if (ExistGarageForHouse(IdHouse, IdGarage))
						        {
									GetPlayerPos(playerid, Garages[IdHouse][IdGarage][XgIn], Garages[IdHouse][IdGarage][YgIn], Garages[IdHouse][IdGarage][ZgIn]);
									GetPlayerFacingAngle(playerid, Garages[IdHouse][IdGarage][ZZgIn]);

									new MsgChangeDesing[MAX_TEXT_CHAT];
									format(MsgChangeDesing, sizeof(MsgChangeDesing), "   -  Nueva POS MODIFICADA \"DENTRO\" GARAGE ID[%i]  PARA LA CASA ID[%i]-", IdGarage, IdHouse);
									SendInfoMessage(playerid, 2, "0", MsgChangeDesing);
									format(MsgChangeDesing, sizeof(MsgChangeDesing), "   -  X_Dentro: %f | Y_Dentro: %f  | Z_Dentro: %f | ZZ_Dentro: %f ", Garages[IdHouse][IdGarage][XgIn], Garages[IdHouse][IdGarage][YgIn], Garages[IdHouse][IdGarage][ZgIn], Garages[IdHouse][IdGarage][ZZgIn]);
									SendInfoMessage(playerid, 2, "0", MsgChangeDesing);
				                }
				                else
				                {
									SendInfoMessage(playerid, 0, "1187", "Esta casa no tiene este ID de Garage creado!");
								}
			                }
			                else
			                {
								SendInfoMessage(playerid, 0, "1186", "El ID de garage sobrepasa el límite de los garages!");
							}
		                }
		                else
		                {
							SendInfoMessage(playerid, 0, "1185", "El ID de casa introducido no existe!");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "1172", "No tienes acceso al comando /Dg cP");
					}
				}
				//////////--- /VCasa              - VENDER UNA CASA
			  	else if (strcmp("/VCasa", cmdtext, true, 6) == 0 && strlen(cmdtext) == 6)
	  			{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8)
					{
				        if (PlayersDataOnline[playerid][InPickup] >= HouseData[1][PickupId] &&
				             PlayersDataOnline[playerid][InPickup] <= HouseData[MAX_HOUSE][PickupId])
				        {
				            if (strlen(HouseData[PlayersDataOnline[playerid][MyPickupWorld]][Dueno]) != 2)
				            {
								new playerid_vender = RemoveDuenoOfHouse(PlayersDataOnline[playerid][MyPickupWorld]);
								new MsgVentaCasaEx[MAX_TEXT_CHAT];
								format(MsgVentaCasaEx, sizeof(MsgVentaCasaEx), "Has vendido esta casa al estado, era propiedad de %s", PlayersDataOnline[playerid_vender][NameOnline]);
								SendInfoMessage(playerid, 3, "0", MsgVentaCasaEx);
					        }
					        else
					        {
								SendInfoMessage(playerid, 0, "673", "Esta casa no tiene dueño");
							}
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "674", "No te encuentras en ninguna casa");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "675", "No tienes acceso al comando /Vcasa");
					}
				}
				//////////--- /VNegocio	              - VENDER UN NEGOCIO
			  	else if (strcmp("/Vnegocio", cmdtext, true, 9) == 0 && strlen(cmdtext) == 9)
	  			{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 4)
					{
				        if (PlayersDataOnline[playerid][InPickup] >= NegociosData[1][PickupOutId] &&
				             PlayersDataOnline[playerid][InPickup] <= NegociosData[MAX_BIZZ][PickupOutId])
				        {
				            if (strlen(NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Dueno]) != 1)
				            {
								new MsgVentaNegocioEx[MAX_TEXT_CHAT];
								format(MsgVentaNegocioEx, sizeof(MsgVentaNegocioEx), "Has vendido este negocio al estado, era propiedad de %s", NegociosData[PlayersDataOnline[playerid][MyPickupWorld]][Dueno]);
								SendInfoMessage(playerid, 3, "0", MsgVentaNegocioEx);
								RemoveDuenoOfBizz(PlayersDataOnline[playerid][MyPickupWorld]);
					        }
					        else
					        {
								SendInfoMessage(playerid, 0, "676", "Este negocio no tiene dueño");
							}
				        }
				        else
				        {
							SendInfoMessage(playerid, 0, "677", "No te encuentras en ningún negocio");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "678", "No tienes acceso al comando /Vnegocio");
					}
				}
			    // COMANDO: /Borrar Warn [ID]
	  			else if (strfind(cmdtext, "/Borrar Warn ", true) == 0)
			    {
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 7)
					{
				        new playeridto	= strval(cmdtext[13]);
						if (IsPlayerConnected(playeridto))
						{
							PlayersData[playeridto][Warn] = 0;
							new MsgToAdmin[MAX_TEXT_CHAT];
							new MsgToUser[MAX_TEXT_CHAT];
							format(MsgToAdmin, sizeof(MsgToAdmin), "%s Has quitado todos los Warns a %s", LOGO_STAFF, PlayersDataOnline[playeridto][NameOnline]);
							format(MsgToUser, sizeof(MsgToUser), "%s El administrador %s te quitado todos los Warns", LOGO_STAFF, PlayersDataOnline[playerid][NameOnline]);
							SendClientMessage(playerid, COLOR_KICK_JAIL_BAN, MsgToAdmin);
							SendClientMessage(playeridto, COLOR_KICK_JAIL_BAN, MsgToUser);
						}
						else
						{
							SendInfoMessage(playerid, 0, "922", "El jugador que desea quitarle los Warns, no se encuentra conectado");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "923", "No tienes acceso al comando /Borrar Warn [ID]");
					}
	  			}
			    // COMANDO: /Borrar
			  	else if (strcmp("/Borrar", cmdtext, true, 7) == 0 && strlen(cmdtext) == 7)
	  			{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 1 && PlayersDataOnline[playerid][AdminOn])
					{
		  			    for (new i = 0; i < 100; i++)
		  			    {
		  			    	SendClientMessageToAll(0x000000FF, " ");
				    	}
						SendClientMessageToAll(COLOR_MESSAGES[2], " El chat ha sido limpiado!");
					}
					else
					{
						for (new i = 0; i < 20; i++)
		  			    {
		  			    	SendClientMessage(playerid, 0xFFFFFFFF, "");
				    	}
					}
	  			}
				// COMANDO: /Borrar Checkpoint
			  	else if (strcmp("/Borrar CP", cmdtext, true, 10) == 0 && strlen(cmdtext) == 10 ||
				  		 strcmp("/Borrar Checkpoint", cmdtext, true, 18) == 0 && strlen(cmdtext) == 18)
	  			{
					if (onCheck[playerid])
					{
         				DisablePlayerCheckpoint(playerid);
        				onCheck[playerid] = false;
		  		    	SendInfoMessage(playerid, 2, "0", "Has desactivado el checkpoint que tenias activo");
				   	}
					else
					{
						SendInfoMessage(playerid, 0, "855", "No tienes ningún checkpoint activo");
					}
	  			}
			    // COMANDO: /Adminon
			  	else if (strcmp("/AdminOn", cmdtext, true, 8) == 0 && strlen(cmdtext) == 8)
	  			{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 1)
					{
						new MsgAdminOn[MAX_TEXT_CHAT];
						if (PlayersDataOnline[playerid][AdminOn])
						{
							format(MsgAdminOn, sizeof(MsgAdminOn), "%s Has desactivado el AdminOn", LOGO_STAFF);
				   			PlayersDataOnline[playerid][AdminOn] = false;
                            SetPlayerColor(playerid, (PlayersData[playerid][VIP]) ? COLOR_PLAYERS_VIP : PLAYERS_COLOR);

       						// OCULTAR ID'S DE NPC'S
							for (new npc = 0; npc < MAX_PLAYERS; npc++)
							{
           						if(IsPlayerNPC(npc)) //Checks if the player that just is used is an NPC.
  	                            {
									if (PlayersData[playerid][Admin] >= 8)
									{
										FCNPC_HideInTabListForPlayer(npc, playerid);
									}
								}
							}
						}
						else
						{
							format(MsgAdminOn, sizeof(MsgAdminOn), "%s Has activado el AdminOn", LOGO_STAFF);
							SetPlayerColor(playerid, AdminsRangosColors[PlayersData[playerid][Admin] -1]);
							PlayersDataOnline[playerid][AdminOn] = true;
							// MOSTRAR ID'S DE NPC'S
							for (new npc = 0; npc < MAX_PLAYERS; npc++)
							{
           						if(IsPlayerNPC(npc)) //Checks if the player that just is used is an NPC.
  	                            {
									if (PlayersData[playerid][Admin] >= 8)
									{
										FCNPC_ShowInTabListForPlayer(npc, playerid);
									}
								}
							}
						}
						SendClientMessage(playerid, COLOR_MESSAGES[1], MsgAdminOn);
					}
					else
					{
						SendInfoMessage(playerid, 0, "144", "No tienes acceso al comando /AdminOn");
					}
	  			}
	  			// COMANDO: /VIP [ID]
				else if (strfind(cmdtext, "/VIP ", true) == 0)
				{
					if(PlayersData[playerid][Admin] >= 9)
					{
						new vipid = strval(cmdtext[5]);
					    if(IsPlayerConnected(vipid))
					    {
					        if(PlayersData[vipid][VIP] == 2) return SendInfoMessage(playerid, 3, "0", "El jugador al que quieres otorgar VIP ya posee una membresía superior.");
					        if(PlayersData[vipid][VIP] == 1 && PlayersData[vipid][TimeVip] > 0)
					        {
				                PlayersData[vipid][TimeVip] += MAX_TIME_VIP;
				                new MsjVipID[MAX_TEXT_CHAT], MsjVip[MAX_TEXT_CHAT];
				                format(MsjVipID, sizeof(MsjVipID), "Se ha renovado tu membresía VIP, ahora te quedan %i días con %i horas.", PlayersData[vipid][TimeVip] / 24, PlayersData[vipid][TimeVip] % 24);
				                SendInfoMessage(vipid, 3, "0", MsjVipID);
				                format(MsjVip, sizeof(MsjVip), "Has renovado la membresía VIP de %s, ahora le quedan %i días con %i horas.", PlayersDataOnline[vipid][NameOnlineFix], PlayersData[vipid][TimeVip] / 24, PlayersData[vipid][TimeVip] % 24);
				                SendInfoMessage(playerid, 3, "0", MsjVip);
				            }
				            else
				        	{
           						PlayersData[vipid][VIP] = 1;
				            	PlayersData[vipid][TimeVip] = MAX_TIME_VIP;
				            	new MsjVipID[MAX_TEXT_CHAT], MsjVip[MAX_TEXT_CHAT];
				            	format(MsjVipID, sizeof(MsjVipID), "¡Felicidades, ahora tienes una membresía VIP, vence en %i días, %i horas.", PlayersData[vipid][TimeVip] / 24, PlayersData[vipid][TimeVip] % 24);
				            	SendInfoMessage(vipid, 3, "0", MsjVipID);
	                			format(MsjVip, sizeof(MsjVip), "Has otorgado una membresía VIP a %s, ahora tiene %i días con %i horas.", PlayersDataOnline[vipid][NameOnlineFix], PlayersData[vipid][TimeVip] / 24, PlayersData[vipid][TimeVip] % 24);
				                SendInfoMessage(playerid, 3, "0", MsjVip);
				                SetPlayerColor(vipid, COLOR_PLAYERS_VIP);
				        	}
						}
						else
						{
						    SendInfoMessage(playerid, 3, "0", "El jugador al que quieres otorgar VIP no se encuentra conectado");
				        }
				    }
				    else
				    {
				        SendInfoMessage(playerid, 0, "101", "Tú no tienes acceso al comando /VIP [ID].");
				        if(PlayersData[playerid][Admin] >= 9)
				        {
				            SendInfoMessage(playerid, 0, "101", "Recuerda activar /AdminOn");
				        }
				    }
				}
				// COMANDO: /SVIP [ID]
				else if (strfind(cmdtext, "/SVIP ", true) == 0)
				{
					if(PlayersData[playerid][Admin] >= 9)
					{
						new vipid = strval(cmdtext[5]);
						/*new OnServerGroup = PlayersData[playerid][VIP] == 2;
						new VipGroup = OnServerGroup+34;

						new QUERY[384];
						mysql_format(DatabaseForo, QUERY, sizeof(QUERY), "UPDATE `forostable_members` SET id_post_group = %i WHERE member_name = '%s';", VipGroup, PlayersDataOnline[playerid][NameOnline]);
						mysql_tquery(DatabaseForo, QUERY);*/
					    if(IsPlayerConnected(vipid))
					    {
					        if(PlayersData[vipid][VIP] == 2 && PlayersData[vipid][TimeVip] > 0)
					        {
				                PlayersData[vipid][TimeVip] += MAX_TIME_VIP;
				                new MsjVipID[MAX_TEXT_CHAT], MsjVip[MAX_TEXT_CHAT];
				                format(MsjVipID, sizeof(MsjVipID), "Se ha renovado tu membresía Super VIP, ahora te quedan %i días con %i horas.", PlayersData[vipid][TimeVip] / 24, PlayersData[vipid][TimeVip] % 24);
				                SendInfoMessage(vipid, 3, "0", MsjVipID);
				                format(MsjVip, sizeof(MsjVip), "Has renovado la membresía Super VIP de %s, ahora le quedan %i días con %i horas.", PlayersDataOnline[vipid][NameOnlineFix], PlayersData[vipid][TimeVip] / 24, PlayersData[vipid][TimeVip] % 24);
				                SendInfoMessage(playerid, 3, "0", MsjVip);

				            }
				            else
				        	{
           						PlayersData[vipid][VIP] = 2;
				            	PlayersData[vipid][TimeVip] = MAX_TIME_VIP;
				            	new MsjVipID[MAX_TEXT_CHAT], MsjVip[MAX_TEXT_CHAT];
				            	format(MsjVipID, sizeof(MsjVipID), "¡Felicidades, ahora tienes una membresía Super VIP, vence en %i días, %i horas.", PlayersData[vipid][TimeVip] / 24, PlayersData[vipid][TimeVip] % 24);
				            	SendInfoMessage(vipid, 3, "0", MsjVipID);
	                			format(MsjVip, sizeof(MsjVip), "Has otorgado una membresía Super VIP a %s, ahora tiene %i días con %i horas.", PlayersDataOnline[vipid][NameOnlineFix], PlayersData[vipid][TimeVip] / 24, PlayersData[vipid][TimeVip] % 24);
				                SendInfoMessage(playerid, 3, "0", MsjVip);
				                SetPlayerColor(vipid, COLOR_PLAYERS_VIP);
				        	}
						}
						else
						{
						    SendInfoMessage(playerid, 3, "0", "El jugador al que quieres otorgar Super VIP no se encuentra conectado");
				        }
				    }
				    else
				    {
				        SendInfoMessage(playerid, 0, "101", "Tú no tienes acceso al comando /SVIP [ID].");
				        if(PlayersData[playerid][Admin] >= 9)
				        {
				            SendInfoMessage(playerid, 0, "101", "Recuerda activar /AdminOn");
				        }
				    }
				}
	  			// COMANDO: /RVIP [ID]
				else if (strfind(cmdtext, "/RVIP ", true) == 0)
				{
					if(PlayersData[playerid][Admin] >= 9)
					{
						new vipid = strval(cmdtext[5]);
					    if(IsPlayerConnected(vipid))
					    {
					        if(PlayersData[vipid][VIP] == 2) return SendInfoMessage(playerid, 3, "0", "El jugador al que quieres renovar su VIP ya posee una membresía superior.");
					        if(PlayersData[vipid][VIP] == 1 && PlayersData[vipid][TimeVip] > 0)
					        {
				                PlayersData[vipid][TimeVip] += 10;
				                new MsjVipID[MAX_TEXT_CHAT], MsjVip[MAX_TEXT_CHAT];
				                format(MsjVipID, sizeof(MsjVipID), "Se ha renovado tu membresía VIP, ahora te quedan %i días con %i horas.", PlayersData[vipid][TimeVip] / 24, PlayersData[vipid][TimeVip] % 24);
				                SendInfoMessage(vipid, 3, "0", MsjVipID);
				                format(MsjVip, sizeof(MsjVip), "Has renovado la membresía VIP de %s, ahora le quedan %i días con %i horas.", PlayersDataOnline[vipid][NameOnlineFix], PlayersData[vipid][TimeVip] / 24, PlayersData[vipid][TimeVip] % 24);
				                SendInfoMessage(playerid, 3, "0", MsjVip);

				            }
				            else
				        	{
           						PlayersData[vipid][VIP] = 1;
				            	PlayersData[vipid][TimeVip] = 10;
				            	new MsjVipID[MAX_TEXT_CHAT], MsjVip[MAX_TEXT_CHAT];
				            	format(MsjVipID, sizeof(MsjVipID), "¡Felicidades, ahora tienes una membresía VIP, vence en %i días, %i horas.", PlayersData[vipid][TimeVip] / 24, PlayersData[vipid][TimeVip] % 24);
				            	SendInfoMessage(vipid, 3, "0", MsjVipID);
	                			format(MsjVip, sizeof(MsjVip), "Has otorgado una membresía VIP a %s, ahora tiene %i días con %i horas.", PlayersDataOnline[vipid][NameOnlineFix], PlayersData[vipid][TimeVip] / 24, PlayersData[vipid][TimeVip] % 24);
				                SendInfoMessage(playerid, 3, "0", MsjVip);
				                SetPlayerColor(vipid, COLOR_PLAYERS_VIP);
				        	}
						}
						else
						{
						    SendInfoMessage(playerid, 3, "0", "El jugador al que quieres otorgar VIP no se encuentra conectado");
				        }
				    }
				    else
				    {
				        SendInfoMessage(playerid, 0, "101", "Tú no tienes acceso al comando /VIP [ID].");
				        if(PlayersData[playerid][Admin] >= 9)
				        {
				            SendInfoMessage(playerid, 0, "101", "Recuerda activar /AdminOn");
				        }
				    }
    			}
	  			// COMANDO: /RSVIP [ID]
				else if (strfind(cmdtext, "/RSVIP ", true) == 0)
				{
					if(PlayersData[playerid][Admin] >= 9)
					{
						new vipid = strval(cmdtext[5]);
					    if(IsPlayerConnected(vipid))
					    {
					        if(PlayersData[vipid][VIP] == 2 && PlayersData[vipid][TimeVip] > 0)
					        {
				                PlayersData[vipid][TimeVip] += 10;
				                new MsjVipID[MAX_TEXT_CHAT], MsjVip[MAX_TEXT_CHAT];
				                format(MsjVipID, sizeof(MsjVipID), "Se ha renovado tu membresía Super VIP, ahora te quedan %i días con %i horas.", PlayersData[vipid][TimeVip] / 24, PlayersData[vipid][TimeVip] % 24);
				                SendInfoMessage(vipid, 3, "0", MsjVipID);
				                format(MsjVip, sizeof(MsjVip), "Has renovado la membresía Super VIP de %s, ahora le quedan %i días con %i horas.", PlayersDataOnline[vipid][NameOnlineFix], PlayersData[vipid][TimeVip] / 24, PlayersData[vipid][TimeVip] % 24);
				                SendInfoMessage(playerid, 3, "0", MsjVip);

				            }
				            else
				        	{
           						PlayersData[vipid][VIP] = 2;
				            	PlayersData[vipid][TimeVip] = 10;
				            	new MsjVipID[MAX_TEXT_CHAT], MsjVip[MAX_TEXT_CHAT];
				            	format(MsjVipID, sizeof(MsjVipID), "¡Felicidades, ahora tienes una membresía Super VIP, vence en %i días, %i horas.", PlayersData[vipid][TimeVip] / 24, PlayersData[vipid][TimeVip] % 24);
				            	SendInfoMessage(vipid, 3, "0", MsjVipID);
	                			format(MsjVip, sizeof(MsjVip), "Has otorgado una membresía Super VIP a %s, ahora tiene %i días con %i horas.", PlayersDataOnline[vipid][NameOnlineFix], PlayersData[vipid][TimeVip] / 24, PlayersData[vipid][TimeVip] % 24);
				                SendInfoMessage(playerid, 3, "0", MsjVip);
				                SetPlayerColor(vipid, COLOR_PLAYERS_VIP);
				        	}
						}
						else
						{
						    SendInfoMessage(playerid, 3, "0", "El jugador al que quieres otorgar Super VIP no se encuentra conectado");
				        }
				    }
				    else
				    {
				        SendInfoMessage(playerid, 0, "101", "Tú no tienes acceso al comando /RSVIP [ID].");
				        if(PlayersData[playerid][Admin] >= 9)
				        {
				            SendInfoMessage(playerid, 0, "101", "Recuerda activar /AdminOn");
				        }
				    }
				}
				//////////--- /Teles [ID]
				else if (strfind(cmdtext, "/Teles ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 1)
					{
					    new SendString[4];
						strmid(SendString, cmdtext, 7, strlen(cmdtext), sizeof(SendString));
						new Float:X_Y_Z_ALL[4];
						switch (strval(SendString))
						{
						    case 0:
							{
						        new Float:X_Y_Z[4] = {2495.3357,-1687.1404,13.5153,357.6980}; //Groove
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
						    case 1:
						    {
	                            new Float:X_Y_Z[4] = {1479.6165, -1737.7754, 13.5469, 359.5288}; //Ayuntamiento
	                        	X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
						    case 2:
						    {
						        new Float:X_Y_Z[4] = {1444.3427, -858.3128,52.3409, 74.2515}; //Vinewood
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
	                        case 3:
		     				{
						        new Float:X_Y_Z[4] = {1753.5795, -2622.3982, 13.5469, 0.1541}; // Aero LS
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 4:
							{
						        new Float:X_Y_Z[4] = {-121.3143,-980.9033,26.2507,134.6347}; // LS & SF
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 5:
							{
						        new Float:X_Y_Z[4] = {-1335.8469,-409.1505,14.1484,260.8257}; // Aero SF
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 6:
							{
						        new Float:X_Y_Z[4] = {-2026.5255,-97.7325,35.1641,0.4050}; // Autoescuela
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 7:
						    {
						        new Float:X_Y_Z[4] = {-1574.1990,662.2103,7.1875,269.1603}; // Police SF
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 8:
							{
						        new Float:X_Y_Z[4] = {-2623.7808,1410.0333,7.0938,198.2430}; // Jizzy
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 9:
							{
						        new Float:X_Y_Z[4] = {-2504.1143,2421.4956,16.5979,32.8509}; // Bayside
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 10:
							{
						        new Float:X_Y_Z[4] = {-1496.1182,2600.6624,55.6875,358.7807}; // El quebrado
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 11:
							{
						        new Float:X_Y_Z[4] = {-236.7057,2628.7227,62.6907,359.8041}; // Ejercito
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 12:
							{
						        new Float:X_Y_Z[4] = {213.8932,1870.1552,17.6406,1.7001}; // AREA 59
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 13:
							{
						        new Float:X_Y_Z[4] = {1685.7563,1447.7520,10.7697,269.1385}; // Aero LV
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 14:
							{
						        new Float:X_Y_Z[4] = {2034.6119,1342.9308,10.8203,269.2883}; // LV
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 15:
							{
						        new Float:X_Y_Z[4] = {2350.2805,2143.4919,10.6797,90.4581}; // Casino LV
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 16:
							{
						        new Float:X_Y_Z[4] = {2337.1001,2455.9500,14.9688,180.0000}; // Police LV
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 17:
							{
						        new Float:X_Y_Z[4] = {1379.8220,2181.3489,11.0234,133.8801}; // Stadium LV
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 18:
							{
						        new Float:X_Y_Z[4] = {744.3160,-523.0973,16.3359,179.7914}; // Dillimore
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 19:
							{
						        new Float:X_Y_Z[4] = {232.8348,-71.7456,1.4233,357.7764}; // Blue Berry
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 20:
							{
						        new Float:X_Y_Z[4] = {1317.7798,313.0467,19.4063,336.1668}; // Montgomery
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 21:
							{
						        new Float:X_Y_Z[4] = {-2146.3064,-2411.0188,30.4765,320.4872}; // Angel Alpine
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 22:
							{
						        new Float:X_Y_Z[4] = {868.6628,-28.8207,63.1953,159.8571}; // Monte
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 23:
							{
						        new Float:X_Y_Z[4] = {-2756.8635,376.3777,4.3359,271.0996}; // Hall 2
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 24:
							{
						        new Float:X_Y_Z[4] = {-302.6161,1512.5471,75.3594,182.8583}; // Drift
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 25:
							{
						        new Float:X_Y_Z[4] = {1131.9738,-2036.8430,69.0078,269.3504}; // LCN
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 26:
							{
						        new Float:X_Y_Z[4] = {1428.3345947266,1325.5063476563,11.149431228638,269.3504}; // Death Match
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];

						        //SetPlayerInteriorEx(playerid, 5);
						        SetPlayerVirtualWorldEx(playerid, 10);
							}
							case 27:
							{
						        new Float:X_Y_Z[4] = {-1997.4178,1852.7991,33.7013,270.0722}; // Alcatraz
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 28:
							{
						        new Float:X_Y_Z[4] = {1439.7295,-6720.5732,34.6892,191.9196}; // Pista de Carreras
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 29:
							{
							    new Float:X_Y_Z[4] = {1559.5754,-1357.8495,329.4535,256.6651}; // Edificio más alto ls
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							default:
							{
								SendInfoMessage(playerid, 0, "145", "Ese tele no existe.");
								return 1;
							}
						}

						if (IsPlayerInAnyVehicle(playerid) && GetPlayerVehicleSeat(playerid) == 0)
						{
							SetVehiclePos(GetPlayerVehicleID(playerid), X_Y_Z_ALL[0], X_Y_Z_ALL[1], X_Y_Z_ALL[2]);
							SetVehicleZAngle(GetPlayerVehicleID(playerid), X_Y_Z_ALL[3]);
						}
						else
						{
							SetPlayerPos(playerid, X_Y_Z_ALL[0], X_Y_Z_ALL[1], X_Y_Z_ALL[2]);
							SetPlayerFacingAngle(playerid, X_Y_Z_ALL[3]);
							SetCameraBehindPlayer(playerid);
						}
						SetPlayerInteriorEx(playerid, 0);
						ChangeHouseOrOther(playerid, 0);

						if (strval(SendString) != 26)
						{
							SetPlayerVirtualWorldEx(playerid, 0);
						}
						return 1;
					}
					else
					{
						SendInfoMessage(playerid, 0, "146", "Tú no tienes acceso al comando /Teles.");
				        return 1;
					}
		    	}
		    	///////////--- /Facciones
		    	else if (strcmp("/Facciones", cmdtext, true, 10) == 0 && strlen(cmdtext) == 10)
		    	{
		    	    new FaccDialog[620];
		    	    strcat(FaccDialog, "{00F50A}ID\t{A901DB}Facción\n\n");
					new facc[120];
					for(new i = 1; i <= 22; i++)
					{
					    if(i == PlayersData[playerid][Faccion])
					    {
					    	format(facc, sizeof(facc), "{00F50A}%i\t{00F50A}%s\n", i, FaccionData[i][NameFaccion]);
					    }
					    else
					    {
					      	format(facc, sizeof(facc), "{00F50A}%i\t{A901DB}%s\n", i, FaccionData[i][NameFaccion]);
						}
					    strcat(FaccDialog, facc);
					}
					ShowPlayerDialogEx(playerid, 998, DIALOG_STYLE_MSGBOX, "{00A5FF}Facciones | PL:RP", FaccDialog, "Salir", "");
				}
                //////////--- /Facciones [ID]
				else if (strfind(cmdtext, "/Facciones ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 3)
					{
					    new SendString[4];
						strmid(SendString, cmdtext, 11, strlen(cmdtext), sizeof(SendString));
						new Float:X_Y_Z_ALL[4];
						switch (strval(SendString))
						{
						    case 0:
							{
						        new Float:X_Y_Z[4] = {2495.3357,-1687.1404,13.5153,357.6980}; // Groove
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
						    case 1:
						    {
	                            new Float:X_Y_Z[4] = {1477.41, -1766.98, 18.80, 359.5288}; // Gobierno
	                        	X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
						    case 2:
						    {
						        new Float:X_Y_Z[4] = {1552.4720, -1675.6005, 16.1953, 87.8073}; // SAPD
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
	                        case 3:
		     				{
						        new Float:X_Y_Z[4] = {-2660.01, 635.48, 14.45, 0.1541}; // LSMD
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 4:
							{
						        new Float:X_Y_Z[4] = {1772.24, -1895.75, 13.55,134.6347}; // Taxistas
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 5:
							{
						        new Float:X_Y_Z[4] = {1799.8699, -1739.5348, 13.5457, 6.5004}; // Licencieros
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 6:
							{
						        new Float:X_Y_Z[4] = {549.56, -1283.76, 17.25,0.4050}; // NFS LS
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 7:
						    {
						        new Float:X_Y_Z[4] = {-495.50, -541.41, 25.52,269.1603}; // Camioneros
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 8:
							{
						        new Float:X_Y_Z[4] = {762.51, -1346.14, 13.51,198.2430}; // CNN
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 10:
							{
						        new Float:X_Y_Z[4] = {1549.01, 50.92, 25.32,358.7807}; // Sicarios
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 11:
							{
						        new Float:X_Y_Z[4] = {-2262.86, 2286.61, 4.82,359.8041}; // Yakuza
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 12:
							{
						        new Float:X_Y_Z[4] = {1168.82, -2036.77, 69.00,1.7001}; // LCN
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 13:
							{
						        new Float:X_Y_Z[4] = {1024.72, -364.53, 73.93,269.1385}; // Traficantes
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 14:
							{
						        new Float:X_Y_Z[4] = {2641.66, -2004.54, 13.55,269.2883}; // Borrachos del tablón
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 15:
							{
						        new Float:X_Y_Z[4] = {-2491.29, -129.02, 25.62,90.4581}; // HAMPA
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 16:
							{
						        new Float:X_Y_Z[4] = {-2100.43, 900.88, 76.71,180.0000}; // Fuerte Apache
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 17:
							{
						        new Float:X_Y_Z[4] = {2051.68, -1128.93, 24.04,133.8801}; // HEORS
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 18:
							{
						        new Float:X_Y_Z[4] = {-2078.12, 1362.31, 7.10,179.7914}; // Detectives
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 19:
							{
						        new Float:X_Y_Z[4] = {1809.21, -2072.45, 13.56,357.7764}; // Taller LS
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 20:
							{
						        new Float:X_Y_Z[4] = {1189.69, -1323.84, 13.57,336.1668}; // LSMD
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 21:
							{
						        new Float:X_Y_Z[4] = {710.3545, -1434.0261, 13.5318, 350.7762}; // SFPD
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 22:
							{
						        new Float:X_Y_Z[4] = {-1906.4934, 487.1570, 35.1661, 90.1804}; // PODER JUDICIAL
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 23:
							{
						        new Float:X_Y_Z[4] = {2798.22, -1596.76, 10.93,271.0996}; // HEORS 2
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 24:
							{
						        new Float:X_Y_Z[4] = {-3597.15, 1884.71, 2.18,182.8583}; // Petrolera
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 25:
							{
						        new Float:X_Y_Z[4] = {1131.9738,-2036.8430,69.0078,269.3504}; // Drift
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							case 26:
							{
						        new Float:X_Y_Z[4] = {1428.3345947266,1325.5063476563,11.149431228638,269.3504}; // Death Match
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];

						        //SetPlayerInteriorEx(playerid, 5);
						        SetPlayerVirtualWorldEx(playerid, 10);
							}
							case 27:
							{
						        new Float:X_Y_Z[4] = {-1997.4178,1852.7991,33.7013,270.0722}; // Alcatraz
						        X_Y_Z_ALL[0] = X_Y_Z[0]; X_Y_Z_ALL[1] = X_Y_Z[1]; X_Y_Z_ALL[2] = X_Y_Z[2]; X_Y_Z_ALL[3] = X_Y_Z[3];
							}
							default:
							{
								SendInfoMessage(playerid, 0, "145", "Ese tele no existe.");
								return 1;
							}
						}

						if (IsPlayerInAnyVehicle(playerid) && GetPlayerVehicleSeat(playerid) == 0)
						{
							SetVehiclePos(GetPlayerVehicleID(playerid), X_Y_Z_ALL[0], X_Y_Z_ALL[1], X_Y_Z_ALL[2]);
							SetVehicleZAngle(GetPlayerVehicleID(playerid), X_Y_Z_ALL[3]);
						}
						else
						{
							SetPlayerPos(playerid, X_Y_Z_ALL[0], X_Y_Z_ALL[1], X_Y_Z_ALL[2]);
							SetPlayerFacingAngle(playerid, X_Y_Z_ALL[3]);
							SetCameraBehindPlayer(playerid);
						}
						SetPlayerInteriorEx(playerid, 0);
						ChangeHouseOrOther(playerid, 0);

						if (strval(SendString) != 26)
						{
							SetPlayerVirtualWorldEx(playerid, 0);
						}
						return 1;
					}
					else
					{
						SendInfoMessage(playerid, 0, "146", "Tú no tienes acceso a el comando /Facciones ");
				        return 1;
					}
		    	}
				//////////--- /Test
				else if (strfind(cmdtext, "/Test ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 1)
					{
					    new SendString[4];
						strmid(SendString, cmdtext, 6, strlen(cmdtext), sizeof(SendString));

						if (IsPlayerConnected(strval(SendString)))
						{
				        	new Float:Xplayerid, Float:Yplayerid, Float:Zplayerid;
							GetPlayerPos(strval(SendString), Xplayerid, Yplayerid, Zplayerid);
							SetPlayerPos(strval(SendString), Xplayerid, Yplayerid, Zplayerid + 10);
							return 1;
						}
						else
						{
							SendInfoMessage(playerid, 0, "148", "El jugador al que desea hacerle un test no se encuentra conectado.");
							return 1;
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "149", "Tú no tienes acceso al comando /Test.");
				        return 1;
					}
		    	}
		//		02-	*		/A [Texto]						- Canal de la administración
				else if (strfind(cmdtext, "/A ", true) == 0)
				{
					if (PlayersData[playerid][Admin] >= 1)
					{
					    new SendString[150];
					    new Mid[120];
						strmid(Mid, cmdtext, 3, strlen(cmdtext), sizeof(Mid));
					    format(SendString, sizeof(SendString), "%s", Mid);
						Comandos_Admin(2, playerid, 0, PlayersData[playerid][Admin], 0, SendString);
						return 1;
					}
					else
					{
						SendInfoMessage(playerid, 0, "150", "Tú no tienes acceso a el canal de el Staff, si desea hablar con alguno puede whispear con /W [ID] [Duda].");
				        return 1;
					}

				}
		//		03-	*		/Vida [ID]						- Llenar la vida a un jugador
				else if (strfind(cmdtext, "/Vida ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 4)
					{
					    new SendString[4];
						strmid(SendString, cmdtext, 6, strlen(cmdtext), sizeof(SendString));

						if (IsPlayerConnected(strval(SendString)))
						{
							Comandos_Admin(3, playerid, strval(SendString), PlayersData[playerid][Admin], 0, "0");
						}
						else
						{
							SendInfoMessage(playerid, 0, "151", "El jugador que desea darle vida no se encuentra conectado.");
						}

						return 1;
					}
					else
					{
						SendInfoMessage(playerid, 0, "152", "Tú no tienes acceso al comando /Vida.");
				        return 1;
					}
				}
		//		04-	*		/Chaleco [ID]					- Llenar el chaleco a un jugador
				else if (strfind(cmdtext, "/Chaleco ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 4)
					{
					    new SendString[4];
						strmid(SendString, cmdtext, 9, strlen(cmdtext), sizeof(SendString));

						if (IsPlayerConnected(strval(SendString)))
						{
							Comandos_Admin(4, playerid, strval(SendString), PlayersData[playerid][Admin], 0, "0");
						}
						else
						{
							SendInfoMessage(playerid, 0, "153", "El jugador que desea darle chaleco no se encuentra conectado.");
						}

						return 1;
					}
					else
					{
						SendInfoMessage(playerid, 0, "154", "Tú no tienes acceso al comando /Chaleco.");
				        return 1;
					}
				}
		//		05-	*		/Espectar [ID]					- Espectar a un jugador
				else if (strfind(cmdtext, "/Es", true) == 0)
				{
					MsgAdminUseCommands(3, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 1)
					{
						if (strlen(cmdtext) == 3)
						{
						    Comandos_Admin(5, playerid, false, PlayersData[playerid][Admin], 2, "0");
						}
						else if (IsPlayerConnected(strval(cmdtext[3])))
						{
						    if (strval(cmdtext[3]) != playerid)
						    {
						        if (PlayersDataOnline[strval(cmdtext[3])][StateDeath] != 2)
						        {
									Comandos_Admin(5, playerid, strval(cmdtext[3]), PlayersData[playerid][Admin], 1, "0");
	 							}
								else
								{
									SendInfoMessage(playerid, 0, "1151", "El jugador que desea espectar se encuentra muerto en estos momentos, inténtelo de nuevo en unos segundos.");
								}
 							}
							else
							{
								SendInfoMessage(playerid, 0, "1150", "Has introducido tu misma ID a espectar.");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "155", "El jugador que desea espectar no se encuentra conectado.");
						}
						return 1;
					}
					else
					{
						SendInfoMessage(playerid, 0, "156", "Tú no tienes acceso al comando /Espectar.");
				        return 1;
					}
				}
		//		06-	*		/Espectar [ID]					- Espectar a un jugador
				else if (strfind(cmdtext, "/Espectar", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 1)
					{
						if (strlen(cmdtext) == 9)
						{
						    Comandos_Admin(5, playerid, false, PlayersData[playerid][Admin], 2, "0");
						}
						else if (IsPlayerConnected(strval(cmdtext[10])))
						{
						    if (strval(cmdtext[10]) != playerid)
						    {
						        if (PlayersDataOnline[strval(cmdtext[10])][StateDeath] != 2)
						        {
									Comandos_Admin(5, playerid, strval(cmdtext[10]), PlayersData[playerid][Admin], 1, "0");
	 							}
								else
								{
									SendInfoMessage(playerid, 0, "1151", "El jugador que desea espectar se encuentra muerto en estos momentos, inténtelo de nuevo en unos segundos.");
								}
 							}
							else
							{
								SendInfoMessage(playerid, 0, "1150", "Has introducido tu misma ID a espectar.");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "155", "El jugador que desea espectar no se encuentra conectado.");
						}
						return 1;
					}
					else
					{
						SendInfoMessage(playerid, 0, "156", "Tú no tienes acceso a el comando /Espectar.");
				        return 1;
					}
				}
		//		06-	-		/Jail [ID] [Tiempo] [Razón]		- Jaliar a un jugador
				else if (strfind(cmdtext, "/Jail ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 1)
					{
						if (strlen(cmdtext) > 7)
						{
							if (IsPlayerConnected(strvalEx(cmdtext[GetPosSpace(cmdtext, 1)])))
							{
								if (strvalEx(cmdtext[GetPosSpace(cmdtext, 2)]) != -1)
								{
									if (strvalEx(cmdtext[GetPosSpace(cmdtext, 3)]) != -1)
									{
										Comandos_Admin(6, playerid, strvalEx(cmdtext[GetPosSpace(cmdtext, 1) + 1]),
										PlayersData[playerid][Admin],
										strvalEx(cmdtext[GetPosSpace(cmdtext, 2)]),
										cmdtext[GetPosSpace(cmdtext, 3)]);
	   							        return 1;
									}
									else
									{
										SendInfoMessage(playerid, 0, "157", "El argumento 'Razón' no se puede dejar vacío.");
										return 1;
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "158", "Ha introducído mal el sintaxis del comando /Jail. Ejemplo correcto: /Jail 22 10 No respetar las normas el servidor.");
									return 1;
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "159", "El jugador que desea Jaliar no se encuentra conectado.");
								return 1;
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "160", "Ha introducído mal el sintaxis del comando /Jail. Ejemplo correcto: /Jail 22 10 No respetar las normas el servidor.");
							return 1;
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "161", "Tú no tienes acceso a el comando /Jail.");
				        return 1;
					}
				}
		//		07-	*		/Kick [ID] [Razón]				- Kikear a un jugador
				else if (strfind(cmdtext, "/Kick ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 1)
					{
						new PlayerKickID = strvalEx(cmdtext[GetPosSpace(cmdtext, 1)]);
						if (strlen(cmdtext) >= 8)
						{
							if (PlayerKickID != playerid)
							{
								if (IsPlayerConnected(PlayerKickID))
								{
								    if(!IsPlayerNPC(PlayerKickID)) //Checks if the player that just spawned is an NPC.
  									{
										new StringFormat[250];new StringFormat2[250];
										format(StringFormat, sizeof(StringFormat), "%s kickeo a %s por %s",PlayersData[playerid][Admin], PlayersDataOnline[PlayerKickID][NameOnline], cmdtext[GetPosSpace(cmdtext, 2)]);
										format(StringFormat2, sizeof(StringFormat2), "[ADM]:%s kickeo a %s por %s", PlayersDataOnline[playerid][NameOnline], PlayersDataOnline[PlayerKickID][NameOnline], cmdtext[GetPosSpace(cmdtext, 2)]);
										if (_:CanalLog == 0)CanalLog = DCC_FindChannelById(DCanalLog);
										DCC_SendChannelMessage(CanalLog, StringFormat2);

										Comandos_Admin(7, playerid, PlayerKickID, PlayersData[playerid][Admin], 0, cmdtext[GetPosSpace(cmdtext, 2)]);
										return 1;
									}
									else
									{
									    SendInfoMessage(playerid, 0, "162", "No está permitido kickear npc's.");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "162", "El jugador que desea kickear no se encuentra conectado.");
									return 1;
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "163", "La ID que has introducído es la suya.");
			                    return 1;
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "164", "Ha introducído mal el sintaxis del comando /Kick. Ejemplo correcto: /Kick 22 No respetar las normas el servidor.");
							return 1;
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "165", "Tú no tienes acceso al comando /Kick.");
				        return 1;
					}
				}
		//		// COMANDO: /Silenciar [ID]
				else if (strfind(cmdtext, "/Silenciar ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 3)
					{
						if (IsPlayerConnected(strval(cmdtext[11]))/* && PlayersData[strval(cmdtext[11])][Admin] != 9*/)
						{
						    new MsgSilenciadoMe[MAX_TEXT_CHAT];
							new MsgSilenciadoMe32[MAX_TEXT_CHAT];
						    new MsgSilenciadoToPlayer[MAX_TEXT_CHAT];
							if (PlayersDataOnline[strval(cmdtext[11])][IsNotSilenciado])
							{
							    format(MsgSilenciadoMe, sizeof(MsgSilenciadoMe), "%s Has silenciado a %s", LOGO_STAFF, PlayersDataOnline[strval(cmdtext[11])][NameOnline]);
							    format(MsgSilenciadoToPlayer, sizeof(MsgSilenciadoToPlayer), "%s %s te ha silenciado", LOGO_STAFF, PlayersDataOnline[playerid][NameOnline]);
								PlayersDataOnline[strval(cmdtext[11])][IsNotSilenciado] = false;

								format(MsgSilenciadoMe32, sizeof(MsgSilenciadoMe32), "[ADM]: %s silencio a %s", PlayersDataOnline[playerid][NameOnline], PlayersDataOnline[strval(cmdtext[11])][NameOnline]);
								if (_:CanalLog == 0)CanalLog = DCC_FindChannelById(DCanalLog);
								DCC_SendChannelMessage(CanalLog, MsgSilenciadoMe32);
							}
							else
							{
							    format(MsgSilenciadoMe, sizeof(MsgSilenciadoMe), "Ha quitado el silencio a %s", PlayersDataOnline[strval(cmdtext[11])][NameOnline]);
							    format(MsgSilenciadoToPlayer, sizeof(MsgSilenciadoToPlayer), "%s %s te ha quitado el silencio", LOGO_STAFF, PlayersDataOnline[playerid][NameOnline]);
								PlayersDataOnline[strval(cmdtext[11])][IsNotSilenciado] = true;

								format(MsgSilenciadoMe32, sizeof(MsgSilenciadoMe32), "[ADM]: %s Ha quitado el silencio a %s", PlayersDataOnline[playerid][NameOnline], PlayersDataOnline[strval(cmdtext[11])][NameOnline]);
								if (_:CanalLog == 0)CanalLog = DCC_FindChannelById(DCanalLog);
								DCC_SendChannelMessage(CanalLog, MsgSilenciadoMe32);
							}
							SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, MsgSilenciadoMe);
							SendClientMessage(strval(cmdtext[11]), COLOR_MENSAJES_DE_AVISOS, MsgSilenciadoToPlayer);
						}
						else
						{
							SendInfoMessage(playerid, 0, "848", "El jugador que desea silenciar no se encuentra conectado.");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "849", "Tú no tienes acceso al comando /Silenciar.");
					}
				}
				// COMANDO: /Aa (Canal admin nivel alto, rojo)
				else if (strfind(cmdtext, "/Aa ", true) == 0)
				{
					if (PlayersData[playerid][Admin] >= 7)
					{
					    new SendString[150];
					    new Mid[120];
						strmid(Mid, cmdtext, 3, strlen(cmdtext), sizeof(Mid));
					    format(SendString, sizeof(SendString), "[Ayudantes] %s", Mid);
						if (_:CanalAyudante == 0)CanalAyudante = DCC_FindChannelById(DCanalAyudante);
						DCC_SendChannelMessage(CanalAyudante, SendString);

						Comandos_Admin(24, playerid, 0, PlayersData[playerid][Admin], 0, SendString);
						return 1;
					}
					else
					{
						SendInfoMessage(playerid, 0, "150", "Tú no tienes acceso a el canal de el Staff, si desea hablar con alguno puede whispear con /W [ID] [Duda].");
				        return 1;
					}

				}
				// COMANDO: /J
				else if (strfind(cmdtext, "/J ", true) == 0)
				{
					if (PlayersData[playerid][Admin] >= 1 || PlayersData[playerid][Colaborador] == 1)
					{
					    new SendString[150];
					    new Mid[120];
						strmid(Mid, cmdtext, 3, strlen(cmdtext), sizeof(Mid));
					    format(SendString, sizeof(SendString), "%s", Mid);
						Comandos_Admin(26, playerid, 0, PlayersData[playerid][Admin], 0, SendString);
						return 1;
					}
					else
					{
						SendInfoMessage(playerid, 0, "150", "Tú no tienes acceso a el canal de ayudantes, si desea hablar con alguno puedes utilizar \"/Duda\".");
				        return 1;
					}

				}
				/*// /ma
				else if (strfind(cmdtext, "/Ma ", true) == 0)
				{
					if (PlayersData[playerid][Admin] >= 1 || PlayersData[playerid][Mapeador] == 1)
					{
					    new SendString[150];
					    new Mid[120];
						strmid(Mid, cmdtext, 3, strlen(cmdtext), sizeof(Mid));
					    format(SendString, sizeof(SendString), "%s", Mid);
						Comandos_Admin(28, playerid, 0, PlayersData[playerid][Admin], 0, SendString);
						return 1;
					}
					else
					{
						SendInfoMessage(playerid, 0, "150", "Tú no tienes acceso a el canal de colaboradores, si desea hablar con alguno puedes utilizar \"/Duda\".");
				        return 1;
					}

				}*/
				// COMANDO: /Tutorial [ID]
				else if (strfind(cmdtext, "/Tutorial ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 4)
					{
						if (playerid == strval(cmdtext[10]) || IsPlayerConnected(strval(cmdtext[10])) && PlayersData[strval(cmdtext[10])][Admin] != 9)
						{
						    if (PlayersData[strval(cmdtext[10])][HoursPlaying] < 1)
						    {
						        PlayersData[strval(cmdtext[10])][HoursPlaying]++;

								new StringFormat[250];
							    if (!PlayersData[strval(cmdtext[10])][InTutorial])
							    {
									PlayersData[strval(cmdtext[10])][InTutorial] = true;
								    TogglePlayerControllableEx(strval(cmdtext[10]), false);
									PlayersDataOnline[strval(cmdtext[10])][IsNotSilenciado] = false;
									format(StringFormat, sizeof(StringFormat), "%s Han mandado a ver el tutorial de reglas a %s por %s",LOGO_STAFF, PlayersDataOnline[strval(cmdtext[10])][NameOnline], PlayersDataOnline[playerid][NameOnline]);
									SetPlayerTutorial(strval(cmdtext[10]), 7);
								}
								else
								{
									format(StringFormat, sizeof(StringFormat), "%s Le han recomenzado el tutorial de reglas a %s por %s",LOGO_STAFF, PlayersDataOnline[strval(cmdtext[10])][NameOnline], PlayersDataOnline[playerid][NameOnline]);
								}
								SendClientMessageToAll(COLOR_KICK_JAIL_BAN, StringFormat);
							}
							else
							{
							    new StringFormat[250];
							    if (!PlayersData[strval(cmdtext[10])][InTutorial])
							    {
									PlayersData[strval(cmdtext[10])][InTutorial] = true;
								    TogglePlayerControllableEx(strval(cmdtext[10]), false);
									PlayersDataOnline[strval(cmdtext[10])][IsNotSilenciado] = false;
									format(StringFormat, sizeof(StringFormat), "%s Han mandado a ver el tutorial de reglas a %s por %s",LOGO_STAFF, PlayersDataOnline[strval(cmdtext[10])][NameOnline], PlayersDataOnline[playerid][NameOnline]);
									SetPlayerTutorial(strval(cmdtext[10]), 7);
								}
								else
								{
									format(StringFormat, sizeof(StringFormat), "%s Le han recomenzado el tutorial de reglas a %s por %s",LOGO_STAFF, PlayersDataOnline[strval(cmdtext[10])][NameOnline], PlayersDataOnline[playerid][NameOnline]);
								}
								SendClientMessageToAll(COLOR_KICK_JAIL_BAN, StringFormat);
							}

						}
						else
						{
							SendInfoMessage(playerid, 0, "856", "El jugador que desea mandar a ver el tutorial no se encuentra conectado.");
							return 1;
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "855", "Tú no tienes acceso al comando /Tutorial.");
				        return 1;
					}
				}
		//		/Número [Número]
				else if (strfind(cmdtext, "/Número ", true) == 0 || strfind(cmdtext, "/Numero ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 3)
					{
					    new DataNumber[MAX_PLAYER_NAME];
					    new DirTemp[MAX_TEXT_CHAT];
						format(DirTemp, sizeof(DirTemp), "%s%i.ulp", DIR_MOVILES, strval(cmdtext[8]));
						if (fexist(DirTemp))
						{
							new File:PhoneFile = fopen(DirTemp, io_read);
							fread(PhoneFile, DataNumber);
							fclose(PhoneFile);

							if (strlen(DataNumber) >= 2)
							{
							    new MsgNumber[MAX_TEXT_CHAT];
							    format(MsgNumber, sizeof(MsgNumber), "%s El número %i pertenece al jugador %s", LOGO_STAFF, strval(cmdtext[8]), DataNumber);
								SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, MsgNumber);
							}
							else
							{
								SendInfoMessage(playerid, 0, "953", "Ese número no pertenece a ningún jugador! Pero fue usado!");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "954", "Ese número no pertenece a ningún jugador!");
						}

					}
					else
					{
						SendInfoMessage(playerid, 0, "955", "Tú no tienes acceso al comando /Número.");
					}
				}
		//		08-	*		/Ban [ID] [Razón]				- Banear a un jugador
				else if (strfind(cmdtext, "/Ban ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 4)
					{
				        new PlayerIDBan = strvalEx(cmdtext[GetPosSpace(cmdtext, 1)]);
						if (strlen(cmdtext) >= 9)
						{
							if (PlayerIDBan != playerid)
							{
								if (IsPlayerConnected(PlayerIDBan) && PlayersData[PlayerIDBan][Admin] != 9)
								{
                                    if(!IsPlayerNPC(PlayerIDBan)) //Checks if the player that just spawned is an NPC.
  									{
									    Comandos_Admin(8, playerid, PlayerIDBan, PlayersData[playerid][Admin], 0, cmdtext[GetPosSpace(cmdtext, 2)]);
			       						return 1;
			       					}
			       					else
			       					{
			       						SendInfoMessage(playerid, 0, "166", "No está permitido banear npc's.");
			       					}
								}
								else
								{
									SendInfoMessage(playerid, 0, "166", "El jugador que desea banear no se encuentra conectado.");
									return 1;
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "167", "La ID que has introducído es la suya.");
			                    return 1;
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "168", "Ha introducído mal el sintaxis del comando /Ban. Ejemplo correcto: /Ban 22 No respetar las normas el servidor.");
							return 1;
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "169", "Tú no tienes acceso al comando /Ban.");
				        return 1;
					}
				}
		//		09-	*		/Revisar [ID]					- Revisar a un jugador
				else if (strfind(cmdtext, "/Revisar ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 1)
					{
					    new SendString[4];
						strmid(SendString, cmdtext, 9, strlen(cmdtext), sizeof(SendString));

						if (IsPlayerConnected(strval(SendString)))
						{
							Comandos_Admin(9, playerid, strval(SendString), PlayersData[playerid][Admin], 0, "0");
						}
						else
						{
							SendInfoMessage(playerid, 0, "170", "El jugador que desea revisar no se encuentra conectado.");
						}

						return 1;
					}
					else
					{
						SendInfoMessage(playerid, 0, "171", "Tú no tienes acceso al comando /Revisar.");
				        return 1;
					}

				}
		//		10-	*		/Traer [ID]						- Traer un jugador a tu posición
				else if (strfind(cmdtext, "/Traer ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 1)
					{
					    new SendString[4];
						strmid(SendString, cmdtext, 7, strlen(cmdtext), sizeof(SendString));

						if (IsPlayerConnected(strval(SendString)))
						{
							if (strval(SendString) != playerid)
							{
								Comandos_Admin(10, playerid, strval(SendString), PlayersData[playerid][Admin], 0, "0");
							}
							else
							{
								SendInfoMessage(playerid, 0, "172", "La ID que has introducído es la suya.");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "173", "El jugador que desea traer no se encuentra conectado.");
						}
						return 1;
					}
					else
					{
						SendInfoMessage(playerid, 0, "174", "Tú no tienes acceso al comando /Traer");
				        return 1;
					}

				}
		//		11- *		/Ir [ID]						- Ir a la poición de un jugador
				else if (strfind(cmdtext, "/Ir ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 1)
					{
					    new SendString[4];
						strmid(SendString, cmdtext, 4, strlen(cmdtext), sizeof(SendString));

						if (IsPlayerConnected(strval(SendString)))
						{
							if (strval(SendString) != playerid)
							{
								Comandos_Admin(11, playerid, strval(SendString), PlayersData[playerid][Admin], 0, "0");
							}
							else
							{
								SendInfoMessage(playerid, 0, "175", "La ID que has introducído es la suya.");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "176", "El jugador al que desea ir no se encuentra conectado.");
						}
						return 1;
					}
					else
					{
						SendInfoMessage(playerid, 0, "177", "Tú no tienes acceso al comando /Ir.");
				        return 1;
					}

				}
				//		12- *		/Ir [ID]						- Ir a la poición de un jugador
				else if (strfind(cmdtext, "/AttachArea ", true) == 0) // Borrar comandos
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] == 9)
					{
					    new SendString[12];
						strmid(SendString, cmdtext, 12, strlen(cmdtext), sizeof(SendString));

						if (IsPlayerConnected(strval(SendString)))
						{
							if (strval(SendString) != playerid)
							{
								AttachDynamicAreaToPlayer(MascotasLS, strval(SendString));
							}
							else
							{
								SendInfoMessage(playerid, 0, "175", "La ID que has introducído es la suya.");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "176", "El jugador al que desea ir no se encuentra conectado.");
						}
						return 1;
					}
					else
					{
						SendInfoMessage(playerid, 0, "177", "Tú no tienes acceso al comando /Ir.");
				        return 1;
					}

				}
		//		12- *       /Limpiar [ID]                   - Quitar todas las armas a un jugador
				else if (strfind(cmdtext, "/Limpiar ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 5)
					{
					    new SendString[4];
						strmid(SendString, cmdtext, 9, strlen(cmdtext), sizeof(SendString));

						if (IsPlayerConnected(strval(SendString)))
						{
							Comandos_Admin(12, playerid, strval(SendString), PlayersData[playerid][Admin], 0, "0");
						}
						else
						{
							SendInfoMessage(playerid, 0, "178", "El jugador al que desea limpiar no se encuentra conectado.");
						}

						return 1;
					}
					else
					{
						SendInfoMessage(playerid, 0, "179", "Tú no tienes acceso al comando /Limpiar.");
				        return 1;
					}

				}
		//		13- *       /Parar [ID]                     - Freezar a un jugador
				else if (strfind(cmdtext, "/Parar ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 2)
					{
					    new SendString[4];
						strmid(SendString, cmdtext, 7, strlen(cmdtext), sizeof(SendString));

						if (IsPlayerConnected(strval(SendString)))
						{
							if (strval(SendString) != playerid || PlayersData[playerid][Admin] >= 8)
							{
							    if (PlayersDataOnline[strval(SendString)][Freeze])
							    {
									Comandos_Admin(13, playerid, strval(SendString), PlayersData[playerid][Admin], 1, "0");
								}
								else
								{
									Comandos_Admin(13, playerid, strval(SendString), PlayersData[playerid][Admin], 2, "0");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "180", "La ID que has introducído es la suya.");
							}
		                    return 1;
						}
						else
						{
							SendInfoMessage(playerid, 0, "181", "El jugador al que desea congelar no se encuentra conectado.");
							return 1;
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "182", "Tú no tienes acceso al comando /Parar.");
				        return 1;
					}

				}
				else if (strcmp("/Matar DM", cmdtext, true, 9) == 0 && strlen(cmdtext) == 9)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 7)
					{
						new MsgDMToAll[MAX_TEXT_CHAT];
				    	format(MsgDMToAll, sizeof(MsgDMToAll), "%s Han matado a todos los del modo DeathMatch", LOGO_STAFF);
						for (new i = 0; i < MAX_PLAYERS; i++)
						{
							if (IsPlayerConnected(i) && PlayersDataOnline[i][State] == 3 && PlayersDataOnline[i][ModeDM])
							{
                                SendClientMessage(i, COLOR_MENSAJES_DE_AVISOS, MsgDMToAll);
                                SetPlayerHealthEx(i, -100);
							}
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "1345", "Tú no tienes acceso al comando /Matar DM.");
					}
				}
		//		14- *       /Spawn [ID]         - Spawnear a un Jugador
				else if (strfind(cmdtext, "/Spawn ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 2)
					{
					    new PlayreSpawn = strval(cmdtext[7]);
						if (IsPlayerConnected(PlayreSpawn))
						{
							if (IsPlayerInAnyVehicle(PlayreSpawn))
							{
								PlayersDataOnline[PlayreSpawn][StateMoneyPass] 	= gettime() + 5;
								PlayersDataOnline[PlayreSpawn][VidaOn] = 80.0;
								new Float:PlayerPos[3]; GetPlayerPos(PlayreSpawn, PlayerPos[0], PlayerPos[1], PlayerPos[2]);
								SetPlayerPos(PlayreSpawn, PlayerPos[0], PlayerPos[1], PlayerPos[2]);
							}
							PlayersDataOnline[PlayreSpawn][StateDeath] = 3;
						    SpawnPlayerEx(PlayreSpawn);
						    SetPlayerInteriorEx(PlayreSpawn, 0);
						    SetPlayerVirtualWorldEx(PlayreSpawn, 0);
							CleanDataDeath(PlayreSpawn);

							new StringFormat[MAX_TEXT_CHAT];
							new StringFormatEX[MAX_TEXT_CHAT];

							if (PlayreSpawn != playerid)
							{
								format(StringFormat, sizeof(StringFormat), "%s Te ha spawneado %s con el comando /Spawn [ID].",LOGO_STAFF, PlayersDataOnline[playerid][NameOnline]);
								format(StringFormatEX, sizeof(StringFormatEX), "%s Has spawneado a %s [ID: %i] con el comando /Spawn [ID].",LOGO_STAFF, PlayersDataOnline[PlayreSpawn][NameOnline], PlayreSpawn);
					            SendClientMessage(PlayreSpawn, COLOR_MENSAJES_DE_AVISOS, StringFormat);
							}
							else
							{
								format(StringFormatEX, sizeof(StringFormatEX), "%s Te has spawneado tú mismo con el comando /Spawn [ID].",LOGO_STAFF);
							}

				            SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, StringFormatEX);
							return 1;
						}
						else
						{
							SendInfoMessage(playerid, 0, "1317", "El jugador que desea spawnearlo no se encuentra conectado.");
							return 1;
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "1431", "Tú no tienes acceso al comando /Spawn.");
				        return 1;
					}
				}
				//		14- *       /Matar [ID]         - Matar a un jugador
				else if (strfind(cmdtext, "/Matar ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 4)
					{
						new ID_JugadorAMatar[11];
						strmid(ID_JugadorAMatar, cmdtext, 7, strlen(cmdtext), sizeof(ID_JugadorAMatar));
						if (IsPlayerConnected(strval(ID_JugadorAMatar)))
						{
						    Comandos_Admin(14, playerid, strval(ID_JugadorAMatar), PlayersData[playerid][Admin], 0, "0");
							return 1;
						}
						else
						{
							SendInfoMessage(playerid, 0, "183", "El jugador que desea matarlo no se encuentra conectado.");
							return 1;
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "184", "Tú no tienes acceso al comando /Matar.");
				        return 1;
					}
				}
				//		15- *       /Estado Todos                		- Cerrar y Abrir el canal /o (Todos)
				else if (strcmp(cmdtext, "/Estado Todos", true, 13) == 0 && strlen(cmdtext) == 13)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 1)
					{
						Comandos_Admin(15, playerid, 0, PlayersData[playerid][Admin], 0, "0");
						return 1;
					}
					else
					{
						SendInfoMessage(playerid, 0, "185", "Tú no tienes acceso al comando /Estado Todos.");
				        return 1;
					}
				}
				 //ShowServerStats(playerid)
				//		19-	*		/Server Stats					- Ver las estadísticas del servidor
				else if (strcmp("/Server Stats", cmdtext, true, 13) == 0 && strlen(cmdtext) == 13)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8)
					{
                        ShowServerStats(playerid);
						return 1;
					}
					else
					{
						SendInfoMessage(playerid, 0, "1309", "Tú no tienes acceso al comando /Server Stats.");
				        return 1;
					}
				}
		//		19-	*		/Respawn TodosEx					- Respawear todos los coches
				else if (strcmp("/Respawn TodosEx", cmdtext, true, 16) == 0 && strlen(cmdtext) == 16)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 7)
					{
						new StringFormat[120];
						format(StringFormat, sizeof(StringFormat), "%s Has hecho un respawn general.",LOGO_STAFF);
			            SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, StringFormat);

						new IsRespawn[MAX_VEHICLE_COUNT];
						for (new i = 0; i < MAX_PLAYERS; i++)
						{
							if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i) == 1 && GetPlayerVehicleSeat(i) == 0)
							{
							    IsRespawn[GetPlayerVehicleID(i)] = 1;
							}
						}

						for (new i = 1; i <= MAX_CAR; i++)
						{
						    if (IsRespawn[i] != 1)
						    {
								SetVehicleToRespawnEx(i);
							}
					    }
					}
					else
					{
						SendInfoMessage(playerid, 0, "188", "Tú no tienes acceso al comando /Respawn TodosEx.");
					}
				}
		//		19-	*		/Respawn Todos					- Respawear todos los coches
				else if (strcmp("/Respawn Todos", cmdtext, true, 14) == 0 && strlen(cmdtext) == 14)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 7)
					{
						Comandos_Admin(19, playerid, 0, PlayersData[playerid][Admin], 0, "0");
						return 1;
					}
					else
					{
						SendInfoMessage(playerid, 0, "188", "Tú no tienes acceso al comando /Respawn Todos.");
				        return 1;
					}
				}
		//		//  	/Respawn Facción [ID]					- Respawenar Todos los coches de facción
				else if (strfind(cmdtext, "/Respawn Facción ", true) == 0 ||
						 strfind(cmdtext, "/Respawn Faccion ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 5)
					{
						new FaccionID = strval(cmdtext[17]);
					    if (FaccionID >= CIVIL && FaccionID <= MAX_FACCION)
					    {
							new StringFormat[120];
							format(StringFormat, sizeof(StringFormat), "%s Has hecho un respawn a todos los vehículos de la facción: %s.",LOGO_STAFF, FaccionData[FaccionID][NameFaccion]);
				            SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, StringFormat);

							new IsRespawn[MAX_VEHICLE_COUNT];
							for (new i = 0; i < MAX_PLAYERS; i++)
							{
								if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i) == 1 && GetPlayerVehicleSeat(i) == 0)
								{
								    IsRespawn[GetPlayerVehicleID(i)] = 1;
								}
							}
							if (FaccionID)
							{
								for (new i = MAX_CAR_DUENO + 1; i <= MAX_CAR_FACCION; i++)
								{
								    if (IsRespawn[i] != 1 && DataCars[i][Time] == FaccionID)
								    {
										SetVehicleToRespawnExTwo(i);
									}
							    }
						    }
						    else
						    {
								for (new i = MAX_CAR_FACCION + 1; i <= MAX_CAR_PUBLIC; i++)
								{
								    if (IsRespawn[i] != 1)
								    {
										SetVehicleToRespawnExTwo(i);
									}
							    }
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "888", "El ID de facción introducida no existe");
					        return 1;
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "889", "Tú no tienes acceso al comando /Respawn Facción");
				        return 1;
					}
				}
		//		18- *    	/Respawn [ID]					- Respawenar un coche
				else if (strfind(cmdtext, "/Respawn ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 2)
					{
						if (strval(cmdtext[9]) > 0 && strval(cmdtext[9]) <= MAX_CAR_PUBLIC)
						{
							Comandos_Admin(18, playerid, 0, PlayersData[playerid][Admin], strval(cmdtext[9]), "0");
						}
						else
						{
							SendInfoMessage(playerid, 0, "189", "El vehículo que desea hacerle spawn no existe.");
						}
						return 1;
					}
					else
					{
						SendInfoMessage(playerid, 0, "190", "Tú no tienes acceso al comando /Respawn.");
				        return 1;
					}

				}
    			// COMANDO: /Mapeador [ID]					- Asignar mapeador a usuario
				else if (strfind(cmdtext, "/Mapeador ", true) == 0)
				{
					MsgAdminUseCommands(9, playerid, cmdtext);
					if (PlayersData[playerid][Admin] == 9)
					{
						new ID_JugadorMapeador[11];
						strmid(ID_JugadorMapeador, cmdtext, 10, strlen(cmdtext), sizeof(ID_JugadorMapeador));
						if (IsPlayerConnected(strval(ID_JugadorMapeador)))
						{
          					Comandos_Admin(27, playerid, strval(ID_JugadorMapeador), PlayersData[playerid][Admin], 0, "0");
							return 1;
						}
						else
						{
							SendInfoMessage(playerid, 0, "183", "El jugador que desea asignar el comando, no se encuentra conectado.");
							return 1;
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "184", "Tú no tienes acceso al comando /Mapeador [ID].");
				        return 1;
					}
				}
				// COMANDO: /Mappers
				else if (strfind(cmdtext, "/Mappers", true) == 0)
				{
				    new MsgAdminsOn[100];
				    new FoundAdmin;
					for (new i = 0; i < MAX_PLAYERS; i++)
					{
						if (IsPlayerConnected(i) && PlayersDataOnline[i][State] == 3 && PlayersData[i][Mapeador] == 1)
						{
						    if (!FoundAdmin)
						    {
							    SendClientMessage(playerid, 0x505050FF, "{505050}»»»»»»»»»»»»»»»»»» {008228}M{00B428}appers {008228}O{00B428}nline {505050}««««««««««««««««««");
								FoundAdmin++;
							}
							format(MsgAdminsOn, sizeof(MsgAdminsOn), "{0037FF}* %s %s [ID: %i]", MappersRangos[PlayersData[i][Admin] - 1], PlayersDataOnline[i][NameOnlineFix], i);
						    SendClientMessage(playerid, 0x505050FF, MsgAdminsOn);
						}
					}
					if (!FoundAdmin)
					{
					    SendClientMessage(playerid, 0x505050FF, "{910000}»»»»»»»»»»»»» {E10000}No hay Mappers en servicio {910000}«««««««««««««");
					}
				}
				// COMANDO:	/Rellenar	- Llenar Todos los coches
				else if (strcmp(cmdtext, "/Rellenar", true, 9) == 0 && strlen(cmdtext) == 9)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 2)
					{
						SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, "Has llenado de gasolina y aceíte todos los vehículos");

						new IsLlenar[MAX_VEHICLE_COUNT];

						for (new i = 0; i < MAX_PLAYERS; i++)
						{
							if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i) == 1 && GetPlayerVehicleSeat(i) == 0)
							{
								IsLlenar[GetPlayerVehicleID(i)] = 1;
							}
						}

						for (new i = 1; i <= MAX_CAR_PUBLIC; i++)
						{
							if (IsLlenar[i] != 1)
							{
								DataCars[i][Gas] = MAX_GAS_VEHICLE;
								DataCars[i][Oil] = MAX_OIL_VEHICLE;
							}
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "889", "Tú no tienes acceso al comando /Rellenar");
				        return 1;
					}
				}
				// COMANDO:	/Rellenar Facción [ID]					- Llenar Todos los coches de facción
				else if (strfind(cmdtext, "/Rellenar Facción ", true) == 0 ||
						 strfind(cmdtext, "/Rellenar Faccion ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 2)
					{
						new FaccionID = strval(cmdtext[18]);
					    if (FaccionID >= CIVIL && FaccionID <= MAX_FACCION)
					    {
							new StringFormat[120];
							format(StringFormat, sizeof(StringFormat), "%s Has llenado de gasolina y aceite todos los vehículos de la facción: %s.",LOGO_STAFF, FaccionData[FaccionID][NameFaccion]);
				            SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, StringFormat);

							new IsLlenar[MAX_VEHICLE_COUNT];
							for (new i = 0; i < MAX_PLAYERS; i++)
							{
								if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i) == 1 && GetPlayerVehicleSeat(i) == 0)
								{
								    IsLlenar[GetPlayerVehicleID(i)] = 1;
								}
							}
							if (FaccionID)
							{
								for (new i = MAX_CAR_DUENO + 1; i <= MAX_CAR_FACCION; i++)
								{
								    if (IsLlenar[i] != 1 && DataCars[i][Time] == FaccionID)
								    {
								        DataCars[i][Gas] = MAX_GAS_VEHICLE;
										DataCars[i][Oil] = MAX_OIL_VEHICLE;
									}
							    }
						    }
						    else
						    {
								for (new i = MAX_CAR_FACCION + 1; i <= MAX_CAR_PUBLIC; i++)
								{
								    if (IsLlenar[i] != 1)
								    {
										DataCars[i][Gas] = MAX_GAS_VEHICLE;
										DataCars[i][Oil] = MAX_OIL_VEHICLE;
									}
							    }
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "888", "El ID de facción introducida no existe");
					        return 1;
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "889", "Tú no tienes acceso al comando /Rellenar Facción");
				        return 1;
					}
				}
				//	COMANDO: /Incendios					- Ver los incendios actuales
				else if (strcmp(cmdtext, "/Incendios", true, 10) == 0 && strlen(cmdtext) == 10)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 7)
					{
						ShowIncendios(playerid);
					}
					else
					{
						SendInfoMessage(playerid, 0, "1278", "Tú no tienes acceso al comando /Incendios.");
				        return 1;
					}

				}
				// COMANDO: /Res [ID] [DUDA]
		  		else if (strfind(cmdtext, "/Res", true) == 0)
			    {
					MsgAdminUseCommands(8, playerid, cmdtext);
				    if (PlayersData[playerid][Admin] >= 1 || PlayersData[playerid][Colaborador] == 1)
				    {
			  			if (strfind(cmdtext, "/Res ", true) == 0)
					    {
					        new PlayerIDDuda = strvalEx(cmdtext[GetPosSpace(cmdtext, 1)]);
			    		    if (IsPlayerConnected(PlayerIDDuda))
						    {
					            new MensajeME[256];
					            new Mensaje[256];
					            new MensajeDudas[256];
					            format(MensajeME, sizeof(MensajeME), "[DUDAS] Respondiste a %s [ID: %i]: %s", PlayersDataOnline[PlayerIDDuda][NameOnline], PlayerIDDuda, cmdtext[GetPosSpace(cmdtext, 2)]);
					            format(Mensaje, sizeof(Mensaje), "[DUDAS] %s [ID: %i] te dice: %s", PlayersDataOnline[playerid][NameOnline], playerid, cmdtext[GetPosSpace(cmdtext, 2)]);
								format(MensajeDudas, sizeof(MensajeDudas), "[Dudas] %s respondió a %s [ID: %i] (%s)", PlayersDataOnline[playerid][NameOnline], PlayersDataOnline[PlayerIDDuda][NameOnline], PlayerIDDuda, cmdtext[GetPosSpace(cmdtext, 2)]);
								SendClientMessage(PlayerIDDuda, COLOR_DUDAS, Mensaje);
								SendClientMessage(playerid, COLOR_DUDAS, MensajeME);

								for (new i = 0; i < MAX_PLAYERS; i++)
								{
									if (IsPlayerConnected(i) && PlayersDataOnline[i][State] == 3 && PlayersData[i][Admin] || PlayersData[i][Colaborador])
									{
									    SendClientMessage(i, COLOR_DUDAS, MensajeDudas);
									}
								}

								print(Mensaje);
						    }
						    else
						    {
								SendInfoMessage(playerid, 0, "1488", "Al usuario que desea contestarle un duda no se encuentra conectado");
						    }
						}
						else
						{
							SendInfoMessage(playerid, 0, "1489", "Recuerde al utilizar el comando /Res [ID] [Duda] dejar un [ESPACIO]. Ejemplo: /Res 22 MG es Metagaming");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "1490", "Tú no tienes acceso al comando /Res.");
					}
				}
		//			/IrC [ID]					- Ir a un Coche
				else if (strfind(cmdtext, "/IrC ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 4)
					{
					    if (strval(cmdtext[5]) >= 1 && strval(cmdtext[5]) <= MAX_CAR)
					    {
						    new Float:VehiclePoss[3];GetVehiclePos(strval(cmdtext[5]), VehiclePoss[0], VehiclePoss[1], VehiclePoss[2]);
						    SetPlayerPos(playerid,  VehiclePoss[0], VehiclePoss[1], VehiclePoss[2] + 2);

						    SetPlayerInteriorEx(playerid, DataCars[strval(cmdtext[5])][InteriorLast]);
						    SetPlayerVirtualWorldEx(playerid, DataCars[strval(cmdtext[5])][WorldLast]);
							return 1;
						}
						else
						{
							SendInfoMessage(playerid, 0, "553", "El ID el vehículo introducído no existe.");
					        return 1;
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "891", "Tú no tienes acceso al comando /IrC.");
				        return 1;
					}

				}
		//			/IrCa [ID]					- Ir a una casa
				else if (strfind(cmdtext, "/IrCa ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 7)
					{
				        new IdHouse = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
						if (IdHouse > 0 && IdHouse <= MAX_HOUSE)
						{
							SetPlayerPos(playerid, HouseData[IdHouse][PosX], HouseData[IdHouse][PosY], HouseData[IdHouse][PosZ]);
							SetPlayerFacingAngle(playerid, HouseData[IdHouse][PosZZ]);
		                }
		                else
		                {
							SendInfoMessage(playerid, 0, "1275", "El ID de casa introducido no existe!");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "1274", "Tú no tienes acceso al comando /IrCa.");
					}

				}
		//			/IrN [ID]					- Ir a un negocio
				else if (strfind(cmdtext, "/IrN ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 7)
					{
				        new BizzID = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
						if (BizzID > 0 && BizzID <= MAX_BIZZ)
						{
							SetPlayerPos(playerid, NegociosData[BizzID][PosOutX], NegociosData[BizzID][PosOutY], NegociosData[BizzID][PosOutZ]);
							SetPlayerFacingAngle(playerid, NegociosData[BizzID][PosOutZZ]);
		                }
		                else
		                {
							SendInfoMessage(playerid, 0, "1277", "El ID de negocio introducido no existe!");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "1276", "Tú no tienes acceso al comando /IrN.");
					}

				}
		//			/Debug Info
			  	else if (strcmp("/Debug Info", cmdtext, true, 11) == 0 && strlen(cmdtext) == 11)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8)
					{
					    new Found;
						new StringFormat[MAX_TEXT_CHAT];
						for (new i = 1; i <= MAX_CAR; i++)
						{
					        if (IsVehicleBug(i, false))
					        {
								format(StringFormat, sizeof(StringFormat), "%s El coche con ID %i se encuentra bugeado.",LOGO_STAFF, i);
					            SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, StringFormat);
								Found++;
							}
						}
						if (Found)
						{
							format(StringFormat, sizeof(StringFormat), "%s Hay en total %i coches bugeados.",LOGO_STAFF, Found);
				            SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, StringFormat);
						}
						else
						{
							SendInfoMessage(playerid, 0, "1370", "No se encontraron vehículos bugeados!");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "1371", "Tú no tienes acceso al comando /Debug Info.");
				        return 1;
					}
				}
		//			/Traerc Bug
			  	else if (strcmp("/Traerc Bug", cmdtext, true, 11) == 0 && strlen(cmdtext) == 11)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8)
					{
					    new Found;
						new Float:MyPoss[3];GetPlayerPos(playerid, MyPoss[0], MyPoss[1], MyPoss[2]);
						for (new i = 1; i <= MAX_CAR; i++)
						{
						    if (GetVehicleVirtualWorld(i) > 999 && !IsWorldOfGarage(GetVehicleVirtualWorld(i)))
						    {
								SetVehiclePos(i,  MyPoss[0] + 3, MyPoss[1], MyPoss[2]);
								LinkVehicleToInteriorEx(i, GetPlayerInteriorEx(playerid));
								SetVehicleVirtualWorldEx(i, GetPlayerVirtualWorld(playerid));
								Found++;
							}
						}
						if (Found)
						{
							new StringFormat[MAX_TEXT_CHAT];
							format(StringFormat, sizeof(StringFormat), "%s has desbugeado %i coches.",LOGO_STAFF, Found);
				            SendClientMessage(playerid, COLOR_MENSAJES_DE_AVISOS, StringFormat);
						}
						else
						{
							SendInfoMessage(playerid, 0, "1308", "No se encontraron vehículos bugeados!");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "1307", "Tú no tienes acceso al comando /Traerc Bug.");
				        return 1;
					}
				}
		//			/TraerC [ID]					- Traer un coche
				else if (strfind(cmdtext, "/TraerC ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 6)
					{
						if (strval(cmdtext[8]) > 0 && strval(cmdtext[8]) <= MAX_CAR_PUBLIC)
						{

							RemoveVehicleHidden(strval(cmdtext[8]));
							new Float:MyPoss[3];GetPlayerPos(playerid, MyPoss[0], MyPoss[1], MyPoss[2]);
							SetVehiclePos(strval(cmdtext[8]),  MyPoss[0] + 3, MyPoss[1], MyPoss[2]);

							LinkVehicleToInteriorEx(strval(cmdtext[8]), GetPlayerInteriorEx(playerid));
							SetVehicleVirtualWorldEx(strval(cmdtext[8]), GetPlayerVirtualWorld(playerid));
						}
						else
						{
							SendInfoMessage(playerid, 0, "1447", "El vehículo que desea traer no existe.");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "189", "Tú no tienes acceso al comando /TraerC.");
				        return 1;
					}
				}
				/*else if (strfind(cmdtext, "/Clima especial ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 4)
					{
					    new SendString[4];
						strmid(SendString, cmdtext, 16, strlen(cmdtext), sizeof(SendString));

		       			Comandos_Admin(23, playerid, 0, PlayersData[playerid][Admin], strval(SendString), "0");
						//}
						return 1;
					}
					else
					{
						SendInfoMessage(playerid, 0, "192", "Tú no tienes acceso al comando /Clima Especial.");
				        return 1;
					}

				}*/
					//		20-	*		/Clima [Tipo]					- Cambiar el clima
			    else if (strfind(cmdtext, "/Clima ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 9)
					{
					    new SendString[4];
						strmid(SendString, cmdtext, 7, strlen(cmdtext), sizeof(SendString));

						/*if (strval(SendString) > 45)
						{
							SendInfoMessage(playerid, 0, "191", "El tipo de clima esta fuera de los límites, recuerda que el máximo es 45.");
						}
						else
						{*/
		       			Comandos_Admin(20, playerid, 0, PlayersData[playerid][Admin], strval(SendString), "0");
						//}
						return 1;
					}
					else
					{
						SendInfoMessage(playerid, 0, "192", "Tú no tienes acceso al comando /Clima.");
				        return 1;
					}

				}
		//		21- *       /MsgEX [Estilo] [Texto]         - Mensaje EX
				else if (strfind(cmdtext, "/MsgEX ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 9)
					{
						new Datos_Picados[4];
						new DatosOriginales[150];

						strmid(DatosOriginales, cmdtext, 7, strlen(cmdtext), sizeof(DatosOriginales));
						new wPos;

						wPos = strfind(DatosOriginales, " ", false); // HOLA³QUE³PASA³
						if (wPos != -1 || wPos > 4)
						{
							strmid(Datos_Picados[0], DatosOriginales, 0, wPos, sizeof(DatosOriginales));
							strdel(DatosOriginales, 0, wPos + 1);

							if (strval(Datos_Picados[0]) >= 0 && strval(Datos_Picados[0]) <= 6 )
							{
							    if (strval(Datos_Picados[0]) != 2)
							    {
									Comandos_Admin(21, playerid, 0, PlayersData[playerid][Admin], strval(Datos_Picados[0]), DatosOriginales);
								}
								else
								{
									SendInfoMessage(playerid, 0, "193", "El estilo número 2 esta deshabilitado por razones de bugs.");
								}
	    					}
							else
							{
									SendInfoMessage(playerid, 0, "194", "El número tipo de estilo esta fuera de los límites, recurde que el estilo debe comprender entre 0 y 6.");
							}
							return 1;
						}
						else
						{
							SendInfoMessage(playerid, 0, "195", "Ha introducído mal el sintaxis del comando /MsgEX [ESTILO] [TEXTO]. Ejemplo correcto: /MsgEx 2 Hola Mundo.");
							return 1;
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "196", "Tú no tienes acceso al comando /MsgEX.");
				        return 1;
					}
				}
				//COMANDO: /MsgADMIN
				else if (strfind(cmdtext, "/MsgADMIN ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 9)
					{
						new TD_Type = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
						new TD_Text[MAX_TEXT_CHAT];
        				if(strlen(cmdtext) >= 17 && strlen(cmdtext) <= 60)
        				{
                			if(TD_Type >= 1 && TD_Type <= 2)
							{
							    if(aProgress == false)
							    {
							        TypeMsgAdmin = TD_Type;
									switch(TD_Type)
                					{
                						case 1:
                						{
                							AnuncioBox(320.0000, 1.0000);
 										}
               							case 2:
                						{
                							AnuncioBox(320.0000, 436.0000);
                						}
  									}
  									strmid(TD_Text, cmdtext, 12, strlen(cmdtext), sizeof(TD_Text));
									aProgress = true;
        							TD_Position = 641.0000;
                					format(sAnuncio, sizeof sAnuncio, "%s", TD_Text);
                					TextDrawAnuncio();
                					SendInfoMessage(playerid, 3, "0", "El anuncio fue enviado exitosamente!");
							    }
							    else
							    {
							        SendInfoMessage(playerid, 0, "100", "Ya hay un anuncio en progreso!");
							    }
							}
							else
							{
							    SendInfoMessage(playerid, 2, "0", "Debes usar: /MsgAdmin [Tipo] [Texto] (Recuerda que el tipo es 1 o 2)!");
							}
        				}
						else
						{
						    SendInfoMessage(playerid, 0, "100", "Los anuncios deben contener más de 5 caracteres y menos de 50!");
						}
					}
					else
					{
					    SendInfoMessage(playerid, 0, "100", "Tú no tienes acceso al comando /MsgAdmin.");
					}
				}
				//COMANDO: /Staff
				else if (strcmp("/Staff", cmdtext, true, 6) == 0 && strlen(cmdtext) == 6)
				{
				    new MsgAdminsOn[100];
				    new FoundAdmin;
					for (new i = 0; i < MAX_PLAYERS; i++)
					{
						if (IsPlayerConnected(i) && PlayersDataOnline[i][State] == 3 && PlayersData[i][Admin] && PlayersData[i][Admin] != 9)
						{
						    if (!FoundAdmin)
						    {
							    SendClientMessage(playerid, 0x505050FF, "{505050}»»»»»»»»»»»»»»»»»» {008228}S{00B428}taff {008228}O{00B428}nline {505050}««««««««««««««««««");
								FoundAdmin++;
							}
							format(MsgAdminsOn, sizeof(MsgAdminsOn), "{0037FF}* %s %s [ID: %i]", AdminsRangos[PlayersData[i][Admin] - 1], PlayersDataOnline[i][NameOnlineFix], i);
						    SendClientMessage(playerid, 0x505050FF, MsgAdminsOn);
						}
					}
					if (!FoundAdmin)
					{
					    SendClientMessage(playerid, 0x505050FF, "{910000}»»»»»»»»»»»»» {E10000}No hay miembros del Staff en servicio {910000}«««««««««««««");
					}
				}
		//		22- *		/Staff [ID] [Nivel]				- Dar un nivel a un miembro de el Staff
				else if (strfind(cmdtext, "/Staff ", true) == 0)
				{
					MsgAdminUseCommands(9, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 9)
					{
						new Datos_Picados[4];
						new DatosOriginales[120];

						strmid(DatosOriginales, cmdtext, 7, strlen(cmdtext), sizeof(DatosOriginales));
						new wPos;

						wPos = strfind(DatosOriginales, " ", false); // HOLA³QUE³PASA³
						if (wPos != -1 || wPos > 4)
						{
							strmid(Datos_Picados[0], DatosOriginales, 0, wPos, sizeof(DatosOriginales));
							strdel(DatosOriginales, 0, wPos + 1);
							if (strval(DatosOriginales) <= 9 && strval(DatosOriginales) >= 0)
							{
								if (IsPlayerConnected(strval(Datos_Picados[0])))
								{
								    Comandos_Admin(22, playerid, strval(Datos_Picados[0]), PlayersData[playerid][Admin], strval(DatosOriginales), "0");
								    return 1;
								}
								else
								{
									SendInfoMessage(playerid, 0, "197", "El jugador del Staff al que se refiere no esta conectado.");
									return 1;
								}
						    }
						    else
							{
								SendInfoMessage(playerid, 0, "198", "El número de level de Staff debe estar comprendido entre 0 y 8, donde 0 sera igual a expulsión.");
								return 1;
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "199", "Ha introducído mal el sintaxis del comando /Staff. Ejemplo correcto: /Staff 22 1.");
							return 1;
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "200", "Tú no tienes acceso a el comando /Staff.");
				        return 1;
					}
				}
					//			/Skin [ID]                  - Forzar a cambiar un Skin a un jugador
				else if (strfind(cmdtext, "/Skin ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 6)
					{
					    new playeridSkin[5];
					    strmid(playeridSkin, cmdtext, 6, strlen(cmdtext), sizeof(playeridSkin));
						if (IsPlayerConnected(strval(playeridSkin)))
						{
	                        SetPlayerSelectedTypeSkin(strval(playeridSkin), false);
						}
						else
						{
							SendInfoMessage(playerid, 0, "202", "El jugador no se encuentra conectado.");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "203", "Tú no tienes acceso al comando /Skin.");
				        return 1;
					}
				}
				// COMANDO: /SkinEx [ID] [ID_Rango]
				else if (strfind(cmdtext, "/SkinEx ", true) == 0)
				{
					MsgAdminUseCommands(9, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 8)
					{
					    new idTochange = strval(cmdtext[GetPosSpace(cmdtext, 1)]);
						new SkinID 	=  strval(cmdtext[GetPosSpace(cmdtext, 2)]);
					    if (IsPlayerConnected(idTochange))
						{
							if (strlen(cmdtext) > 3)
							{
								if (SkinID >= 20001 && SkinID <= 20135  || SkinID >= 0 && SkinID <= 311)/*[20024-20028 STAFF SOLO MEDIANTE /ADMINON]*/
							    {
							        if (SkinID != GetPlayerSkin(idTochange))
							        {
										new MsgSkinUser[MAX_TEXT_CHAT]; format(MsgSkinUser, sizeof(MsgSkinUser), "Has asignado el skin \"%i\" a %s", SkinID, PlayersDataOnline[idTochange][NameOnlineFix]);
										new MsgSkinMe[MAX_TEXT_CHAT]; format(MsgSkinMe, sizeof(MsgSkinMe), "%s te ha asignado el skin \"%i\"", PlayersDataOnline[playerid][NameOnlineFix], SkinID);
				                        SendInfoMessage(idTochange, 3, "0", MsgSkinMe);
				                        SendInfoMessage(playerid, 3, "0", MsgSkinUser);
	  			                        SetPlayerSkinEx(idTochange, SkinID);
	  			                        PlayersData[idTochange][Skin]   = SkinID;
		                            }
		                            else
		                            {
										SendInfoMessage(playerid, 0, "281", "Ese jugador ya tiene ese skin asignado.");
									}
	                           	}
								else
								{
									SendInfoMessage(playerid, 0, "114", "El ID de Skin introducído es incorrecto, debe ser Entre 0 y 312 o 20000 y 20129");
								}
							}
							else
							{
								SendInfoMessage(playerid, 0, "116", "Ha introducído mal el sintaxis del comando /SkinEx. Ejemplo correcto: /SkinEx 2 113");
							}
						}
						else
						{
							SendInfoMessage(playerid, 0, "183", "El jugador al que desea cambiarle el skin no está conectado.");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "203", "Tú no tienes acceso al comando /SkinEx [ID] [SkinID]");
			        	return 1;
					}
				}
		//			/StatsEx [ID]                  - Ver las estadisticas de un jugador
				else if (strfind(cmdtext, "/StatsEx ", true) == 0)
				{
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 7)
					{
						if (IsPlayerConnected(strval(cmdtext[9])))
						{
							GetPlayerStats(strval(cmdtext[9]), playerid);
						}
						else
						{
							SendInfoMessage(playerid, 0, "230", "El jugador no se encuentra conectado.");
						}
					}
					else
					{
						SendInfoMessage(playerid, 0, "231", "Tú no tienes acceso al comando /StastEx.");
				        return 1;
					}
				}
		//			/Aparcar NFS                   - Aparcar un coche un NFS en un concecionarios
			  	else if (strcmp("/Aparcar NFS", cmdtext, true, 12) == 0 && strlen(cmdtext) == 12)
			    {
					if (PlayersData[playerid][Faccion] == NFS && PlayersData[playerid][Rango] <= 1)
				    {
						new MyNearCar = IsPlayerInNearVehicle(playerid);
		   				if (MyNearCar)
					    {
					        if (MyNearCar <= MAX_CAR_DUENO)
					        {
					            if (IsPlayerInConcencionario(playerid))
					            {
					                if (strlen(DataCars[MyNearCar][Dueno]) == 1)
					                {
								        AparcarVehicle(playerid, MyNearCar);
									}
									else
									{
										SendInfoMessage(playerid, 0, "712", "Vehículos con dueño no puedes aparcar");
									}
								}
								else
								{
									SendInfoMessage(playerid, 0, "713", "No te encuentras en el concesionario");
								}
					        }
							else
							{
								SendInfoMessage(playerid, 0, "714", "Solo se pueden aparcar vehículos públicos");
							}
					    }
					}
					else
					{
						SendInfoMessage(playerid, 0, "715", "Usted no es Jefe ni Encargado de NFS");
				    }
			    }
		//			/AparcarEx                   - Aparcar cualquier coche donde quieras
			  	else if (strcmp("/AparcarEx", cmdtext, true, 10) == 0 && strlen(cmdtext) == 10)
			    {
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 5)
					{
						new MyNearCar = IsPlayerInNearVehicle(playerid);
		   				if (MyNearCar)
					    {
					        if (MyNearCar <= MAX_CAR_DUENO) // MAX_CAR_DUENO - MAX_CAR_FACCION
					        {
						        AparcarVehicle(playerid, MyNearCar);
							}
							else
							{
								SendInfoMessage(playerid, 0, "287", "Solo se pueden aparcar vehículos públicos");
							}
					    }
					}
					else
					{
						SendInfoMessage(playerid, 0, "286", "Tú no tienes acceso al comando /AparcarEx.");
				        return 1;
					}
				}
		//			/AparcarFac                   - Aparcar cualquier coche donde quieras
			  	//else if (strcmp("/AparcarFac", cmdtext, true, 10) == 0 && strlen(cmdtext) == 10)
			  	else if (strfind(cmdtext, "/AparcarFac", true) == 0)
			    {
					MsgAdminUseCommands(8, playerid, cmdtext);
					if (PlayersData[playerid][Admin] >= 7)
					{
						new MyNearCar = IsPlayerInNearVehicle(playerid);
		   				if (MyNearCar)
					    {
					        if (MyNearCar <= MAX_CAR_FACCION) // MAX_CAR_DUENO - MAX_CAR_FACCION
					        {
						        AparcarVehicleEx(playerid, MyNearCar);
							}
							else
							{
								SendInfoMessage(playerid, 0, "287", "Solo se pueden aparcar vehículos de facción");
							}
					    }
					}
					else
					{
						SendInfoMessage(playerid, 0, "286", "Tú no tienes acceso al comando /AparcarFac.");
				        return 1;
					}
				}
		//			/Precios Licencias                   - Cambiar precio de licencias
    			else if (strfind(cmdtext, "/Precios licencias", true) == 0)
				{
				    if((PlayersData[playerid][Faccion] == LICENCIEROS && PlayersData[playerid][Rango] == 0) ||
						(PlayersData[playerid][Admin] >= 7 && PlayersDataOnline[playerid][AdminOn]) || PlayersData[playerid][Admin] >= 9)
				    {
						ShowDialogPreciosLicencia(playerid);
					}
					else
					{
					    SendInfoMessage(playerid, 0, "1652", "Usted no puede cambiar los precios de las licencias.");
					}
				}
			    // NO COMMANDS SEND
				else
				{
					SendInfoMessage(playerid, 0, "204", "El comando introducído no es válido, para más información consulte /Ayuda");
				}
			}
			else
			{
				SendInfoMessage(playerid, 0, "205", "El comando introducído no existe, para más información consulte /Ayuda");
			}
		}
		else
		{
			SendInfoMessage(playerid, 0, "1091", "No puede utilizar comandos mientras está en las cámaras de seguridad!");
		}
	}
	else
	{
		SendInfoMessage(playerid, 0, "206", "Debe ingresar a el servidor antes de utilizar cualquier comando o ha sido silenciado.");
	}